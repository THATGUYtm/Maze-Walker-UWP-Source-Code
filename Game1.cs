using Microsoft.Xna.Framework;
using Microsoft.Xna.Framework.Audio;
using Microsoft.Xna.Framework.Graphics;
using Microsoft.Xna.Framework.Input;
using Microsoft.Xna.Framework.Media;
using System;
using System.Collections.Generic;
using System.IO;
using System.IO.IsolatedStorage;
using System.Xml;
using System.Xml.Serialization;

namespace Test
{
    public class Game1 : Game {
        //
        private void SerializeElement(string filename)
        {
            XmlSerializer ser = new XmlSerializer(typeof(XmlElement));
            XmlElement myElement = new XmlDocument().CreateElement("MyElement", "ns");
            myElement.InnerText = "Hello World";
            TextWriter writer = new StreamWriter(filename, false);
            ser.Serialize(writer, myElement);
            writer.Close();
        }

        private void SerializeNode(string filename)
        {
            XmlSerializer ser = new XmlSerializer(typeof(XmlNode));
            XmlNode myNode = new XmlDocument().
            CreateNode(XmlNodeType.Element, "MyNode", "ns");
            myNode.InnerText = "Hello Node";
            TextWriter writer = new StreamWriter(filename);
            ser.Serialize(writer, myNode);
            writer.Close();
        }

        //

        public static GraphicsDeviceManager _graphics;

        private SpriteBatch _spriteBatch;
        private SpriteBatch targetBatch;
        private SpriteBatch LevelTransition;

        private RenderTarget2D LevelTransitionTarget;
        private RenderTarget2D target;

        private SpriteFont font;

        List<SoundEffect> soundEffects;

        Song LevelMusic;

        Texture2D Tileset;

        Vector2 PlayerPos;

        Rectangle sourceRectangle = new Rectangle(280, 40, 40, 40);

        Random rnd = new Random();

        float Time = 0.0f;

        public int TEMP;
        public int PlayerDir = 3;
        public int PLayerAniTime = 0;
        public int WalkAniTime = 0;
        public int x = 40;
        public int y = 40;
        public int CurrentLevel = 0;
        public int SafeZoneY = 0;
        public int KeysNeeded = 1;
        public int KeysInHand = 0;
        public int FadeDir = 1;
        public int FadeStop = 0;
        public int Deaths = 0;
        public int TotalDeaths = 0;
        public int SpikeNum = 0;

        public int[] Fence = new int[10];
        public int[] Lock = new int[10];
        public int[] Rock = { 0, 0, 0 };
        public int[] Spikes = { 0 };
        public int[] Enimes = new int[120];
        public int[] Timer = { 0, 0, 0 };

        public static string[] Map = new string[360];

        public float DeadZone = 0.2f;
        public float FadeAlpha = 0.0f;

        public bool SafeZoneT = false;
        public bool SZBP = false;
        public bool HasSpikes = false;
        public bool HasEnimes = false;
        public bool OnTeleport = false;
        public bool HardMode = false;
        public bool GODMODE = true;

        public Game1() {
            _graphics = new GraphicsDeviceManager(this);
            Content.RootDirectory = "Content";
            IsMouseVisible = false;
            soundEffects = new List<SoundEffect>();
        }

        protected override void Initialize() {
            Transition(2);
            MediaPlayer.Volume = 0.5f;
            SoundEffect.MasterVolume = 0.5f;
            SerializeElement("C:/Users/Zachary/OneDrive/Desktop/TEST.xml");
            SerializeNode("C:/Users/Zachary/OneDrive/Desktop/TEST1.xml");
            base.Initialize();
        }

        void MediaPlayer_MediaStateChanged(object sender, System.EventArgs e) {
            int TEMP2 = TEMP;
            TEMP = rnd.Next(0, 4);
            while (TEMP2 == TEMP) {
                TEMP = rnd.Next(0, 4);
            }
            switch (TEMP) {
                case 0: LevelMusic = Content.Load<Song>("LevelThemeOne"); break;
                case 1: LevelMusic = Content.Load<Song>("LevelThemeTwo"); break;
                case 2: LevelMusic = Content.Load<Song>("LevelThemeThree"); break;
                case 3: LevelMusic = Content.Load<Song>("LevelThemeFour"); break;
                case 4: LevelMusic = Content.Load<Song>("LevelThemeFive"); break;
            }
            MediaPlayer.Play(LevelMusic);
        }

        protected override void LoadContent() {
            _spriteBatch = new SpriteBatch(GraphicsDevice);
            targetBatch = new SpriteBatch(GraphicsDevice);
            LevelTransition = new SpriteBatch(GraphicsDevice);
            LevelTransitionTarget = new RenderTarget2D(GraphicsDevice, GraphicsDevice.DisplayMode.Width, GraphicsDevice.DisplayMode.Height);
            target = new RenderTarget2D(GraphicsDevice, 800, 720);
            Tileset = Content.Load<Texture2D>("Original");
            font = Content.Load<SpriteFont>("MainFont");
            soundEffects.Add(Content.Load<SoundEffect>("BoxPushSoundEffect"));
            soundEffects.Add(Content.Load<SoundEffect>("EnimeMovingSoundEffect"));
            soundEffects.Add(Content.Load<SoundEffect>("KeySoundEffect"));
            soundEffects.Add(Content.Load<SoundEffect>("LevelFinnishSoundEffect"));
            soundEffects.Add(Content.Load<SoundEffect>("LockSoundEffect"));
            soundEffects.Add(Content.Load<SoundEffect>("MenuChangeSoundEffect"));
            soundEffects.Add(Content.Load<SoundEffect>("MenuSelectSoundEffect"));
            soundEffects.Add(Content.Load<SoundEffect>("SpikeSoundEffect"));
            soundEffects.Add(Content.Load<SoundEffect>("WalkingSoundEffect"));
            TEMP = rnd.Next(0, 4);
            switch (TEMP) {
                case 0: LevelMusic = Content.Load<Song>("LevelThemeOne"); break;
                case 1: LevelMusic = Content.Load<Song>("LevelThemeTwo"); break;
                case 2: LevelMusic = Content.Load<Song>("LevelThemeThree"); break;
                case 3: LevelMusic = Content.Load<Song>("LevelThemeFour"); break;
                case 4: LevelMusic = Content.Load<Song>("LevelThemeFive"); break;
            }
            MediaPlayer.Play(LevelMusic);
            MediaPlayer.MediaStateChanged += MediaPlayer_MediaStateChanged;

        }

        protected override void Update(GameTime gameTime) {
            MediaPlayer.Volume = 0.1f;
            SoundEffect.MasterVolume = 0.1f;
            IsMouseVisible = false;
            if (FadeDir == 0) {
                Time += (float)gameTime.ElapsedGameTime.TotalSeconds;
                Timer[0] = (int)Time;
                if (Timer[0] > 59) {
                    Timer[1]++;
                    Timer[0] = 0;
                    Time = 0;
                }
                if (Timer[1] > 59) {
                    Timer[2]++;
                    Timer[1] = 0;
                }

                if (GamePad.GetState(PlayerIndex.One).Buttons.Start == ButtonState.Pressed || Keyboard.GetState().IsKeyDown(Keys.Enter))
                    Transition(0);
                if (PLayerAniTime == 0 && Rock[0] == 0) {
                    int ButtonsPressed = 0;
                    if (((GamePad.GetState(PlayerIndex.One).DPad.Left == ButtonState.Pressed && SafeZoneT == false) || GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.X < -DeadZone || (Keyboard.GetState().IsKeyDown(Keys.Left) && Keyboard.GetState().IsKeyUp(Keys.Right)) || (Keyboard.GetState().IsKeyDown(Keys.A) && Keyboard.GetState().IsKeyUp(Keys.D))) && ButtonsPressed == 0) {
                        if (Map[(y / 2) + ((x / 40) - 1)] != "0x05") {
                            switch (Map[(y / 2) + ((x / 40) - 1)]) {
                                case "0x00": case "0x01": case "0x03": case "0x04": case "0x13": case "0x15": case "0x16": case "0x17": case "0x18": case "0x19": case "0x1A": case "0x46":
                                    ButtonsPressed++;
                                    PlayerDir = 0;
                                    PLayerAniTime = 1;
                                    Rock[0] = 0;
                                    break;
                            }
                        } else {
                            if (Map[(y / 2) + ((x / 40) - 2)] == "0x00") {
                                ButtonsPressed++;
                                var instance = soundEffects[0].CreateInstance();
                                instance.Volume = 0.2f;
                                instance.Play();
                                PlayerDir = 0;
                                PLayerAniTime = 1;
                                Map[(y / 2) + ((x / 40) - 1)] = "0x00";
                                Rock[0] = 1;
                                Rock[1] = x - 40;
                                Rock[2] = y;
                            }
                        }
                    }
                    if (((GamePad.GetState(PlayerIndex.One).DPad.Up == ButtonState.Pressed && SafeZoneT == false) || GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y > DeadZone || (Keyboard.GetState().IsKeyDown(Keys.Up) && Keyboard.GetState().IsKeyUp(Keys.Down)) || (Keyboard.GetState().IsKeyDown(Keys.W) && Keyboard.GetState().IsKeyUp(Keys.S))) && ButtonsPressed == 0) {
                        if (Map[(((y / 40) - 1) * 20) + (x / 40)] != "0x05") {
                            switch (Map[(((y / 40) - 1) * 20) + (x / 40)]) {
                                case "0x00": case "0x01": case "0x03": case "0x04": case "0x13": case "0x15": case "0x16": case "0x17": case "0x18": case "0x19": case "0x1A": case "0x46":
                                    ButtonsPressed++;
                                    PlayerDir = 1;
                                    PLayerAniTime = 1;
                                    Rock[0] = 0;
                                    break;
                            }
                        } else {
                            if (Map[(((y / 40) - 2) * 20) + (x / 40)] == "0x00") {
                                ButtonsPressed++;
                                var instance = soundEffects[0].CreateInstance();
                                instance.Volume = 0.5f;
                                instance.Play();
                                PlayerDir = 1;
                                PLayerAniTime = 1;
                                Map[(((y / 40) - 1) * 20) + (x / 40)] = "0x00";
                                Rock[0] = 1;
                                Rock[1] = x;
                                Rock[2] = y - 40;
                            }
                        }
                    }
                    if (((GamePad.GetState(PlayerIndex.One).DPad.Right == ButtonState.Pressed && SafeZoneT == false) || GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.X > DeadZone || (Keyboard.GetState().IsKeyDown(Keys.Right) && Keyboard.GetState().IsKeyUp(Keys.Left)) || (Keyboard.GetState().IsKeyDown(Keys.D) && Keyboard.GetState().IsKeyUp(Keys.A))) && ButtonsPressed == 0) {
                        if (Map[(y / 2) + ((x / 40) + 1)] != "0x05") {
                            switch (Map[(y / 2) + ((x / 40) + 1)]) {
                                case "0x00": case "0x01": case "0x03": case "0x04": case "0x13": case "0x15": case "0x16": case "0x17": case "0x18": case "0x19": case "0x1A": case "0x46":
                                    ButtonsPressed++;
                                    PlayerDir = 2;
                                    PLayerAniTime = 1;
                                    Rock[0] = 0;
                                    break;
                            }
                        } else {
                            if (Map[(y / 2) + ((x / 40) + 2)] == "0x00") {
                                ButtonsPressed++;
                                var instance = soundEffects[0].CreateInstance();
                                instance.Volume = 0.5f;
                                instance.Play();
                                PlayerDir = 2;
                                PLayerAniTime = 1;
                                Map[(y / 2) + ((x / 40) + 1)] = "0x00";
                                Rock[0] = 1;
                                Rock[1] = x + 40;
                                Rock[2] = y;
                            }
                        }
                    }
                    if (((GamePad.GetState(PlayerIndex.One).DPad.Down == ButtonState.Pressed && SafeZoneT == false) || GamePad.GetState(PlayerIndex.One).ThumbSticks.Left.Y < -DeadZone || (Keyboard.GetState().IsKeyDown(Keys.Down) && Keyboard.GetState().IsKeyUp(Keys.Up)) || (Keyboard.GetState().IsKeyDown(Keys.S) && Keyboard.GetState().IsKeyUp(Keys.W))) && ButtonsPressed == 0) {
                        if (Map[(((y / 40) + 1) * 20) + (x / 40)] != "0x05") {
                            switch (Map[(((y / 40) + 1) * 20) + (x / 40)]) {
                                case "0x00": case "0x01": case "0x03": case "0x04": case "0x13": case "0x15": case "0x16": case "0x17": case "0x18": case "0x19": case "0x1A": case "0x46":
                                    ButtonsPressed++;
                                    PlayerDir = 3;
                                    PLayerAniTime = 1;
                                    Rock[0] = 0;
                                    break;
                            }
                        } else {
                            if (Map[(((y / 40) + 2) * 20) + (x / 40)] == "0x00") {
                                ButtonsPressed++;
                                var instance = soundEffects[0].CreateInstance();
                                instance.Volume = 0.5f;
                                instance.Play();
                                PlayerDir = 3;
                                PLayerAniTime = 1;
                                Map[(((y / 40) + 1) * 20) + (x / 40)] = "0x00";
                                Rock[0] = 1;
                                Rock[1] = x;
                                Rock[2] = y + 40;
                            }
                        }
                    }
                    if (ButtonsPressed == 0) {
                        switch (PlayerDir) {
                            case 0: sourceRectangle = new Rectangle(400, 40, 40, 40); break;
                            case 1: sourceRectangle = new Rectangle(160, 40, 40, 40); break;
                            case 2: sourceRectangle = new Rectangle(40, 40, 40, 40); break;
                            case 3: sourceRectangle = new Rectangle(280, 40, 40, 40); break;
                        }
                        PostionCheck();
                    }
                } else {
                    if (Rock[0] == 0) {
                        switch (PlayerDir) {
                            case 0: x -= 10; break;
                            case 1: y -= 10; break;
                            case 2: x += 10; break;
                            case 3: y += 10; break;
                        }
                        WalkAniTime++;
                        PlayerAnimation(PlayerDir, WalkAniTime);
                        PLayerAniTime++;
                        if (PLayerAniTime >= 5) {
                            PLayerAniTime = 0;
                            PostionCheck();
                        }
                    } else {
                        switch (PlayerDir) {
                            case 0: x -= 5; Rock[1] -= 5; break;
                            case 1: y -= 5; Rock[2] -= 5; break;
                            case 2: x += 5; Rock[1] += 5; break;
                            case 3: y += 5; Rock[2] += 5; break;
                        }
                        PLayerAniTime++;
                        if (PLayerAniTime >= 9) {
                            switch (PlayerDir) {
                                case 0: Map[(y / 2) + ((x / 40) - 1)] = "0x05"; break;
                                case 1: Map[(((y / 40) - 1) * 20) + (x / 40)] = "0x05"; break;
                                case 2: Map[(y / 2) + ((x / 40) + 1)] = "0x05"; break;
                                case 3: Map[(((y / 40) + 1) * 20) + (x / 40)] = "0x05"; break;
                            }
                            Rock[0] = 0;
                            PLayerAniTime = 0;
                        }
                    }
                }
            }
            PlayerPos = new Vector2(x, y);
            if ((GamePad.GetState(PlayerIndex.One).Buttons.A == ButtonState.Pressed || Keyboard.GetState().IsKeyDown(Keys.P)) && SZBP == false) {
                SafeZoneT = !SafeZoneT;
                SZBP = true;
            }
            if ((GamePad.GetState(PlayerIndex.One).Buttons.A == ButtonState.Pressed || Keyboard.GetState().IsKeyDown(Keys.P)) && SZBP == true)
                SZBP = false;
            if (SafeZoneT == true) {
                if (GamePad.GetState(PlayerIndex.One).DPad.Down == ButtonState.Pressed || Keyboard.GetState().IsKeyDown(Keys.K)) {
                    if (SafeZoneY < 30)
                        SafeZoneY++;
                }
                if (GamePad.GetState(PlayerIndex.One).DPad.Up == ButtonState.Pressed || Keyboard.GetState().IsKeyDown(Keys.I)) {
                    if (SafeZoneY > -30)
                        SafeZoneY--;
                }
            }
            if (HasEnimes == true) {
                Enimes[0]++;
                if (Enimes[0] >= 45 && Rock[0] != 1) {
                    soundEffects[1].Play();
                    Enimes[0] = 0;
                    for (int i = 2; i < Enimes[1] + 2; i++) {
                        switch (Map[Enimes[i]]) {
                            case "0x17":
                                if (Map[Enimes[i] - 1] == "0x00") {
                                    Map[Enimes[i]] = "0x00";
                                    Map[Enimes[i] - 1] = "0x17";
                                    Enimes[i] -= 1;
                                } else
                                    Map[Enimes[i]] = "0x19";
                                break;
                            case "0x18":
                                if (Map[Enimes[i] - 20] == "0x00") {
                                    Map[Enimes[i]] = "0x00";
                                    Map[Enimes[i] - 20] = "0x18";
                                    Enimes[i] -= 20;
                                } else
                                    Map[Enimes[i]] = "0x1A";
                                break;
                            case "0x19":
                                if (Map[Enimes[i] + 1] == "0x00") {
                                    Map[Enimes[i]] = "0x00";
                                    Map[Enimes[i] + 1] = "0x19";
                                    Enimes[i] += 1;
                                } else
                                    Map[Enimes[i]] = "0x17";
                                break;
                            case "0x1A":
                                if (Map[Enimes[i] + 20] == "0x00") {
                                    Map[Enimes[i]] = "0x00";
                                    Map[Enimes[i] + 20] = "0x1A";
                                    Enimes[i] += 20;
                                } else
                                    Map[Enimes[i]] = "0x18";
                                break;
                        }
                    }
                }
            }
            if (HasSpikes == true) {
                if (Spikes[0] == 160) {
                    soundEffects[7].Play();
                    Spikes[0] = 0;
                    SpikeNum = 0;
                    for (int i = 0; i < 339; i++) {
                        switch (Map[i]) {
                            case "0x15":
                                SpikeNum++;
                                Map[i] = "0x16";
                                break;
                            case "0x16":
                                SpikeNum++;
                                Map[i] = "0x15";
                                break;
                        }
                    }
                }
                if (FadeDir == 0)
                    Spikes[0]++;
            } else
                SpikeNum = 0;
            base.Update(gameTime);
        }

        public void PlayerAnimation(int dir, int frame) {
            if (WalkAniTime >= 40) {
                WalkAniTime = 0;
                switch (dir) {
                    case 0: sourceRectangle = new Rectangle(0, 80, 40, 40); break;
                    case 1: sourceRectangle = new Rectangle(200, 40, 40, 40); break;
                    case 2: sourceRectangle = new Rectangle(120, 40, 40, 40); break;
                    case 3: sourceRectangle = new Rectangle(360, 40, 40, 40); break;
                }
            } else if (WalkAniTime >= 30) {
                switch (dir) {
                    case 0: sourceRectangle = new Rectangle(400, 40, 40, 40); break;
                    case 1: sourceRectangle = new Rectangle(160, 40, 40, 40); break;
                    case 2: sourceRectangle = new Rectangle(40, 40, 40, 40); break;
                    case 3: sourceRectangle = new Rectangle(280, 40, 40, 40); break;
                }
            } else if (WalkAniTime >= 20) {
                switch (dir) {
                    case 0: sourceRectangle = new Rectangle(440, 40, 40, 40); break;
                    case 1: sourceRectangle = new Rectangle(240, 40, 40, 40); break;
                    case 2: sourceRectangle = new Rectangle(80, 40, 40, 40); break;
                    case 3: sourceRectangle = new Rectangle(320, 40, 40, 40); break;
                }
            } else if (WalkAniTime >= 10) {
                switch (dir) {
                    case 0: sourceRectangle = new Rectangle(400, 40, 40, 40); break;
                    case 1: sourceRectangle = new Rectangle(160, 40, 40, 40); break;
                    case 2: sourceRectangle = new Rectangle(40, 40, 40, 40); break;
                    case 3: sourceRectangle = new Rectangle(280, 40, 40, 40); break;
                }
            } else {
                switch (dir) {
                    case 0: sourceRectangle = new Rectangle(0, 80, 40, 40); break;
                    case 1: sourceRectangle = new Rectangle(200, 40, 40, 40); break;
                    case 2: sourceRectangle = new Rectangle(120, 40, 40, 40); break;
                    case 3: sourceRectangle = new Rectangle(360, 40, 40, 40); break;
                }
            }
        }

        public void PostionCheck() {
            switch (Map[((y / 40) * 20) + (x / 40)]) {
                case "0x01":
                    soundEffects[3].Play();
                    CurrentLevel++;
                    Transition(0);
                    break;
                case "0x16": case "0x17": case "0x18": case "0x19": case "0x1A":
                    if (HardMode == true && GODMODE == false) {
                        CurrentLevel = 0;
                        Deaths = 0;
                        TotalDeaths++;
                        Time = 0;
                        Timer[0] = 0;
                        Timer[1] = 0;
                        Timer[2] = 0;
                        Transition(1);
                    } else if (GODMODE == false) {
                        Deaths++;
                        TotalDeaths++;
                        Transition(0);
                    }
                    break;
                case "0x04":
                    soundEffects[2].Play();
                    KeysInHand++;
                    Map[((y / 40) * 20) + (x / 40)] = "0x00";
                    if (KeysInHand == KeysNeeded) {
                        for (int i = 0; i < 360; i++) {
                            if (Map[i] == "0x03") {
                                Map[i] = "0x01";
                                break;
                            }
                        }
                    }
                    break;
                case "0x13":
                    soundEffects[4].Play();
                    if (Fence[0] != 0) {
                        if (Fence[0] == 1) {
                            Map[((y / 40) * 20) + (x / 40)] = "0x00";
                            for (int i = 0; i < 360; i++) {
                                if (Map[i] == "0x12" || Map[i] == "0x14") {
                                    Map[i] = "0x00";
                                    break;
                                }
                            }
                        } else {
                            for (int i = 0; i < Fence[0]; i++) {
                                if (((y / 40) * 20) + (x / 40) == Lock[i]) {
                                    Map[Lock[i]] = "0x00";
                                    Map[Fence[i + 1]] = "0x00";
                                }
                            }
                        }
                    }
                    break;
                case "0x46":
                    if (OnTeleport == false) {
                        OnTeleport = true;
                        soundEffects[2].Play();
                        for (int i = 0; i < 339; i++) {
                            if (i != (y / 2) + (x / 40)) {
                                if (Map[i] == "0x46") {
                                    x = (i % 20) * 40;
                                    y = (i / 20) * 40;
                                    break;
                                }
                            }
                        }
                    }
                    break;
                default:
                    OnTeleport = false;
                    break;
            }
        }

        protected override void Draw(GameTime gameTime) {
            GraphicsDevice.SetRenderTarget(null);
            int th = GraphicsDevice.Viewport.Height - (SafeZoneY * 2);
            int ty = (GraphicsDevice.Viewport.Height / 2) - (th / 2);
            float TEMP = (GraphicsDevice.Viewport.Height - (SafeZoneY * 2)) * (800.0f / 720.0f);
            int tw = (int)TEMP;
            int tx = (GraphicsDevice.Viewport.Width / 2) - (tw / 2);
            int fx = (GraphicsDevice.Viewport.Width / 2) - 40;
            int fy = (GraphicsDevice.Viewport.Height / 2) - 60;
            GraphicsDevice.SetRenderTarget(target);
            GraphicsDevice.Clear(Color.CornflowerBlue);
            _spriteBatch.Begin();
            DrawBKG();
            _spriteBatch.Draw(Tileset, PlayerPos, sourceRectangle, Color.White);
            if (Rock[0] == 1)
                _spriteBatch.Draw(Tileset, new Vector2(Rock[1], Rock[2]), new Rectangle(160, 0, 40, 40), Color.White);
            _spriteBatch.End();
            GraphicsDevice.SetRenderTarget(LevelTransitionTarget);
            GraphicsDevice.Clear(Color.Black);
            LevelTransition.Begin();
            string STEMP;
            if (CurrentLevel < 100) {
                if (CurrentLevel < 10)
                    STEMP = "00" + CurrentLevel.ToString();
                else
                    STEMP = "0" + CurrentLevel.ToString();
            } else 
                STEMP = CurrentLevel.ToString();
            LevelTransition.DrawString(font, STEMP, new Vector2(fx, fy), Color.White);
            LevelTransition.Draw(Tileset, new Vector2(fx - 100, fy + 34), new Rectangle(280, 40, 40, 40), Color.White, 0f, Vector2.Zero, 1.93f, SpriteEffects.None, 0f);
            LevelTransition.End();
            GraphicsDevice.SetRenderTarget(null);
            GraphicsDevice.Clear(new Color(183, 142, 135));
            targetBatch.Begin();
            targetBatch.Draw(target, new Rectangle(tx, ty, tw, th), Color.White);
            switch (FadeDir) {
                case 1:
                    FadeAlpha += 0.05f;
                    if (FadeAlpha >= 1.0f)
                        FadeDir = 3;
                    break;
                case 2:
                    FadeAlpha -= 0.05f;
                    if (FadeAlpha <= 0.0f)
                        FadeDir = 0;
                    break;
                case 3:
                    FadeStop += 1;
                    if (FadeStop >= 80) {
                        FadeStop = 0;
                        Transition(1);
                    }
                    break;
            }
            string TTEMP1, TTEMP2, TTEMP3;
            if (Timer[0] < 10)
                TTEMP1 = "0" + Timer[0].ToString();
            else
                TTEMP1 = Timer[0].ToString();
            if (Timer[1] < 10)
                TTEMP2 = "0" + Timer[1].ToString();
            else
                TTEMP2 = Timer[1].ToString();
            if (Timer[2] < 10)
                TTEMP3 = "0" + Timer[2].ToString();
            else
                TTEMP3 = Timer[2].ToString();
            targetBatch.DrawString(font, TTEMP3 + ":" + TTEMP2 + ":" + TTEMP1, new Vector2(5, 0), Color.White, 0f, Vector2.Zero, 0.5f, SpriteEffects.None, 0f);
            if (FadeDir != 0)
                targetBatch.Draw(LevelTransitionTarget, Vector2.Zero, Color.White * FadeAlpha);
            targetBatch.End();
            base.Draw(gameTime);
        }

        public void DrawBKG(){
            int j;
            int i;
            for (i = 0; i < 800; i += 40) {
                for (j = 0; j < 720; j += 40)
                    _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(400, 200, 40, 40), Color.White);
            }
            for (i = 0; i < 800; i += 40) {
                for (j = 0; j < 720; j += 40) {
                    switch (Map[((j / 40) * 20) + (i / 40)]) {
                        case "0x01": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(400, 0, 40, 40), Color.White); break;
                        case "0x02": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(40, 80, 40, 40), Color.White); break;
                        case "0x03": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(440, 0, 40, 40), Color.White); break;
                        case "0x04": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(0, 40, 40, 40), Color.White); break;
                        case "0x05": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(160, 0, 40, 40), Color.White); break;
                        case "0x12": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(200, 0, 40, 40), Color.White); break;
                        case "0x13": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(240, 0, 40, 40), Color.White); break;
                        case "0x14": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(280, 0, 40, 40), Color.White); break;
                        case "0x15": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(320, 0, 40, 40), Color.White); break;
                        case "0x16": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(360, 0, 40, 40), Color.White); break;
                        case "0x17": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(40, 0, 40, 40), Color.White); break;
                        case "0x18": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(80, 0, 40, 40), Color.White); break;
                        case "0x19": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(120, 0, 40, 40), Color.White); break;
                        case "0x1A": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(0, 0, 40, 40), Color.White); break;
                        case "0x1B": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(80, 80, 40, 40), Color.White); break;
                        case "0x1C": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(120, 80, 40, 40), Color.White); break;
                        case "0x1D": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(160, 80, 40, 40), Color.White); break;
                        case "0x1E": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(200, 80, 40, 40), Color.White); break;
                        case "0x1F": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(240, 80, 40, 40), Color.White); break;
                        case "0x20": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(280, 80, 40, 40), Color.White); break;
                        case "0x21": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(320, 80, 40, 40), Color.White); break;
                        case "0x22": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(360, 80, 40, 40), Color.White); break;
                        case "0x23": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(400, 80, 40, 40), Color.White); break;
                        case "0x24": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(440, 80, 40, 40), Color.White); break;
                        case "0x25": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(0, 120, 40, 40), Color.White); break;
                        case "0x26": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(40, 120, 40, 40), Color.White); break;
                        case "0x27": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(80, 120, 40, 40), Color.White); break;
                        case "0x28": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(120, 120, 40, 40), Color.White); break;
                        case "0x29": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(160, 120, 40, 40), Color.White); break;
                        case "0x2A": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(200, 120, 40, 40), Color.White); break;
                        case "0x2B": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(240, 120, 40, 40), Color.White); break;
                        case "0x2C": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(280, 120, 40, 40), Color.White); break;
                        case "0x2D": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(320, 120, 40, 40), Color.White); break;
                        case "0x2E": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(360, 120, 40, 40), Color.White); break;
                        case "0x2F": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(400, 120, 40, 40), Color.White); break;
                        case "0x30": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(440, 120, 40, 40), Color.White); break;
                        case "0x31": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(0, 160, 40, 40), Color.White); break;
                        case "0x32": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(40, 160, 40, 40), Color.White); break;
                        case "0x33": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(80, 160, 40, 40), Color.White); break;
                        case "0x34": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(120, 160, 40, 40), Color.White); break;
                        case "0x35": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(160, 160, 40, 40), Color.White); break;
                        case "0x36": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(200, 160, 40, 40), Color.White); break;
                        case "0x37": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(240, 160, 40, 40), Color.White); break;
                        case "0x38": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(280, 160, 40, 40), Color.White); break;
                        case "0x39": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(320, 160, 40, 40), Color.White); break;
                        case "0x3A": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(360, 160, 40, 40), Color.White); break;
                        case "0x3B": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(400, 160, 40, 40), Color.White); break;
                        case "0x3C": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(440, 160, 40, 40), Color.White); break;
                        case "0x3D": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(0, 200, 40, 40), Color.White); break;
                        case "0x3E": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(40, 200, 40, 40), Color.White); break;
                        case "0x3F": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(80, 200, 40, 40), Color.White); break;
                        case "0x40": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(120, 200, 40, 40), Color.White); break;
                        case "0x41": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(160, 200, 40, 40), Color.White); break;
                        case "0x42": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(200, 200, 40, 40), Color.White); break;
                        case "0x43": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(240, 200, 40, 40), Color.White); break;
                        case "0x44": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(280, 200, 40, 40), Color.White); break;
                        case "0x45": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(320, 200, 40, 40), Color.White); break;
                        case "0x46": _spriteBatch.Draw(Tileset, new Vector2(i, j), new Rectangle(360, 200, 40, 40), Color.White); break;
                    }
                }
            }
        }

        public static readonly string[] MainMenuMap = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x24",
            "0x28","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x24",
            "0x28","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x24",
            "0x28","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x24",
            "0x28","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x24",
            "0x28","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x24",
            "0x28","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x24",
            "0x28","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x24",
            "0x28","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x24",
            "0x28","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x24",
            "0x28","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x24",
            "0x28","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x24",
            "0x28","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x24",
            "0x28","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x24",
            "0x28","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x24",
            "0x28","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelOne = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x2F",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x24",
            "0x29","0x02","0x02","0x02","0x1E","0x00","0x1B","0x00","0x1D","0x00","0x1B","0x00","0x21","0x1E","0x00","0x1B","0x00","0x1D","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x1F","0x02","0x02","0x02","0x20","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1F","0x2E","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x29","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x20","0x00","0x1B","0x00","0x22","0x23","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x00","0x1B","0x00","0x1C","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x1F","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x2C","0x23","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x22","0x02","0x02","0x2D","0x20","0x00","0x24",
            "0x29","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x1E","0x00","0x1B","0x00","0x00","0x00","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x22","0x02","0x02","0x1E","0x00","0x1B","0x00","0x35","0x32",
            "0x28","0x00","0x1F","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x23","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x24","0x25",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x1D","0x00","0x1D","0x00","0x1B","0x00","0x24","0x25",
            "0x29","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x1E","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24","0x25",
            "0x28","0x04","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1C","0x00","0x1B","0x00","0x1C","0x00","0x1B","0x00","0x34","0x2F",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x33","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x03","0x24",
            "0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x31","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x2B","0x27","0x27","0x32"
        };
        public static readonly string[] LevelTwo = {
            "0x30","0x26","0x2A","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x03","0x24",
            "0x28","0x00","0x1B","0x00","0x1D","0x00","0x1B","0x00","0x1D","0x00","0x1B","0x00","0x1D","0x00","0x1B","0x00","0x35","0x39","0x02","0x3B",
            "0x28","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24","0x28","0x04","0x24",
            "0x28","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24","0x28","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x1B","0x00","0x1C","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24","0x28","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24","0x28","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x22","0x02","0x02","0x2D","0x20","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24","0x28","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x00","0x00","0x00","0x1B","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24","0x28","0x00","0x24",
            "0x28","0x00","0x36","0x27","0x27","0x33","0x00","0x1B","0x00","0x1F","0x20","0x00","0x1B","0x00","0x1B","0x00","0x24","0x28","0x00","0x24",
            "0x28","0x00","0x24","0x25","0x25","0x28","0x00","0x1B","0x00","0x00","0x00","0x00","0x1B","0x00","0x1C","0x00","0x34","0x38","0x00","0x24",
            "0x28","0x00","0x37","0x26","0x26","0x38","0x00","0x22","0x02","0x2D","0x02","0x02","0x20","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x00","0x35","0x27","0x27","0x27","0x27","0x32",
            "0x28","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x1F","0x02","0x02","0x3A","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1C","0x00","0x00","0x00","0x00","0x00","0x00","0x22","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x1E","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelThree = {
            "0x30","0x26","0x2A","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x00","0x1B","0x05","0x04","0x05","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x05","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x05","0x00","0x00","0x00","0x00","0x00","0x3D","0x00","0x1B","0x05","0x00","0x00","0x21","0x1E","0x00","0x24",
            "0x28","0x00","0x3C","0x02","0x02","0x02","0x02","0x02","0x1E","0x05","0x00","0x00","0x1B","0x00","0x05","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1D","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x1F","0x3B",
            "0x28","0x05","0x1B","0x00","0x1F","0x02","0x02","0x02","0x02","0x02","0x2E","0x00","0x1B","0x00","0x05","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x1B","0x05","0x00","0x05","0x3C","0x1E","0x00","0x24",
            "0x28","0x00","0x3C","0x02","0x02","0x02","0x02","0x02","0x1E","0x00","0x1B","0x00","0x1B","0x00","0x05","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x35","0x32",
            "0x28","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x21","0x02","0x20","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x34","0x2F",
            "0x28","0x00","0x1C","0x05","0x1F","0x02","0x02","0x02","0x2E","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x21","0x02","0x2C","0x02","0x23","0x05","0x36","0x33","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x37","0x38","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1D","0x00","0x1B","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x05","0x00","0x05","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x35","0x32",
            "0x28","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x1B","0x00","0x1C","0x00","0x1B","0x00","0x1C","0x00","0x1B","0x00","0x34","0x2F",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x03","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x2B","0x27","0x27","0x32"
        };
        public static readonly string[] LevelFour = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x21","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x23","0x05","0x00","0x05","0x00","0x05","0x24",
            "0x28","0x00","0x1C","0x00","0x00","0x00","0x00","0x00","0x00","0x05","0x00","0x00","0x13","0x1B","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x05","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x05","0x00","0x00","0x1B","0x05","0x00","0x05","0x00","0x05","0x24",
            "0x29","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x20","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x05","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x05","0x00","0x05","0x00","0x05","0x24",
            "0x28","0x05","0x04","0x05","0x1D","0x00","0x21","0x02","0x02","0x02","0x2D","0x02","0x02","0x1E","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x05","0x00","0x1B","0x00","0x1B","0x00","0x12","0x00","0x1B","0x00","0x05","0x00","0x1F","0x02","0x02","0x02","0x02","0x3B",
            "0x29","0x02","0x02","0x02","0x20","0x00","0x1B","0x00","0x1D","0x00","0x1B","0x05","0x00","0x05","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x05","0x00","0x21","0x02","0x02","0x1E","0x00","0x24",
            "0x28","0x00","0x21","0x02","0x02","0x02","0x2E","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x05","0x1B","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x05","0x00","0x1B","0x00","0x1F","0x02","0x02","0x3B",
            "0x28","0x00","0x1B","0x00","0x1D","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x05","0x00","0x05","0x1B","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1C","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x3C","0x02","0x02","0x1E","0x05","0x24",
            "0x28","0x00","0x00","0x00","0x1B","0x00","0x1C","0x00","0x1B","0x00","0x1C","0x05","0x00","0x05","0x1B","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x05","0x00","0x1B","0x03","0x00","0x00","0x00","0x24",
            "0x31","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelFive = {
            "0x30","0x26","0x2A","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F","0x25","0x30","0x26","0x2F",
            "0x28","0x00","0x1B","0x04","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x37","0x26","0x38","0x03","0x24",
            "0x28","0x00","0x3C","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x23","0x00","0x1D","0x00","0x1B","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1F","0x02","0x3B",
            "0x28","0x00","0x1B","0x00","0x21","0x02","0x02","0x02","0x02","0x1E","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x1B","0x13","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x3C","0x02","0x1E","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x22","0x02","0x02","0x02","0x02","0x02","0x02","0x2E","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1F","0x02","0x3B",
            "0x28","0x00","0x3C","0x02","0x02","0x02","0x02","0x02","0x02","0x23","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x3C","0x02","0x1E","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x1F","0x02","0x02","0x23","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1F","0x02","0x3B",
            "0x28","0x00","0x22","0x02","0x02","0x1E","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x05","0x00","0x05","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x05","0x22","0x02","0x1E","0x00","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x05","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x05","0x00","0x05","0x00","0x00","0x1B","0x00","0x1C","0x00","0x1C","0x00","0x1B","0x00","0x05","0x05","0x05","0x05","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x05","0x00","0x1B","0x00","0x00","0x00","0x12","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelSix = {
            "0x30","0x26","0x2A","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x04","0x24",
            "0x28","0x00","0x1B","0x00","0x1F","0x02","0x02","0x02","0x02","0x02","0x02","0x3E","0x33","0x00","0x35","0x27","0x27","0x39","0x02","0x3B",
            "0x28","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x34","0x3F","0x00","0x37","0x26","0x26","0x38","0x03","0x24",
            "0x28","0x00","0x3C","0x02","0x02","0x02","0x02","0x02","0x02","0x1E","0x00","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x05","0x1D","0x00","0x1B","0x00","0x1B","0x00","0x05","0x05","0x05","0x24",
            "0x28","0x00","0x1B","0x00","0x1F","0x02","0x02","0x02","0x02","0x02","0x2E","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x05","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x05","0x05","0x05","0x00","0x24",
            "0x28","0x00","0x3C","0x02","0x02","0x02","0x02","0x02","0x23","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x13","0x05","0x00","0x00","0x05","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x05","0x05","0x05","0x24",
            "0x28","0x00","0x1B","0x00","0x00","0x05","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x05","0x00","0x05","0x00","0x1B","0x05","0x1B","0x00","0x1B","0x00","0x1B","0x05","0x05","0x05","0x00","0x24",
            "0x28","0x00","0x1B","0x05","0x00","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x3C","0x02","0x02","0x02","0x23","0x05","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x05","0x05","0x05","0x24",
            "0x28","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1C","0x00","0x1D","0x00","0x1C","0x00","0x1C","0x00","0x1C","0x00","0x1B","0x00","0x1C","0x05","0x05","0x05","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x12","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x31","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelSeven = {
            "0x30","0x26","0x2F","0x25","0x25","0x25","0x25","0x30","0x26","0x2F","0x30","0x26","0x26","0x2F","0x30","0x26","0x2F","0x25","0x25","0x25",
            "0x28","0x00","0x24","0x30","0x26","0x26","0x26","0x38","0x00","0x34","0x38","0x00","0x00","0x34","0x38","0x13","0x37","0x26","0x26","0x2F",
            "0x28","0x00","0x37","0x38","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x03","0x24",
            "0x28","0x00","0x1B","0x00","0x00","0x21","0x02","0x3E","0x33","0x00","0x00","0x21","0x02","0x02","0x3E","0x27","0x40","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x00","0x1B","0x00","0x24","0x28","0x00","0x35","0x40","0x00","0x00","0x34","0x26","0x38","0x00","0x00","0x24",
            "0x28","0x00","0x1C","0x00","0x1F","0x20","0x05","0x34","0x3F","0x00","0x24","0x28","0x05","0x00","0x00","0x05","0x12","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x36","0x27","0x32","0x28","0x00","0x05","0x35","0x27","0x33","0x00","0x00","0x24",
            "0x31","0x33","0x00","0x35","0x27","0x33","0x05","0x1F","0x3A","0x26","0x26","0x38","0x05","0x00","0x24","0x30","0x42","0x23","0x00","0x24",
            "0x30","0x38","0x00","0x24","0x30","0x38","0x00","0x00","0x00","0x05","0x00","0x05","0x00","0x00","0x37","0x38","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x00","0x24","0x28","0x00","0x00","0x00","0x00","0x00","0x05","0x00","0x05","0x00","0x1B","0x00","0x00","0x1C","0x00","0x24",
            "0x28","0x00","0x35","0x32","0x31","0x33","0x00","0x00","0x00","0x05","0x35","0x27","0x39","0x02","0x2E","0x00","0x00","0x05","0x00","0x24",
            "0x31","0x39","0x3A","0x2A","0x26","0x38","0x05","0x35","0x27","0x27","0x41","0x26","0x3F","0x00","0x22","0x1E","0x00","0x1D","0x00","0x24",
            "0x30","0x38","0x00","0x1B","0x00","0x00","0x00","0x37","0x26","0x26","0x3F","0x04","0x1B","0x00","0x00","0x00","0x00","0x22","0x02","0x3B",
            "0x28","0x00","0x00","0x1B","0x00","0x1D","0x00","0x1B","0x04","0x00","0x1B","0x00","0x22","0x3E","0x27","0x33","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1F","0x20","0x05","0x36","0x27","0x40","0x00","0x00","0x1B","0x00","0x00","0x34","0x26","0x42","0x02","0x1E","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x34","0x26","0x38","0x05","0x00","0x1B","0x00","0x05","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x31","0x27","0x33","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x36","0x27","0x33","0x00","0x35","0x33","0x00","0x35","0x27","0x32",
            "0x25","0x25","0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32","0x25","0x31","0x27","0x32","0x31","0x27","0x32","0x25","0x25"
        };
        public static readonly string[] LevelEight = {
            "0x30","0x26","0x2A","0x26","0x2F","0x25","0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x26","0x2F","0x25",
            "0x28","0x00","0x1B","0x00","0x34","0x26","0x3F","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x00","0x24","0x25",
            "0x28","0x05","0x1B","0x00","0x00","0x00","0x1B","0x00","0x00","0x05","0x00","0x1D","0x00","0x1B","0x00","0x1F","0x23","0x00","0x24","0x25",
            "0x28","0x00","0x1B","0x00","0x1D","0x05","0x3C","0x02","0x1E","0x00","0x35","0x40","0x00","0x1C","0x00","0x00","0x1B","0x00","0x24","0x25",
            "0x28","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x37","0x38","0x00","0x00","0x1D","0x00","0x1B","0x00","0x24","0x25",
            "0x28","0x00","0x1C","0x05","0x1B","0x00","0x1B","0x00","0x21","0x02","0x20","0x00","0x1D","0x00","0x1B","0x00","0x1B","0x00","0x24","0x25",
            "0x28","0x00","0x00","0x00","0x1C","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24","0x25",
            "0x28","0x00","0x35","0x33","0x00","0x00","0x1B","0x00","0x1C","0x00","0x1D","0x00","0x1B","0x00","0x1C","0x00","0x1B","0x00","0x34","0x2F",
            "0x29","0x02","0x3A","0x38","0x00","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x03","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x35","0x2B","0x27","0x39","0x02","0x20","0x00","0x22","0x02","0x02","0x02","0x2C","0x02","0x02","0x3B",
            "0x28","0x00","0x21","0x02","0x02","0x3A","0x26","0x26","0x3F","0x00","0x00","0x05","0x00","0x00","0x00","0x00","0x00","0x00","0x05","0x24",
            "0x28","0x00","0x1B","0x00","0x05","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x35","0x33","0x00","0x13","0x1B","0x00","0x05","0x00","0x05","0x00","0x00","0x00","0x05","0x00","0x05","0x24",
            "0x28","0x00","0x1B","0x00","0x34","0x42","0x02","0x02","0x2C","0x02","0x23","0x00","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x05","0x00","0x00","0x05","0x00","0x05","0x00","0x05","0x24",
            "0x28","0x00","0x22","0x02","0x02","0x02","0x02","0x1E","0x00","0x00","0x1C","0x00","0x1F","0x23","0x00","0x00","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x05","0x12","0x00","0x00","0x1B","0x05","0x00","0x05","0x00","0x04","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelNine = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F","0x25",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x15","0x00","0x15","0x00","0x15","0x00","0x00","0x00","0x00","0x15","0x04","0x24","0x25",
            "0x28","0x00","0x35","0x39","0x02","0x02","0x3E","0x27","0x33","0x00","0x35","0x27","0x27","0x39","0x02","0x02","0x23","0x15","0x24","0x25",
            "0x28","0x00","0x24","0x28","0x00","0x00","0x37","0x26","0x38","0x15","0x34","0x26","0x2F","0x28","0x00","0x00","0x1B","0x00","0x24","0x25",
            "0x28","0x00","0x24","0x28","0x04","0x00","0x1B","0x00","0x15","0x00","0x15","0x00","0x24","0x28","0x04","0x00","0x1B","0x00","0x24","0x25",
            "0x28","0x15","0x24","0x28","0x00","0x00","0x1B","0x15","0x00","0x15","0x00","0x15","0x24","0x28","0x00","0x00","0x1B","0x00","0x24","0x25",
            "0x28","0x00","0x24","0x28","0x00","0x00","0x1B","0x00","0x15","0x00","0x15","0x00","0x24","0x28","0x00","0x00","0x1B","0x00","0x24","0x25",
            "0x28","0x00","0x24","0x31","0x27","0x27","0x40","0x15","0x00","0x15","0x00","0x13","0x24","0x31","0x27","0x27","0x40","0x15","0x24","0x25",
            "0x28","0x00","0x34","0x26","0x26","0x26","0x42","0x02","0x02","0x02","0x02","0x02","0x3A","0x26","0x26","0x26","0x38","0x00","0x34","0x2F",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x15","0x00","0x15","0x00","0x15","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x35","0x39","0x02","0x02","0x02","0x02","0x1E","0x14","0x35","0x39","0x02","0x3E","0x33","0x00","0x1D","0x00","0x00","0x24",
            "0x28","0x00","0x34","0x3F","0x04","0x15","0x00","0x00","0x05","0x05","0x37","0x38","0x00","0x34","0x43","0x27","0x40","0x00","0x35","0x32",
            "0x28","0x00","0x00","0x1B","0x15","0x00","0x15","0x00","0x15","0x00","0x1B","0x04","0x05","0x04","0x37","0x26","0x38","0x15","0x24","0x25",
            "0x31","0x33","0x14","0x1B","0x00","0x15","0x00","0x15","0x00","0x15","0x1C","0x05","0x15","0x00","0x1B","0x00","0x00","0x00","0x24","0x25",
            "0x25","0x28","0x00","0x1B","0x15","0x00","0x15","0x00","0x15","0x00","0x05","0x00","0x00","0x00","0x36","0x33","0x00","0x00","0x24","0x25",
            "0x30","0x38","0x00","0x22","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x3A","0x42","0x1E","0x00","0x24","0x25",
            "0x28","0x03","0x00","0x00","0x15","0x00","0x00","0x00","0x15","0x00","0x00","0x00","0x15","0x00","0x00","0x00","0x15","0x00","0x24","0x25",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32","0x25"
        };
        public static readonly string[] LevelTen = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x04","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x29","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x2D","0x02","0x02","0x02","0x02","0x02","0x23","0x15","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x13","0x00","0x00","0x00","0x00","0x1B","0x15","0x24",
            "0x28","0x00","0x1F","0x02","0x02","0x02","0x02","0x02","0x02","0x23","0x00","0x1B","0x05","0x05","0x05","0x05","0x00","0x1B","0x15","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x03","0x1B","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x1B","0x15","0x24",
            "0x29","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x2E","0x00","0x1B","0x00","0x05","0x05","0x05","0x05","0x1B","0x15","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x00","0x05","0x00","0x13","0x1B","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x1B","0x15","0x24",
            "0x28","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x00","0x1B","0x00","0x1B","0x05","0x05","0x05","0x05","0x00","0x1B","0x15","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x00","0x00","0x05","0x05","0x1B","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x1B","0x15","0x24",
            "0x28","0x00","0x05","0x00","0x05","0x00","0x00","0x05","0x00","0x1B","0x00","0x1B","0x00","0x1F","0x02","0x02","0x02","0x20","0x15","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x00","0x05","0x00","0x04","0x1B","0x00","0x1B","0x19","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1F","0x02","0x02","0x02","0x02","0x02","0x02","0x20","0x14","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x17","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x19","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x14","0x1F","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x20","0x00","0x00","0x00","0x00","0x00","0x00","0x17","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x33","0x00","0x35","0x27","0x27","0x27","0x27","0x27","0x27","0x33","0x04","0x24",
            "0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x31","0x27","0x32","0x25","0x25","0x25","0x25","0x25","0x25","0x31","0x27","0x32"
        };
        public static readonly string[] LevelEleven = {
            "0x25","0x30","0x26","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x2F","0x30","0x26","0x26","0x26","0x26","0x2A","0x26","0x26","0x2F",
            "0x30","0x38","0x00","0x00","0x00","0x1A","0x1B","0x03","0x12","0x00","0x34","0x38","0x00","0x00","0x00","0x13","0x1B","0x1A","0x04","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x3C","0x02","0x1E","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x1F","0x3B",
            "0x28","0x00","0x00","0x1D","0x00","0x00","0x1B","0x00","0x00","0x00","0x1D","0x00","0x00","0x1D","0x00","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x14","0x1F","0x2E","0x00","0x00","0x1B","0x00","0x1F","0x02","0x2C","0x02","0x02","0x2E","0x00","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x05","0x1B","0x00","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x1B","0x00","0x00","0x3C","0x02","0x02","0x02","0x02","0x1E","0x00","0x1B","0x00","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x05","0x00","0x1B","0x00","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x05","0x1B","0x00","0x00","0x1B","0x00","0x1F","0x02","0x02","0x02","0x02","0x2E","0x00","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x1B","0x00","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x1B","0x00","0x00","0x3C","0x02","0x02","0x02","0x02","0x1E","0x00","0x1B","0x00","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x05","0x1B","0x00","0x00","0x1B","0x19","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x05","0x00","0x1B","0x00","0x00","0x1B","0x00","0x00","0x1F","0x1E","0x00","0x00","0x1B","0x00","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x04","0x1B","0x00","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x17","0x1B","0x00","0x00","0x1B","0x18","0x00","0x24",
            "0x29","0x02","0x02","0x2E","0x00","0x00","0x1C","0x00","0x1F","0x3E","0x27","0x27","0x27","0x40","0x00","0x00","0x22","0x1E","0x00","0x24",
            "0x28","0x13","0x00","0x1C","0x00","0x00","0x00","0x00","0x00","0x24","0x30","0x26","0x26","0x38","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x05","0x18","0x00","0x00","0x00","0x13","0x24","0x28","0x04","0x12","0x00","0x00","0x00","0x00","0x00","0x18","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32","0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelTwelve = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x03","0x12","0x12","0x1A","0x00","0x15","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x05","0x00","0x13","0x24",
            "0x28","0x00","0x00","0x05","0x00","0x00","0x1D","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x05","0x00","0x00","0x24",
            "0x29","0x02","0x02","0x23","0x00","0x00","0x36","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x39","0x1E","0x00","0x00","0x24",
            "0x28","0x04","0x05","0x1B","0x00","0x00","0x37","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x38","0x15","0x05","0x05","0x24",
            "0x28","0x00","0x00","0x1B","0x00","0x00","0x1B","0x00","0x1A","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x05","0x1B","0x00","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x05","0x00","0x1B","0x00","0x00","0x1B","0x00","0x00","0x21","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x15","0x24",
            "0x28","0x00","0x00","0x1B","0x00","0x00","0x1B","0x00","0x00","0x1B","0x04","0x00","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x05","0x00","0x1B","0x00","0x00","0x1B","0x00","0x00","0x1B","0x00","0x00","0x05","0x00","0x00","0x00","0x05","0x00","0x00","0x24",
            "0x28","0x00","0x05","0x1B","0x00","0x00","0x1B","0x00","0x00","0x1B","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x00","0x1B","0x00","0x00","0x1B","0x00","0x00","0x22","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x3B",
            "0x28","0x00","0x05","0x1B","0x00","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x05","0x00","0x1B","0x00","0x00","0x1B","0x18","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x29","0x1E","0x15","0x1C","0x00","0x00","0x22","0x02","0x02","0x2D","0x1E","0x15","0x1F","0x02","0x02","0x02","0x02","0x02","0x02","0x3B",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x05","0x00","0x1B","0x15","0x00","0x15","0x00","0x15","0x00","0x15","0x00","0x15","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x18","0x05","0x00","0x13","0x1B","0x00","0x15","0x00","0x15","0x00","0x15","0x00","0x15","0x04","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelThirteen = {
            "0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F","0x25",
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x2A","0x26","0x38","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x19","0x34","0x2F",
            "0x28","0x00","0x05","0x12","0x00","0x00","0x00","0x1B","0x13","0x00","0x00","0x1D","0x17","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1F","0x3E","0x33","0x04","0x35","0x2B","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x27","0x27","0x33","0x15","0x24",
            "0x28","0x00","0x18","0x24","0x29","0x02","0x3A","0x2F","0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x3F","0x15","0x24",
            "0x31","0x33","0x00","0x24","0x28","0x00","0x03","0x24","0x28","0x00","0x18","0x00","0x18","0x00","0x18","0x00","0x18","0x1B","0x15","0x24",
            "0x30","0x38","0x00","0x24","0x28","0x00","0x00","0x24","0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1C","0x15","0x24",
            "0x28","0x15","0x00","0x34","0x43","0x33","0x15","0x24","0x28","0x00","0x00","0x00","0x13","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x24","0x28","0x15","0x34","0x38","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1D","0x14","0x24",
            "0x31","0x27","0x33","0x00","0x24","0x28","0x15","0x15","0x15","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1B","0x15","0x24",
            "0x25","0x30","0x38","0x00","0x24","0x31","0x33","0x05","0x35","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x40","0x15","0x24",
            "0x25","0x28","0x15","0x00","0x34","0x26","0x45","0x02","0x3A","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x26","0x38","0x15","0x24",
            "0x25","0x28","0x00","0x1A","0x00","0x15","0x1C","0x15","0x15","0x12","0x15","0x04","0x1C","0x00","0x00","0x05","0x15","0x15","0x15","0x24",
            "0x25","0x29","0x02","0x3E","0x33","0x15","0x15","0x15","0x35","0x33","0x00","0x00","0x00","0x05","0x05","0x00","0x35","0x27","0x27","0x32",
            "0x25","0x28","0x13","0x24","0x29","0x1E","0x15","0x1F","0x44","0x42","0x02","0x02","0x02","0x1E","0x00","0x35","0x32","0x25","0x25","0x25",
            "0x25","0x28","0x00","0x34","0x38","0x00","0x15","0x15","0x1B","0x00","0x00","0x05","0x00","0x05","0x00","0x24","0x25","0x25","0x25","0x25",
            "0x25","0x28","0x00","0x15","0x15","0x15","0x35","0x27","0x40","0x00","0x05","0x00","0x00","0x1D","0x00","0x24","0x25","0x25","0x25","0x25",
            "0x25","0x31","0x27","0x27","0x27","0x27","0x32","0x25","0x31","0x27","0x27","0x27","0x27","0x2B","0x27","0x32","0x25","0x25","0x25","0x25"
        };
        public static readonly string[] LevelFourteen = {
            "0x25","0x30","0x26","0x2F","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x30","0x26","0x2F",
            "0x25","0x28","0x04","0x37","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x3F","0x13","0x24",
            "0x25","0x28","0x00","0x1B","0x15","0x00","0x15","0x00","0x15","0x00","0x15","0x00","0x15","0x00","0x15","0x00","0x15","0x1B","0x15","0x24",
            "0x25","0x28","0x15","0x1B","0x00","0x21","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x23","0x00","0x1B","0x15","0x24",
            "0x25","0x28","0x00","0x1B","0x15","0x1B","0x15","0x00","0x15","0x00","0x15","0x00","0x15","0x00","0x15","0x1B","0x15","0x1B","0x15","0x24",
            "0x25","0x28","0x15","0x1B","0x00","0x1B","0x00","0x21","0x02","0x02","0x02","0x02","0x02","0x23","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x25","0x28","0x00","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x00","0x15","0x00","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x00","0x24",
            "0x25","0x28","0x15","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x21","0x02","0x23","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x15","0x24",
            "0x25","0x28","0x00","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x1C","0x03","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x24",
            "0x25","0x28","0x15","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x15","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x15","0x24",
            "0x25","0x28","0x00","0x1B","0x15","0x1B","0x15","0x22","0x02","0x02","0x02","0x20","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x24",
            "0x25","0x28","0x15","0x1B","0x00","0x1B","0x00","0x15","0x00","0x15","0x00","0x15","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x15","0x24",
            "0x25","0x28","0x00","0x1B","0x15","0x22","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x20","0x15","0x1B","0x15","0x1B","0x15","0x24",
            "0x25","0x28","0x14","0x1B","0x00","0x15","0x00","0x15","0x00","0x15","0x00","0x15","0x00","0x15","0x00","0x1B","0x00","0x1B","0x15","0x24",
            "0x25","0x28","0x00","0x22","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x20","0x15","0x1C","0x15","0x24",
            "0x25","0x28","0x17","0x00","0x00","0x00","0x00","0x00","0x17","0x00","0x00","0x00","0x00","0x00","0x17","0x00","0x00","0x00","0x00","0x24",
            "0x25","0x28","0x00","0x1D","0x00","0x1D","0x00","0x1D","0x00","0x1D","0x00","0x1D","0x00","0x1D","0x00","0x1D","0x00","0x35","0x27","0x32",
            "0x25","0x31","0x27","0x2B","0x27","0x2B","0x27","0x2B","0x27","0x2B","0x27","0x2B","0x27","0x2B","0x27","0x2B","0x27","0x32","0x25","0x25"
        };
        public static readonly string[] LevelFifteen = {
            "0x25","0x25","0x25","0x30","0x26","0x26","0x26","0x26","0x2F","0x25","0x25","0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x2F","0x25",
            "0x25","0x25","0x30","0x38","0x00","0x00","0x00","0x18","0x24","0x30","0x26","0x38","0x00","0x00","0x00","0x05","0x00","0x13","0x24","0x25",
            "0x25","0x25","0x28","0x00","0x00","0x35","0x33","0x00","0x24","0x28","0x00","0x00","0x05","0x00","0x00","0x00","0x05","0x00","0x24","0x25",
            "0x25","0x25","0x31","0x33","0x00","0x37","0x38","0x00","0x37","0x38","0x00","0x1F","0x02","0x02","0x02","0x02","0x02","0x3E","0x32","0x25",
            "0x25","0x30","0x26","0x3F","0x00","0x1B","0x00","0x00","0x1B","0x00","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24","0x25","0x25",
            "0x30","0x38","0x00","0x1C","0x00","0x36","0x33","0x00","0x36","0x27","0x33","0x00","0x05","0x00","0x05","0x00","0x35","0x32","0x25","0x25",
            "0x28","0x17","0x00","0x00","0x1A","0x24","0x28","0x15","0x24","0x25","0x28","0x15","0x00","0x05","0x00","0x35","0x32","0x25","0x25","0x25",
            "0x28","0x00","0x21","0x02","0x02","0x3A","0x38","0x14","0x24","0x25","0x28","0x00","0x05","0x00","0x35","0x32","0x25","0x25","0x25","0x25",
            "0x28","0x00","0x1B","0x00","0x05","0x00","0x00","0x00","0x24","0x30","0x42","0x1E","0x00","0x1F","0x3A","0x2F","0x25","0x25","0x25","0x25",
            "0x28","0x00","0x1B","0x05","0x00","0x05","0x00","0x05","0x24","0x28","0x17","0x00","0x00","0x00","0x19","0x24","0x30","0x26","0x2F","0x25",
            "0x28","0x15","0x1B","0x00","0x05","0x00","0x05","0x00","0x24","0x31","0x27","0x33","0x00","0x35","0x27","0x32","0x28","0x13","0x24","0x25",
            "0x28","0x04","0x1B","0x05","0x00","0x05","0x00","0x05","0x24","0x25","0x30","0x38","0x15","0x34","0x2F","0x25","0x28","0x00","0x24","0x25",
            "0x29","0x02","0x2E","0x00","0x05","0x00","0x05","0x00","0x34","0x26","0x38","0x15","0x15","0x15","0x34","0x26","0x38","0x00","0x34","0x2F",
            "0x28","0x04","0x1B","0x05","0x00","0x05","0x00","0x00","0x00","0x05","0x15","0x15","0x00","0x15","0x15","0x05","0x00","0x00","0x12","0x24",
            "0x28","0x00","0x22","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x23","0x15","0x15","0x15","0x21","0x02","0x23","0x00","0x35","0x32",
            "0x28","0x17","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x19","0x22","0x1E","0x15","0x35","0x40","0x03","0x1C","0x00","0x24","0x25",
            "0x31","0x27","0x33","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x19","0x24","0x28","0x15","0x15","0x1A","0x24","0x25",
            "0x25","0x25","0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32","0x31","0x27","0x27","0x27","0x32","0x25"
        };
        public static readonly string[] LevelSixteen = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F","0x25","0x30","0x26","0x26","0x26","0x2F","0x25","0x30","0x26","0x2F","0x25",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x05","0x15","0x24","0x25","0x28","0x15","0x15","0x18","0x34","0x2F","0x28","0x00","0x24","0x25",
            "0x28","0x00","0x1D","0x00","0x00","0x00","0x1D","0x15","0x24","0x25","0x28","0x15","0x1D","0x00","0x00","0x34","0x3F","0x00","0x24","0x25",
            "0x28","0x00","0x22","0x02","0x1E","0x00","0x1B","0x15","0x24","0x25","0x28","0x15","0x1B","0x00","0x15","0x15","0x1C","0x00","0x24","0x25",
            "0x28","0x00","0x00","0x00","0x00","0x1F","0x2E","0x15","0x24","0x25","0x28","0x15","0x1B","0x00","0x1D","0x15","0x15","0x00","0x24","0x25",
            "0x28","0x00","0x35","0x33","0x00","0x00","0x1B","0x15","0x34","0x26","0x38","0x15","0x1B","0x00","0x36","0x33","0x15","0x00","0x34","0x2F",
            "0x28","0x1A","0x24","0x31","0x33","0x13","0x1B","0x15","0x15","0x00","0x15","0x15","0x1B","0x1A","0x24","0x31","0x33","0x1A","0x00","0x24",
            "0x29","0x02","0x3A","0x26","0x42","0x02","0x2C","0x02","0x02","0x02","0x02","0x02","0x2C","0x02","0x3A","0x26","0x42","0x1E","0x14","0x24",
            "0x28","0x17","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x13","0x03","0x24",
            "0x29","0x02","0x02","0x02","0x02","0x02","0x2D","0x02","0x3E","0x27","0x39","0x02","0x02","0x02","0x3E","0x27","0x27","0x33","0x14","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x1B","0x13","0x24","0x25","0x28","0x00","0x12","0x00","0x34","0x2F","0x25","0x28","0x00","0x24",
            "0x28","0x00","0x35","0x27","0x33","0x00","0x1B","0x00","0x24","0x25","0x28","0x00","0x1D","0x00","0x18","0x34","0x2F","0x28","0x00","0x24",
            "0x28","0x00","0x34","0x26","0x38","0x00","0x1B","0x00","0x24","0x25","0x28","0x00","0x1B","0x00","0x00","0x00","0x34","0x3F","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x1F","0x2E","0x00","0x24","0x25","0x28","0x00","0x1B","0x00","0x1D","0x00","0x00","0x1C","0x00","0x24",
            "0x28","0x00","0x35","0x27","0x33","0x04","0x1B","0x00","0x24","0x25","0x28","0x00","0x1B","0x00","0x36","0x33","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x24","0x25","0x28","0x00","0x1C","0x00","0x34","0x26","0x38","0x00","0x1B","0x00","0x24","0x31","0x33","0x1A","0x00","0x24",
            "0x28","0x00","0x24","0x25","0x28","0x00","0x12","0x00","0x00","0x00","0x00","0x00","0x1B","0x13","0x24","0x25","0x31","0x33","0x1A","0x24",
            "0x31","0x27","0x32","0x25","0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x2B","0x27","0x32","0x25","0x25","0x31","0x27","0x32"
        };
        public static readonly string[] LevelSeventeen = {
            "0x25","0x25","0x30","0x26","0x26","0x26","0x26","0x26","0x2F","0x25","0x25","0x30","0x26","0x26","0x26","0x26","0x26","0x2F","0x25","0x25",
            "0x25","0x30","0x38","0x03","0x18","0x18","0x18","0x18","0x34","0x2F","0x30","0x38","0x18","0x18","0x18","0x18","0x18","0x34","0x2F","0x25",
            "0x25","0x28","0x17","0x00","0x00","0x00","0x00","0x00","0x18","0x34","0x38","0x18","0x00","0x00","0x00","0x00","0x00","0x19","0x24","0x25",
            "0x30","0x38","0x17","0x00","0x00","0x00","0x00","0x00","0x00","0x18","0x18","0x00","0x00","0x00","0x00","0x00","0x00","0x19","0x34","0x2F",
            "0x28","0x17","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x19","0x24",
            "0x28","0x17","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x19","0x24",
            "0x28","0x17","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x19","0x24",
            "0x28","0x17","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x19","0x24",
            "0x28","0x17","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x31","0x33","0x04","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1A","0x35","0x32",
            "0x25","0x31","0x33","0x1A","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1A","0x35","0x32","0x25",
            "0x25","0x25","0x31","0x33","0x1A","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1A","0x35","0x32","0x25","0x25",
            "0x25","0x25","0x25","0x31","0x33","0x1A","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1A","0x35","0x32","0x25","0x25","0x25",
            "0x25","0x25","0x25","0x25","0x31","0x33","0x1A","0x00","0x00","0x00","0x00","0x00","0x00","0x1A","0x35","0x32","0x25","0x25","0x25","0x25",
            "0x25","0x25","0x25","0x25","0x25","0x31","0x33","0x1A","0x00","0x00","0x00","0x00","0x1A","0x35","0x32","0x25","0x25","0x25","0x25","0x25",
            "0x25","0x25","0x25","0x25","0x25","0x25","0x31","0x33","0x1A","0x00","0x00","0x1A","0x35","0x32","0x25","0x25","0x25","0x25","0x25","0x25",
            "0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x31","0x33","0x1A","0x1A","0x35","0x32","0x25","0x25","0x25","0x25","0x25","0x25","0x25",
            "0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x31","0x27","0x27","0x32","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25"
        };
        public static readonly string[] LevelEighteen = {
            "0x30","0x26","0x26","0x2A","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x2F",
            "0x28","0x00","0x04","0x1B","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x1B","0x00","0x1D","0x00","0x1B","0x00","0x1D","0x00","0x1B","0x00","0x1D","0x00","0x1B","0x00","0x1D","0x00","0x24",
            "0x28","0x00","0x1F","0x2E","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x29","0x1E","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x1F","0x2E","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x29","0x1E","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x1F","0x2E","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x29","0x1E","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x1F","0x20","0x00","0x1B","0x00","0x1C","0x00","0x1B","0x00","0x1C","0x00","0x1B","0x00","0x1C","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x1B","0x03","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x2B","0x27","0x32"
        };
        public static readonly string[] LevelNineteen = {
            "0x30","0x26","0x26","0x2A","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x00","0x00","0x1C","0x00","0x05","0x00","0x05","0x13","0x05","0x00","0x00","0x00","0x05","0x00","0x12","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x3D","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x3D","0x00","0x00","0x00","0x24",
            "0x29","0x1E","0x00","0x00","0x00","0x3D","0x00","0x00","0x00","0x05","0x00","0x05","0x00","0x05","0x3D","0x00","0x00","0x00","0x1F","0x3B",
            "0x28","0x00","0x3D","0x00","0x00","0x00","0x3D","0x00","0x05","0x00","0x05","0x00","0x05","0x3D","0x00","0x00","0x00","0x3D","0x13","0x24",
            "0x28","0x15","0x00","0x3D","0x00","0x00","0x00","0x3D","0x00","0x05","0x00","0x05","0x3D","0x00","0x00","0x00","0x3D","0x19","0x00","0x24",
            "0x28","0x00","0x15","0x13","0x3D","0x00","0x00","0x00","0x3D","0x00","0x05","0x3D","0x00","0x00","0x00","0x3D","0x17","0x00","0x00","0x24",
            "0x28","0x15","0x3D","0x15","0x00","0x3D","0x00","0x00","0x00","0x1F","0x1E","0x00","0x00","0x00","0x3D","0x19","0x00","0x00","0x00","0x24",
            "0x29","0x1E","0x00","0x3D","0x15","0x00","0x3D","0x00","0x00","0x18","0x00","0x00","0x00","0x3D","0x17","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x15","0x3D","0x15","0x00","0x15","0x00","0x1D","0x00","0x00","0x00","0x19","0x1D","0x19","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x15","0x00","0x15","0x00","0x15","0x1C","0x17","0x00","0x00","0x00","0x1C","0x17","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x15","0x00","0x15","0x3D","0x15","0x3D","0x00","0x00","0x00","0x1A","0x00","0x00","0x3D","0x17","0x00","0x00","0x00","0x00","0x24",
            "0x29","0x1E","0x15","0x00","0x15","0x3D","0x00","0x00","0x00","0x1F","0x1E","0x00","0x00","0x00","0x3D","0x19","0x00","0x00","0x00","0x24",
            "0x28","0x15","0x00","0x15","0x3D","0x00","0x00","0x00","0x3D","0x05","0x03","0x3D","0x00","0x00","0x00","0x3D","0x17","0x00","0x00","0x24",
            "0x28","0x00","0x15","0x3D","0x00","0x00","0x00","0x3D","0x15","0x05","0x00","0x00","0x3D","0x00","0x00","0x00","0x3D","0x17","0x00","0x24",
            "0x28","0x15","0x3D","0x00","0x00","0x00","0x3D","0x15","0x15","0x05","0x00","0x00","0x1A","0x3D","0x00","0x00","0x00","0x3D","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x12","0x15","0x15","0x05","0x00","0x00","0x00","0x04","0x1D","0x00","0x00","0x12","0x00","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelTwenty = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x05","0x13","0x34","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F","0x25",
            "0x28","0x05","0x05","0x05","0x05","0x05","0x05","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x12","0x03","0x24","0x25",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x21","0x02","0x02","0x02","0x02","0x02","0x23","0x15","0x35","0x27","0x32","0x25",
            "0x31","0x33","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x15","0x17","0x00","0x00","0x1B","0x00","0x34","0x26","0x26","0x2F",
            "0x25","0x28","0x15","0x1D","0x00","0x35","0x39","0x02","0x20","0x00","0x00","0x00","0x15","0x13","0x1B","0x1A","0x00","0x00","0x13","0x24",
            "0x25","0x28","0x15","0x1B","0x00","0x24","0x28","0x00","0x00","0x19","0x15","0x00","0x21","0x02","0x20","0x15","0x1F","0x02","0x02","0x3B",
            "0x25","0x28","0x15","0x1B","0x00","0x24","0x28","0x00","0x15","0x17","0x00","0x00","0x1B","0x17","0x00","0x00","0x00","0x00","0x18","0x24",
            "0x25","0x28","0x15","0x1B","0x00","0x24","0x28","0x00","0x00","0x00","0x19","0x15","0x1B","0x00","0x3D","0x15","0x15","0x3D","0x00","0x24",
            "0x25","0x28","0x13","0x1B","0x00","0x24","0x28","0x13","0x00","0x00","0x00","0x00","0x1B","0x00","0x15","0x04","0x13","0x15","0x00","0x24",
            "0x30","0x42","0x02","0x20","0x00","0x34","0x42","0x02","0x1E","0x00","0x1F","0x02","0x20","0x00","0x3D","0x15","0x15","0x3D","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x15","0x1A","0x00","0x00","0x00","0x00","0x19","0x24",
            "0x28","0x05","0x05","0x35","0x27","0x27","0x27","0x39","0x02","0x2D","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x3B",
            "0x28","0x00","0x00","0x24","0x25","0x25","0x25","0x28","0x13","0x1B","0x17","0x00","0x17","0x00","0x17","0x00","0x17","0x00","0x17","0x24",
            "0x28","0x05","0x00","0x34","0x26","0x26","0x26","0x38","0x00","0x22","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x3E","0x32",
            "0x28","0x00","0x00","0x12","0x00","0x12","0x00","0x12","0x00","0x12","0x00","0x12","0x00","0x12","0x00","0x12","0x00","0x13","0x24","0x25",
            "0x28","0x00","0x05","0x35","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32","0x25",
            "0x31","0x27","0x27","0x32","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25"
        };
        public static readonly string[] LevelTwentyone = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x04","0x00","0x05","0x05","0x05","0x00","0x00","0x00","0x00","0x1A","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x03","0x24",
            "0x28","0x00","0x05","0x05","0x05","0x05","0x05","0x00","0x1A","0x00","0x00","0x00","0x1A","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x05","0x05","0x13","0x00","0x00","0x00","0x21","0x02","0x02","0x3E","0x33","0x00","0x00","0x00","0x00","0x13","0x00","0x24",
            "0x28","0x00","0x05","0x00","0x1D","0x00","0x00","0x21","0x20","0x00","0x00","0x34","0x42","0x02","0x3E","0x33","0x00","0x1D","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x22","0x3E","0x27","0x40","0x00","0x00","0x00","0x00","0x00","0x00","0x34","0x43","0x39","0x20","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x34","0x26","0x3F","0x00","0x3D","0x00","0x00","0x3D","0x00","0x00","0x37","0x38","0x00","0x00","0x24",
            "0x28","0x19","0x00","0x00","0x00","0x00","0x19","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x21","0x20","0x17","0x00","0x17","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x22","0x3E","0x27","0x39","0x02","0x2D","0x02","0x20","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x19","0x00","0x00","0x00","0x00","0x00","0x19","0x37","0x26","0x38","0x04","0x1B","0x17","0x00","0x00","0x00","0x00","0x17","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x1F","0x02","0x20","0x00","0x00","0x00","0x22","0x02","0x1E","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1D","0x00","0x3D","0x00","0x00","0x00","0x00","0x00","0x00","0x05","0x05","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x3C","0x1E","0x04","0x05","0x00","0x1D","0x00","0x21","0x1E","0x00","0x00","0x21","0x1E","0x00","0x00","0x1D","0x14","0x24",
            "0x28","0x00","0x1B","0x00","0x3D","0x00","0x00","0x1B","0x00","0x1B","0x00","0x3D","0x00","0x1B","0x00","0x3D","0x00","0x1C","0x00","0x24",
            "0x28","0x00","0x1C","0x00","0x00","0x3D","0x00","0x1B","0x00","0x3C","0x1E","0x00","0x00","0x3C","0x1E","0x00","0x05","0x12","0x00","0x24",
            "0x28","0x05","0x00","0x00","0x00","0x00","0x00","0x1C","0x00","0x1C","0x00","0x3D","0x00","0x1B","0x00","0x3D","0x00","0x1D","0x00","0x24",
            "0x28","0x00","0x05","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x22","0x1E","0x04","0x00","0x36","0x27","0x32",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32","0x25","0x25"
        };
        public static readonly string[] LevelTwentytwo = {
            "0x30","0x26","0x26","0x2F","0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x04","0x00","0x37","0x38","0x00","0x00","0x00","0x00","0x17","0x00","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x1B","0x04","0x00","0x21","0x1E","0x00","0x00","0x19","0x00","0x00","0x21","0x20","0x00","0x1D","0x00","0x00","0x24",
            "0x29","0x1E","0x00","0x3C","0x02","0x02","0x20","0x00","0x00","0x17","0x00","0x00","0x00","0x1C","0x00","0x00","0x1B","0x15","0x05","0x24",
            "0x28","0x00","0x17","0x1B","0x15","0x00","0x00","0x00","0x15","0x00","0x00","0x15","0x15","0x15","0x15","0x15","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x1B","0x15","0x00","0x17","0x00","0x15","0x00","0x00","0x00","0x17","0x15","0x05","0x1F","0x2E","0x05","0x05","0x24",
            "0x29","0x1E","0x14","0x1B","0x15","0x00","0x00","0x00","0x15","0x00","0x00","0x00","0x00","0x15","0x00","0x04","0x1B","0x1E","0x00","0x24",
            "0x28","0x13","0x00","0x1B","0x15","0x00","0x17","0x00","0x15","0x00","0x00","0x00","0x18","0x15","0x05","0x05","0x1B","0x19","0x00","0x24",
            "0x28","0x00","0x1A","0x1B","0x15","0x15","0x15","0x15","0x15","0x00","0x00","0x00","0x17","0x15","0x00","0x00","0x1B","0x19","0x00","0x24",
            "0x28","0x15","0x1F","0x2E","0x15","0x00","0x17","0x00","0x15","0x00","0x00","0x00","0x00","0x15","0x00","0x00","0x3C","0x1E","0x00","0x24",
            "0x28","0x15","0x00","0x1B","0x15","0x00","0x00","0x00","0x15","0x00","0x00","0x00","0x00","0x15","0x00","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x15","0x00","0x1B","0x15","0x00","0x17","0x00","0x15","0x00","0x00","0x00","0x17","0x15","0x00","0x13","0x1B","0x03","0x00","0x24",
            "0x29","0x1E","0x00","0x1B","0x15","0x00","0x00","0x00","0x15","0x00","0x00","0x15","0x15","0x15","0x15","0x15","0x3C","0x02","0x02","0x3B",
            "0x28","0x04","0x00","0x1B","0x00","0x00","0x1D","0x00","0x00","0x00","0x17","0x00","0x00","0x00","0x00","0x00","0x1B","0x13","0x15","0x24",
            "0x28","0x05","0x00","0x1B","0x05","0x1F","0x20","0x00","0x00","0x19","0x00","0x00","0x00","0x21","0x1E","0x05","0x1B","0x15","0x00","0x24",
            "0x28","0x00","0x05","0x1C","0x00","0x00","0x00","0x00","0x00","0x00","0x17","0x00","0x00","0x1C","0x00","0x00","0x1C","0x00","0x15","0x24",
            "0x28","0x00","0x05","0x12","0x00","0x00","0x00","0x00","0x00","0x19","0x00","0x00","0x00","0x00","0x00","0x00","0x12","0x15","0x00","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelTwentythree = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x04","0x00","0x00","0x00","0x00","0x00","0x18","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x04","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x18","0x00","0x18","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x18","0x00","0x00","0x00","0x18","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x18","0x00","0x00","0x00","0x00","0x00","0x18","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x18","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x18","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x18","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x18","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x18","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x46","0x18","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x29","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x2D","0x02","0x02","0x23","0x00","0x00","0x18","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x13","0x00","0x05","0x00","0x05","0x00","0x05","0x1C","0x00","0x46","0x1B","0x00","0x00","0x00","0x18","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x12","0x1B","0x00","0x00","0x00","0x00","0x18","0x00","0x00","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x05","0x15","0x15","0x1F","0x02","0x02","0x2E","0x00","0x00","0x00","0x00","0x00","0x18","0x00","0x24",
            "0x28","0x00","0x05","0x00","0x05","0x15","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x18","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x15","0x00","0x15","0x15","0x15","0x15","0x1B","0x00","0x00","0x00","0x00","0x00","0x18","0x00","0x24",
            "0x28","0x00","0x05","0x00","0x05","0x15","0x00","0x15","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x00","0x18","0x00","0x00","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x15","0x00","0x15","0x00","0x15","0x15","0x1B","0x00","0x00","0x00","0x18","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x05","0x00","0x05","0x15","0x00","0x15","0x00","0x15","0x04","0x1B","0x00","0x00","0x18","0x00","0x00","0x00","0x03","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelTwentyfour = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x04","0x15","0x15","0x15","0x19","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x19","0x00","0x1F","0x02","0x02","0x23","0x00","0x22","0x02","0x02","0x02","0x23","0x00","0x00","0x00","0x00","0x00","0x19","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x15","0x15","0x15","0x04","0x1B","0x19","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x1D","0x00","0x35","0x2B","0x27","0x39","0x02","0x02","0x02","0x20","0x00","0x00","0x00","0x00","0x00","0x19","0x24",
            "0x28","0x00","0x00","0x1B","0x00","0x24","0x25","0x25","0x28","0x04","0x15","0x15","0x15","0x19","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x1B","0x00","0x34","0x26","0x26","0x42","0x02","0x02","0x02","0x23","0x00","0x00","0x00","0x00","0x00","0x19","0x24",
            "0x28","0x00","0x00","0x1B","0x00","0x00","0x00","0x00","0x15","0x15","0x15","0x04","0x1B","0x19","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x36","0x27","0x27","0x27","0x27","0x39","0x02","0x02","0x02","0x20","0x00","0x00","0x00","0x00","0x00","0x19","0x24",
            "0x28","0x00","0x00","0x34","0x2F","0x25","0x25","0x25","0x28","0x13","0x15","0x15","0x15","0x19","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x19","0x00","0x00","0x34","0x26","0x2A","0x26","0x42","0x02","0x02","0x02","0x23","0x00","0x00","0x00","0x00","0x00","0x19","0x24",
            "0x28","0x00","0x00","0x05","0x00","0x00","0x1B","0x00","0x15","0x15","0x15","0x13","0x1B","0x19","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x19","0x00","0x00","0x1D","0x00","0x1C","0x00","0x21","0x02","0x02","0x02","0x20","0x00","0x00","0x00","0x00","0x00","0x19","0x24",
            "0x28","0x00","0x00","0x35","0x40","0x00","0x00","0x00","0x1B","0x46","0x15","0x15","0x15","0x19","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x37","0x42","0x02","0x02","0x02","0x2C","0x02","0x02","0x02","0x23","0x00","0x00","0x00","0x00","0x00","0x19","0x24",
            "0x28","0x00","0x00","0x1C","0x00","0x00","0x00","0x00","0x15","0x15","0x15","0x46","0x1B","0x19","0x00","0x00","0x00","0x1D","0x14","0x24",
            "0x28","0x19","0x00","0x05","0x00","0x14","0x35","0x27","0x27","0x27","0x27","0x27","0x40","0x00","0x00","0x00","0x00","0x1B","0x03","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x32","0x25","0x25","0x25","0x25","0x25","0x31","0x27","0x27","0x27","0x27","0x2B","0x27","0x32"
        };
        public static readonly string[] LevelTwentyfive = {
            "0x30","0x26","0x2A","0x26","0x2F","0x25","0x25","0x30","0x26","0x26","0x26","0x26","0x2F","0x25","0x25","0x30","0x26","0x26","0x26","0x2F",
            "0x28","0x00","0x1B","0x00","0x34","0x26","0x26","0x38","0x00","0x00","0x00","0x00","0x34","0x26","0x26","0x38","0x00","0x00","0x00","0x24",
            "0x28","0x05","0x1C","0x00","0x15","0x15","0x15","0x15","0x1A","0x05","0x18","0x05","0x15","0x15","0x15","0x15","0x05","0x00","0x05","0x24",
            "0x28","0x00","0x00","0x00","0x21","0x02","0x02","0x23","0x00","0x00","0x05","0x00","0x21","0x1E","0x14","0x1D","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x35","0x27","0x40","0x00","0x04","0x36","0x27","0x27","0x27","0x27","0x40","0x00","0x00","0x36","0x33","0x15","0x35","0x32",
            "0x28","0x00","0x34","0x26","0x3F","0x00","0x00","0x37","0x26","0x26","0x26","0x26","0x3F","0x00","0x04","0x37","0x38","0x15","0x34","0x2F",
            "0x28","0x00","0x15","0x15","0x22","0x1E","0x00","0x1C","0x00","0x17","0x15","0x00","0x22","0x02","0x02","0x20","0x00","0x05","0x00","0x24",
            "0x28","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x00","0x17","0x1D","0x00","0x15","0x15","0x15","0x15","0x05","0x00","0x05","0x24",
            "0x28","0x15","0x15","0x15","0x1D","0x00","0x1F","0x23","0x00","0x15","0x1B","0x00","0x21","0x02","0x02","0x23","0x00","0x05","0x00","0x24",
            "0x31","0x33","0x15","0x35","0x40","0x00","0x00","0x36","0x27","0x27","0x2B","0x27","0x40","0x04","0x13","0x36","0x27","0x27","0x27","0x32",
            "0x30","0x38","0x15","0x34","0x3F","0x04","0x00","0x37","0x26","0x26","0x26","0x26","0x3F","0x00","0x00","0x37","0x26","0x26","0x26","0x2F",
            "0x28","0x00","0x00","0x00","0x22","0x02","0x02","0x20","0x00","0x00","0x05","0x00","0x1C","0x00","0x1F","0x20","0x18","0x18","0x18","0x24",
            "0x28","0x19","0x00","0x00","0x15","0x15","0x15","0x15","0x00","0x05","0x00","0x05","0x00","0x15","0x15","0x15","0x00","0x00","0x00","0x24",
            "0x28","0x19","0x00","0x00","0x21","0x02","0x02","0x23","0x05","0x00","0x00","0x00","0x21","0x02","0x02","0x23","0x00","0x00","0x00","0x24",
            "0x31","0x27","0x39","0x02","0x20","0x1A","0x00","0x22","0x3E","0x27","0x27","0x39","0x20","0x00","0x15","0x22","0x23","0x15","0x35","0x32",
            "0x30","0x26","0x38","0x19","0x1A","0x00","0x1A","0x00","0x34","0x26","0x26","0x38","0x00","0x15","0x00","0x15","0x1C","0x15","0x24","0x25",
            "0x28","0x03","0x15","0x15","0x00","0x00","0x00","0x00","0x15","0x15","0x15","0x15","0x15","0x00","0x15","0x00","0x15","0x15","0x24","0x25",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32","0x25"
        };
        public static readonly string[] LevelTwentysix = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x00","0x05","0x18","0x05","0x18","0x05","0x18","0x05","0x18","0x05","0x18","0x05","0x18","0x05","0x18","0x05","0x18","0x05","0x24",
            "0x28","0x17","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x19","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x17","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x19","0x24",
            "0x28","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x24",
            "0x28","0x17","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x19","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x17","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x19","0x24",
            "0x28","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x24",
            "0x28","0x17","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x19","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x03","0x24",
            "0x28","0x00","0x1F","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x3B",
            "0x28","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x05","0x00","0x04","0x24",
            "0x28","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x24",
            "0x28","0x00","0x05","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x05","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelTwentyseven = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2A","0x26","0x26","0x2F",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x46","0x05","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x13","0x1B","0x00","0x00","0x24",
            "0x28","0x14","0x21","0x02","0x02","0x02","0x02","0x02","0x02","0x23","0x14","0x1F","0x02","0x02","0x02","0x02","0x2E","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x04","0x04","0x04","0x04","0x04","0x04","0x1B","0x15","0x15","0x15","0x15","0x15","0x15","0x1B","0x05","0x00","0x24",
            "0x28","0x00","0x1C","0x04","0x04","0x04","0x04","0x04","0x04","0x1B","0x15","0x15","0x15","0x15","0x15","0x15","0x1B","0x00","0x05","0x24",
            "0x28","0x18","0x00","0x04","0x04","0x04","0x04","0x04","0x04","0x1B","0x13","0x15","0x15","0x15","0x15","0x15","0x1B","0x05","0x00","0x24",
            "0x29","0x02","0x02","0x02","0x02","0x02","0x02","0x2D","0x02","0x2C","0x02","0x02","0x02","0x23","0x15","0x15","0x1B","0x00","0x00","0x24",
            "0x28","0x19","0x00","0x00","0x00","0x00","0x13","0x1B","0x15","0x04","0x15","0x00","0x15","0x1B","0x15","0x15","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x17","0x00","0x00","0x00","0x00","0x1B","0x00","0x15","0x00","0x15","0x13","0x1B","0x15","0x46","0x1B","0x05","0x05","0x24",
            "0x28","0x00","0x00","0x19","0x00","0x00","0x00","0x1B","0x15","0x00","0x15","0x00","0x15","0x22","0x02","0x02","0x2E","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x17","0x00","0x00","0x1B","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x00","0x1B","0x00","0x05","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x19","0x00","0x1B","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x04","0x00","0x00","0x00","0x00","0x17","0x1B","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x1B","0x00","0x05","0x24",
            "0x29","0x1E","0x14","0x1F","0x02","0x02","0x02","0x2C","0x02","0x02","0x02","0x02","0x02","0x02","0x1E","0x14","0x1C","0x05","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x19","0x24",
            "0x28","0x03","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x17","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelTwentyeight = {
            "0x30","0x26","0x26","0x2A","0x26","0x2A","0x26","0x26","0x2A","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x04","0x00","0x1B","0x46","0x1B","0x00","0x13","0x1B","0x15","0x1A","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x04","0x24",
            "0x28","0x00","0x00","0x1B","0x00","0x1C","0x00","0x1F","0x2E","0x15","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x1B","0x00","0x00","0x00","0x00","0x1B","0x15","0x00","0x21","0x02","0x02","0x02","0x2D","0x02","0x02","0x02","0x3B",
            "0x28","0x00","0x00","0x3C","0x1E","0x00","0x1D","0x00","0x1B","0x15","0x00","0x1B","0x04","0x15","0x15","0x1B","0x15","0x12","0x00","0x24",
            "0x28","0x00","0x00","0x1B","0x13","0x00","0x1B","0x13","0x1B","0x15","0x00","0x1B","0x15","0x15","0x15","0x1C","0x15","0x1D","0x00","0x24",
            "0x28","0x00","0x00","0x22","0x02","0x02","0x2C","0x02","0x20","0x15","0x00","0x36","0x27","0x33","0x15","0x15","0x15","0x1B","0x00","0x24",
            "0x28","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x00","0x34","0x26","0x42","0x02","0x02","0x02","0x20","0x00","0x24",
            "0x28","0x19","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x29","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x23","0x00","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x24",
            "0x28","0x19","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x15","0x1D","0x14","0x21","0x02","0x23","0x15","0x00","0x24",
            "0x28","0x04","0x46","0x1F","0x02","0x02","0x1E","0x15","0x15","0x1B","0x00","0x15","0x1B","0x15","0x1B","0x03","0x1B","0x15","0x00","0x24",
            "0x28","0x19","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x00","0x24",
            "0x29","0x02","0x02","0x02","0x02","0x02","0x1E","0x00","0x00","0x1B","0x00","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x00","0x24",
            "0x28","0x19","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x00","0x24",
            "0x28","0x00","0x1F","0x02","0x02","0x02","0x02","0x02","0x02","0x20","0x00","0x15","0x1B","0x14","0x1C","0x15","0x1B","0x15","0x00","0x24",
            "0x28","0x04","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x15","0x1B","0x15","0x15","0x15","0x1B","0x15","0x04","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x2B","0x27","0x27","0x32"
        };
        public static readonly string[] LevelTwentynine = {
            "0x30","0x26","0x26","0x2A","0x26","0x26","0x2F","0x30","0x26","0x26","0x2F","0x30","0x26","0x26","0x2F","0x25","0x30","0x26","0x26","0x2F",
            "0x28","0x00","0x00","0x1C","0x00","0x00","0x34","0x3F","0x46","0x15","0x34","0x3F","0x00","0x00","0x34","0x2A","0x38","0x00","0x00","0x24",
            "0x28","0x00","0x1A","0x00","0x3D","0x00","0x00","0x22","0x23","0x15","0x15","0x22","0x23","0x00","0x00","0x1C","0x00","0x00","0x35","0x32",
            "0x28","0x00","0x00","0x1A","0x00","0x3D","0x00","0x00","0x22","0x23","0x15","0x15","0x22","0x23","0x00","0x00","0x00","0x21","0x3A","0x2F",
            "0x29","0x1E","0x00","0x00","0x1A","0x00","0x3D","0x00","0x00","0x22","0x23","0x15","0x15","0x22","0x23","0x00","0x21","0x20","0x03","0x24",
            "0x28","0x00","0x3D","0x00","0x00","0x00","0x00","0x3D","0x00","0x00","0x22","0x23","0x15","0x15","0x22","0x2D","0x20","0x15","0x15","0x24",
            "0x28","0x00","0x00","0x3D","0x00","0x00","0x1A","0x00","0x3D","0x00","0x00","0x22","0x23","0x15","0x15","0x1C","0x15","0x15","0x35","0x32",
            "0x31","0x33","0x00","0x00","0x3D","0x00","0x00","0x1A","0x00","0x3D","0x00","0x00","0x22","0x23","0x15","0x00","0x15","0x21","0x3A","0x2F",
            "0x30","0x42","0x23","0x00","0x00","0x3D","0x00","0x00","0x1A","0x00","0x3D","0x00","0x00","0x22","0x23","0x00","0x21","0x20","0x00","0x24",
            "0x28","0x00","0x22","0x23","0x00","0x00","0x3D","0x00","0x00","0x00","0x00","0x3D","0x00","0x00","0x22","0x2D","0x20","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x22","0x23","0x00","0x00","0x3D","0x00","0x00","0x1A","0x00","0x3D","0x00","0x00","0x1C","0x00","0x00","0x1F","0x3B",
            "0x31","0x33","0x00","0x00","0x22","0x23","0x00","0x00","0x3D","0x00","0x00","0x1A","0x00","0x3D","0x00","0x00","0x00","0x3D","0x00","0x24",
            "0x30","0x42","0x23","0x00","0x00","0x22","0x23","0x00","0x00","0x3D","0x00","0x00","0x1A","0x00","0x3D","0x00","0x3D","0x00","0x46","0x24",
            "0x28","0x00","0x22","0x23","0x00","0x00","0x22","0x23","0x00","0x00","0x3D","0x00","0x00","0x00","0x00","0x3D","0x00","0x00","0x04","0x24",
            "0x28","0x00","0x00","0x22","0x23","0x00","0x00","0x22","0x23","0x00","0x00","0x3D","0x00","0x00","0x1A","0x00","0x00","0x04","0x00","0x24",
            "0x31","0x33","0x00","0x00","0x22","0x23","0x00","0x00","0x22","0x23","0x00","0x00","0x3D","0x00","0x00","0x1A","0x04","0x00","0x1F","0x3B",
            "0x25","0x31","0x33","0x00","0x00","0x36","0x33","0x00","0x00","0x36","0x33","0x00","0x00","0x1D","0x00","0x00","0x00","0x1D","0x00","0x24",
            "0x25","0x25","0x31","0x27","0x27","0x32","0x31","0x27","0x27","0x32","0x31","0x27","0x27","0x2B","0x27","0x27","0x27","0x2B","0x27","0x32"
        };
        public static readonly string[] LevelThirty = {
            "0x30","0x26","0x2A","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x2F",
            "0x28","0x00","0x1B","0x04","0x04","0x04","0x1B","0x04","0x04","0x04","0x04","0x1B","0x04","0x04","0x04","0x1B","0x04","0x04","0x04","0x24",
            "0x28","0x00","0x1B","0x00","0x1D","0x00","0x1B","0x00","0x1D","0x00","0x00","0x1B","0x00","0x1D","0x00","0x1B","0x00","0x1D","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x18","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1C","0x18","0x03","0x1C","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x1F","0x1E","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x1B","0x00","0x1C","0x19","0x00","0x00","0x00","0x00","0x00","0x1C","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x1B","0x00","0x00","0x1F","0x02","0x02","0x02","0x02","0x1E","0x00","0x00","0x1B","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x1C","0x19","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1C","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x00","0x1F","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x1E","0x00","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x1C","0x19","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1C","0x00","0x24",
            "0x28","0x00","0x00","0x1F","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x1E","0x00","0x00","0x24",
            "0x28","0x17","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelThirtyone = {
            "0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x38","0x00","0x00","0x00","0x00","0x00","0x00","0x17","0x00","0x00","0x03","0x24",
            "0x28","0x00","0x00","0x19","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x3D","0x05","0x1F","0x02","0x02","0x1E","0x05","0x1F","0x3B",
            "0x29","0x02","0x02","0x02","0x02","0x02","0x02","0x1E","0x00","0x00","0x00","0x00","0x00","0x00","0x17","0x00","0x00","0x00","0x04","0x24",
            "0x28","0x00","0x19","0x00","0x00","0x00","0x00","0x00","0x05","0x1D","0x15","0x05","0x00","0x1F","0x02","0x02","0x02","0x02","0x02","0x3B",
            "0x29","0x02","0x02","0x02","0x02","0x1E","0x00","0x00","0x00","0x22","0x23","0x00","0x00","0x17","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x19","0x00","0x00","0x00","0x00","0x00","0x05","0x1D","0x04","0x36","0x33","0x00","0x05","0x00","0x1F","0x02","0x02","0x02","0x3B",
            "0x29","0x02","0x02","0x1E","0x00","0x05","0x00","0x00","0x1B","0x15","0x24","0x28","0x17","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x19","0x00","0x00","0x00","0x05","0x00","0x00","0x1B","0x15","0x24","0x28","0x15","0x15","0x05","0x00","0x00","0x1F","0x02","0x3B",
            "0x28","0x15","0x05","0x00","0x21","0x02","0x1E","0x00","0x1B","0x15","0x34","0x3F","0x15","0x00","0x00","0x00","0x1D","0x13","0x15","0x24",
            "0x28","0x13","0x00","0x21","0x20","0x00","0x18","0x00","0x1B","0x15","0x15","0x1B","0x00","0x05","0x00","0x05","0x22","0x23","0x15","0x24",
            "0x31","0x39","0x02","0x20","0x00","0x00","0x00","0x21","0x20","0x15","0x00","0x1B","0x00","0x00","0x00","0x05","0x00","0x1C","0x15","0x24",
            "0x30","0x38","0x00","0x00","0x05","0x18","0x00","0x1B","0x15","0x15","0x00","0x3C","0x1E","0x05","0x00","0x00","0x05","0x12","0x15","0x24",
            "0x28","0x05","0x15","0x00","0x1F","0x02","0x02","0x20","0x15","0x1D","0x14","0x1C","0x00","0x21","0x1E","0x00","0x05","0x1D","0x15","0x24",
            "0x28","0x00","0x05","0x15","0x00","0x15","0x05","0x15","0x21","0x20","0x05","0x00","0x21","0x20","0x04","0x15","0x00","0x1B","0x15","0x24",
            "0x28","0x15","0x00","0x05","0x15","0x05","0x15","0x05","0x1C","0x00","0x00","0x35","0x40","0x00","0x1F","0x02","0x02","0x20","0x15","0x24",
            "0x28","0x05","0x00","0x15","0x05","0x00","0x00","0x00","0x00","0x00","0x00","0x24","0x28","0x15","0x15","0x15","0x15","0x15","0x15","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32","0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelThirtytwo = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x1A","0x1A","0x1A","0x1A","0x1A","0x1A","0x1A","0x00","0x03","0x00","0x05","0x1A","0x1A","0x1A","0x1A","0x1A","0x1A","0x1A","0x24",
            "0x28","0x00","0x1A","0x1A","0x1A","0x1A","0x1A","0x1A","0x05","0x00","0x05","0x00","0x00","0x1A","0x1A","0x1A","0x1A","0x1A","0x1A","0x24",
            "0x28","0x00","0x00","0x1A","0x1A","0x1A","0x1A","0x1A","0x00","0x05","0x00","0x05","0x00","0x00","0x1A","0x1A","0x1A","0x1A","0x1A","0x24",
            "0x28","0x00","0x00","0x00","0x1A","0x1A","0x1A","0x1A","0x05","0x00","0x05","0x00","0x00","0x00","0x00","0x1A","0x1A","0x1A","0x1A","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x1A","0x1A","0x1A","0x04","0x05","0x00","0x05","0x00","0x00","0x00","0x00","0x1A","0x1A","0x1A","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x1A","0x1A","0x05","0x00","0x05","0x00","0x00","0x00","0x00","0x00","0x00","0x1A","0x1A","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x1A","0x00","0x05","0x00","0x05","0x00","0x00","0x00","0x00","0x00","0x00","0x1A","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x05","0x00","0x05","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x05","0x04","0x05","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x18","0x00","0x00","0x00","0x00","0x00","0x00","0x05","0x00","0x05","0x00","0x18","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x18","0x18","0x00","0x00","0x00","0x00","0x00","0x00","0x05","0x00","0x05","0x18","0x18","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x18","0x18","0x18","0x00","0x00","0x00","0x00","0x05","0x00","0x05","0x00","0x18","0x18","0x18","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x18","0x18","0x18","0x18","0x00","0x00","0x00","0x00","0x05","0x00","0x05","0x18","0x18","0x18","0x18","0x00","0x00","0x00","0x24",
            "0x28","0x18","0x18","0x18","0x18","0x18","0x00","0x00","0x05","0x00","0x05","0x00","0x18","0x18","0x18","0x18","0x18","0x00","0x00","0x24",
            "0x28","0x18","0x18","0x18","0x18","0x18","0x18","0x00","0x00","0x05","0x04","0x05","0x18","0x18","0x18","0x18","0x18","0x18","0x00","0x24",
            "0x28","0x18","0x18","0x18","0x18","0x18","0x18","0x18","0x05","0x00","0x05","0x00","0x18","0x18","0x18","0x18","0x15","0x18","0x18","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelThirtythree = {
            "0x25","0x25","0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x30","0x26","0x3F","0x04","0x15","0x15","0x00","0x05","0x00","0x05","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x00","0x00","0x24",
            "0x28","0x00","0x3C","0x02","0x23","0x15","0x18","0x00","0x00","0x05","0x1F","0x02","0x02","0x02","0x02","0x02","0x23","0x00","0x05","0x24",
            "0x28","0x00","0x1C","0x00","0x22","0x02","0x23","0x05","0x00","0x05","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x05","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x17","0x15","0x3C","0x02","0x23","0x18","0x21","0x02","0x02","0x02","0x23","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x15","0x1D","0x00","0x1D","0x15","0x1B","0x15","0x22","0x02","0x2E","0x46","0x17","0x00","0x1C","0x00","0x1B","0x00","0x18","0x24",
            "0x28","0x15","0x1B","0x00","0x1B","0x15","0x1B","0x15","0x00","0x00","0x1B","0x15","0x15","0x15","0x00","0x00","0x1C","0x05","0x00","0x24",
            "0x28","0x15","0x1B","0x00","0x1B","0x15","0x1C","0x15","0x1D","0x00","0x22","0x02","0x02","0x23","0x00","0x18","0x05","0x00","0x00","0x24",
            "0x28","0x15","0x1C","0x00","0x1B","0x15","0x15","0x15","0x1B","0x18","0x00","0x00","0x00","0x36","0x27","0x33","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x00","0x17","0x36","0x27","0x39","0x02","0x20","0x00","0x35","0x33","0x00","0x34","0x26","0x42","0x23","0x04","0x05","0x24",
            "0x28","0x00","0x00","0x35","0x41","0x26","0x3F","0x00","0x00","0x00","0x24","0x28","0x00","0x12","0x12","0x46","0x22","0x23","0x00","0x24",
            "0x28","0x00","0x21","0x3A","0x3F","0x03","0x1C","0x00","0x1F","0x02","0x3A","0x42","0x02","0x02","0x02","0x1E","0x15","0x22","0x02","0x3B",
            "0x31","0x27","0x40","0x00","0x1B","0x15","0x15","0x00","0x15","0x00","0x15","0x00","0x15","0x00","0x15","0x00","0x15","0x18","0x00","0x24",
            "0x30","0x26","0x38","0x00","0x22","0x02","0x02","0x02","0x02","0x02","0x23","0x00","0x1F","0x02","0x02","0x02","0x1E","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x18","0x00","0x15","0x00","0x00","0x00","0x13","0x1B","0x18","0x00","0x17","0x00","0x00","0x00","0x00","0x18","0x24",
            "0x28","0x00","0x1F","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x20","0x00","0x1F","0x02","0x3E","0x39","0x02","0x1E","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x15","0x15","0x15","0x15","0x15","0x15","0x00","0x15","0x15","0x24","0x28","0x13","0x15","0x15","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32","0x31","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelThirtyfour = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x29","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x1E","0x05","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x00","0x05","0x05","0x00","0x05","0x05","0x05","0x00","0x00","0x00","0x00","0x00","0x05","0x00","0x24",
            "0x28","0x13","0x00","0x05","0x05","0x05","0x05","0x05","0x00","0x05","0x04","0x05","0x05","0x05","0x05","0x04","0x05","0x00","0x00","0x24",
            "0x28","0x05","0x05","0x00","0x00","0x00","0x00","0x05","0x05","0x05","0x00","0x05","0x00","0x00","0x05","0x05","0x00","0x05","0x05","0x24",
            "0x28","0x00","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x00","0x00","0x04","0x05","0x05","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x05","0x04","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x05","0x05","0x00","0x00","0x05","0x05","0x05","0x05","0x24",
            "0x29","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x1E","0x04","0x00","0x00","0x00","0x00","0x00","0x04","0x12","0x46","0x24",
            "0x28","0x18","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x46","0x1F","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x3B",
            "0x28","0x00","0x1A","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1A","0x15","0x00","0x15","0x00","0x15","0x00","0x15","0x00","0x24",
            "0x28","0x00","0x00","0x18","0x00","0x00","0x00","0x00","0x00","0x18","0x00","0x00","0x15","0x00","0x15","0x00","0x15","0x00","0x15","0x24",
            "0x28","0x00","0x00","0x00","0x1A","0x00","0x00","0x00","0x1A","0x00","0x00","0x15","0x00","0x15","0x00","0x15","0x00","0x15","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x18","0x00","0x18","0x00","0x00","0x00","0x00","0x15","0x00","0x15","0x00","0x15","0x00","0x15","0x24",
            "0x28","0x04","0x00","0x00","0x00","0x00","0x1A","0x00","0x00","0x00","0x00","0x15","0x00","0x15","0x00","0x15","0x00","0x15","0x13","0x24",
            "0x28","0x14","0x1F","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x3B",
            "0x28","0x00","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x03","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelThirtyfive = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x00","0x15","0x00","0x15","0x00","0x15","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x00","0x15","0x15","0x15","0x00","0x24",
            "0x29","0x02","0x2D","0x02","0x02","0x02","0x1E","0x15","0x1B","0x15","0x1F","0x02","0x20","0x00","0x35","0x33","0x00","0x1F","0x02","0x3B",
            "0x28","0x00","0x1B","0x00","0x00","0x00","0x05","0x00","0x1B","0x00","0x00","0x00","0x15","0x00","0x24","0x28","0x00","0x00","0x15","0x24",
            "0x28","0x15","0x1C","0x00","0x1D","0x00","0x1F","0x02","0x2C","0x2D","0x02","0x23","0x15","0x35","0x41","0x42","0x2D","0x1E","0x15","0x24",
            "0x28","0x00","0x15","0x00","0x1B","0x00","0x15","0x00","0x00","0x1B","0x04","0x1B","0x15","0x34","0x38","0x00","0x1B","0x00","0x00","0x24",
            "0x29","0x02","0x02","0x02","0x2C","0x02","0x02","0x1E","0x15","0x1B","0x15","0x1B","0x00","0x15","0x15","0x00","0x36","0x33","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x15","0x00","0x00","0x1B","0x15","0x36","0x39","0x02","0x02","0x02","0x3A","0x3F","0x15","0x24",
            "0x28","0x15","0x1F","0x02","0x02","0x02","0x02","0x02","0x02","0x20","0x00","0x34","0x3F","0x15","0x00","0x00","0x15","0x1B","0x15","0x24",
            "0x28","0x00","0x05","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x15","0x35","0x33","0x00","0x1B","0x15","0x24",
            "0x28","0x00","0x1F","0x02","0x3E","0x27","0x33","0x04","0x35","0x33","0x00","0x21","0x20","0x15","0x24","0x28","0x15","0x1B","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x37","0x26","0x42","0x02","0x3B","0x28","0x00","0x1C","0x15","0x15","0x34","0x3F","0x15","0x1B","0x00","0x24",
            "0x29","0x02","0x1E","0x15","0x1B","0x00","0x15","0x04","0x24","0x28","0x00","0x05","0x00","0x00","0x00","0x1B","0x00","0x22","0x3E","0x32",
            "0x28","0x04","0x00","0x00","0x1B","0x00","0x1D","0x00","0x24","0x31","0x27","0x27","0x27","0x27","0x27","0x40","0x15","0x00","0x24","0x25",
            "0x29","0x02","0x02","0x02","0x20","0x00","0x1B","0x00","0x34","0x26","0x26","0x26","0x26","0x26","0x26","0x42","0x1E","0x00","0x24","0x25",
            "0x28","0x00","0x15","0x00","0x00","0x15","0x1B","0x00","0x00","0x15","0x00","0x15","0x15","0x15","0x15","0x00","0x00","0x15","0x24","0x25",
            "0x28","0x03","0x35","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32","0x25",
            "0x31","0x27","0x32","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25"
        };
        public static readonly string[] LevelThirtysix = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x00","0x1A","0x00","0x00","0x00","0x00","0x00","0x18","0x00","0x00","0x00","0x00","0x00","0x1A","0x00","0x00","0x00","0x04","0x24",
            "0x28","0x1A","0x00","0x1A","0x00","0x00","0x00","0x18","0x00","0x1A","0x00","0x00","0x00","0x1A","0x00","0x1A","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1A","0x00","0x1A","0x00","0x18","0x00","0x00","0x00","0x1A","0x00","0x1A","0x00","0x00","0x00","0x1A","0x00","0x1A","0x24",
            "0x28","0x00","0x00","0x1A","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1A","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x1A","0x1F","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x3B",
            "0x28","0x00","0x00","0x00","0x00","0x1A","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1A","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x1A","0x00","0x1A","0x00","0x00","0x00","0x00","0x00","0x1A","0x00","0x1A","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x1A","0x00","0x00","0x00","0x1A","0x00","0x00","0x00","0x1A","0x00","0x00","0x00","0x1A","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1A","0x00","0x00","0x00","0x00","0x00","0x1A","0x00","0x1A","0x00","0x00","0x00","0x00","0x00","0x1A","0x00","0x00","0x24",
            "0x28","0x1A","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1A","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1A","0x00","0x24",
            "0x28","0x00","0x1A","0x00","0x00","0x35","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x33","0x00","0x00","0x00","0x1A","0x24",
            "0x28","0x00","0x00","0x1A","0x00","0x34","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x38","0x00","0x00","0x1A","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x1A","0x00","0x00","0x00","0x00","0x00","0x1A","0x00","0x00","0x00","0x00","0x00","0x1A","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x1A","0x00","0x00","0x00","0x1A","0x00","0x1A","0x00","0x00","0x00","0x1A","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x1A","0x00","0x1A","0x00","0x00","0x00","0x1A","0x00","0x1A","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x03","0x00","0x00","0x00","0x00","0x00","0x1A","0x00","0x00","0x00","0x00","0x00","0x1A","0x00","0x00","0x00","0x00","0x04","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelThirtyseven = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x24",
            "0x28","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x24",
            "0x28","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x04","0x24",
            "0x29","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x1E","0x14","0x24",
            "0x28","0x1A","0x00","0x00","0x1A","0x13","0x00","0x1A","0x00","0x00","0x1A","0x00","0x00","0x1A","0x00","0x00","0x1A","0x00","0x00","0x24",
            "0x28","0x00","0x1A","0x00","0x00","0x1A","0x00","0x00","0x1A","0x00","0x00","0x1A","0x00","0x00","0x1A","0x00","0x00","0x1A","0x46","0x24",
            "0x28","0x00","0x00","0x1A","0x00","0x00","0x1A","0x00","0x00","0x1A","0x00","0x00","0x1A","0x00","0x00","0x1A","0x00","0x00","0x1A","0x24",
            "0x28","0x14","0x1F","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x3B",
            "0x28","0x00","0x05","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x05","0x24",
            "0x28","0x00","0x00","0x05","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x05","0x00","0x13","0x24",
            "0x29","0x02","0x02","0x02","0x2D","0x02","0x02","0x02","0x2D","0x02","0x02","0x02","0x2D","0x02","0x02","0x02","0x2D","0x02","0x02","0x3B",
            "0x28","0x15","0x46","0x15","0x1B","0x15","0x00","0x15","0x1B","0x15","0x00","0x15","0x1B","0x15","0x00","0x15","0x1B","0x15","0x03","0x24",
            "0x28","0x15","0x1D","0x15","0x1B","0x15","0x1D","0x15","0x1B","0x15","0x1D","0x15","0x1B","0x15","0x1D","0x15","0x1B","0x00","0x35","0x32",
            "0x28","0x15","0x1B","0x15","0x1C","0x15","0x1B","0x15","0x1C","0x15","0x1B","0x15","0x1C","0x15","0x1B","0x15","0x1C","0x00","0x24","0x25",
            "0x28","0x00","0x1B","0x15","0x00","0x15","0x1B","0x15","0x00","0x15","0x1B","0x15","0x00","0x15","0x1B","0x15","0x00","0x15","0x24","0x25",
            "0x31","0x27","0x2B","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x32","0x25"
        };
        public static readonly string[] LevelThirtyeight = {
            "0x30","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x00","0x00","0x00","0x1B","0x04","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x00","0x1B","0x00","0x00","0x19","0x00","0x24",
            "0x29","0x02","0x1E","0x00","0x3C","0x02","0x02","0x1E","0x00","0x1B","0x00","0x21","0x1E","0x00","0x1B","0x00","0x1D","0x00","0x19","0x24",
            "0x28","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x00","0x1B","0x00","0x1B","0x19","0x00","0x24",
            "0x28","0x00","0x1F","0x02","0x2E","0x00","0x1F","0x02","0x02","0x2E","0x00","0x1B","0x00","0x00","0x1B","0x00","0x1B","0x00","0x19","0x24",
            "0x28","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1F","0x20","0x00","0x1B","0x19","0x00","0x24",
            "0x29","0x02","0x1E","0x00","0x22","0x02","0x02","0x1E","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x00","0x1B","0x00","0x03","0x24",
            "0x28","0x19","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x22","0x02","0x02","0x02","0x02","0x2C","0x02","0x02","0x3B",
            "0x28","0x00","0x21","0x02","0x02","0x02","0x02","0x02","0x02","0x2E","0x00","0x19","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x3C","0x02","0x02","0x02","0x02","0x3E","0x33","0x00","0x1D","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x21","0x02","0x02","0x1E","0x00","0x1B","0x00","0x00","0x00","0x00","0x34","0x3F","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x00","0x1B","0x00","0x1F","0x23","0x04","0x04","0x1B","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x1B","0x04","0x1F","0x02","0x02","0x2E","0x00","0x00","0x1B","0x04","0x04","0x1B","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x22","0x1E","0x00","0x00","0x00","0x22","0x1E","0x00","0x22","0x02","0x02","0x20","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x24",
            "0x28","0x00","0x22","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x20","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelThirtynine = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x03","0x24",
            "0x28","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x05","0x04","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelFourty = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x12","0x00","0x05","0x05","0x05","0x05","0x00","0x1B","0x05","0x00","0x03","0x00","0x05","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x1D","0x00","0x05","0x00","0x00","0x05","0x00","0x1B","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x05","0x04","0x04","0x05","0x00","0x1C","0x00","0x00","0x05","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x05","0x00","0x00","0x05","0x00","0x12","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x46","0x1B","0x13","0x05","0x05","0x05","0x05","0x00","0x3D","0x05","0x00","0x00","0x00","0x05","0x24",
            "0x29","0x02","0x02","0x02","0x02","0x1E","0x3D","0x1F","0x02","0x02","0x02","0x02","0x1E","0x3D","0x1F","0x02","0x02","0x02","0x02","0x3B",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x1D","0x00","0x05","0x00","0x00","0x05","0x00","0x1D","0x00","0x05","0x05","0x05","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x00","0x05","0x05","0x00","0x00","0x1B","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x00","0x05","0x05","0x00","0x00","0x1B","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x1C","0x00","0x05","0x00","0x00","0x05","0x00","0x1C","0x00","0x05","0x05","0x05","0x00","0x24",
            "0x29","0x02","0x02","0x02","0x02","0x1E","0x3D","0x02","0x02","0x02","0x02","0x02","0x1E","0x3D","0x1F","0x02","0x02","0x02","0x02","0x3B",
            "0x28","0x05","0x00","0x00","0x00","0x05","0x1D","0x46","0x05","0x05","0x05","0x05","0x00","0x3D","0x00","0x05","0x05","0x05","0x00","0x24",
            "0x28","0x00","0x05","0x00","0x05","0x00","0x1B","0x00","0x05","0x00","0x00","0x05","0x00","0x12","0x00","0x00","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x00","0x05","0x00","0x00","0x1B","0x00","0x05","0x00","0x13","0x05","0x00","0x1D","0x00","0x05","0x00","0x05","0x13","0x24",
            "0x28","0x00","0x05","0x00","0x05","0x00","0x1B","0x00","0x05","0x00","0x00","0x05","0x00","0x1B","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x05","0x00","0x00","0x00","0x05","0x1B","0x00","0x05","0x05","0x05","0x05","0x00","0x1B","0x00","0x05","0x05","0x05","0x00","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelFourtyone = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F","0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x00","0x00","0x00","0x17","0x00","0x17","0x00","0x13","0x24","0x28","0x04","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x17","0x24","0x28","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x04","0x24",
            "0x28","0x17","0x00","0x00","0x17","0x00","0x00","0x00","0x00","0x24","0x28","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x17","0x00","0x24","0x28","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x24",
            "0x28","0x00","0x17","0x00","0x00","0x00","0x00","0x00","0x00","0x24","0x28","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x17","0x00","0x00","0x24","0x28","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x24",
            "0x28","0x00","0x00","0x17","0x00","0x00","0x00","0x00","0x00","0x34","0x38","0x05","0x00","0x05","0x00","0x05","0x00","0x00","0x00","0x24",
            "0x28","0x13","0x00","0x00","0x00","0x17","0x00","0x00","0x00","0x12","0x12","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x46","0x24",
            "0x29","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x3B",
            "0x28","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x24",
            "0x28","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x24",
            "0x28","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x00","0x1A","0x24",
            "0x28","0x46","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x03","0x24",
            "0x28","0x18","0x00","0x18","0x00","0x18","0x00","0x18","0x00","0x18","0x00","0x18","0x00","0x18","0x00","0x18","0x00","0x18","0x00","0x24",
            "0x28","0x00","0x18","0x00","0x18","0x00","0x18","0x00","0x18","0x00","0x18","0x00","0x18","0x00","0x18","0x00","0x18","0x00","0x18","0x24",
            "0x28","0x00","0x18","0x00","0x18","0x00","0x18","0x00","0x18","0x00","0x18","0x00","0x18","0x00","0x18","0x00","0x18","0x00","0x18","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelFourtytwo = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x19","0x00","0x00","0x04","0x00","0x00","0x00","0x00","0x19","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x19","0x24",
            "0x28","0x00","0x19","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x19","0x00","0x00","0x00","0x00","0x00","0x00","0x19","0x04","0x24",
            "0x28","0x00","0x00","0x19","0x00","0x00","0x00","0x00","0x00","0x19","0x00","0x00","0x00","0x00","0x00","0x00","0x19","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x19","0x00","0x00","0x00","0x00","0x00","0x19","0x00","0x00","0x00","0x00","0x19","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x19","0x00","0x00","0x00","0x19","0x00","0x00","0x00","0x00","0x19","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x21","0x02","0x02","0x02","0x02","0x02","0x02","0x23","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x1B","0x04","0x15","0x15","0x15","0x15","0x03","0x1B","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x19","0x00","0x19","0x00","0x19","0x1B","0x15","0x15","0x15","0x15","0x15","0x15","0x1B","0x19","0x00","0x19","0x00","0x19","0x24",
            "0x28","0x00","0x19","0x00","0x19","0x00","0x1B","0x15","0x15","0x15","0x15","0x15","0x15","0x1B","0x00","0x19","0x00","0x19","0x00","0x24",
            "0x28","0x04","0x00","0x00","0x00","0x00","0x1B","0x46","0x15","0x15","0x15","0x15","0x04","0x1B","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x22","0x02","0x02","0x02","0x02","0x02","0x02","0x20","0x00","0x00","0x00","0x00","0x04","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x19","0x00","0x00","0x00","0x19","0x00","0x00","0x00","0x00","0x19","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x19","0x00","0x00","0x00","0x00","0x00","0x19","0x00","0x00","0x00","0x00","0x19","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x19","0x00","0x00","0x00","0x00","0x00","0x19","0x00","0x00","0x00","0x00","0x00","0x00","0x19","0x00","0x00","0x24",
            "0x28","0x00","0x19","0x00","0x00","0x00","0x00","0x00","0x00","0x46","0x19","0x00","0x00","0x00","0x00","0x00","0x00","0x19","0x00","0x24",
            "0x28","0x19","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x19","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x19","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelFourtythree = {
            "0x30","0x26","0x2A","0x26","0x26","0x2A","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x00","0x1C","0x13","0x04","0x1B","0x46","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x13","0x24",
            "0x28","0x00","0x00","0x1D","0x00","0x1B","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x24",
            "0x31","0x33","0x00","0x1B","0x00","0x1B","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x24",
            "0x30","0x38","0x00","0x1B","0x00","0x1B","0x04","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x04","0x24",
            "0x28","0x00","0x00","0x1B","0x00","0x22","0x02","0x02","0x2D","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x1E","0x14","0x24",
            "0x28","0x00","0x35","0x40","0x00","0x00","0x00","0x00","0x1B","0x05","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x05","0x04","0x24",
            "0x28","0x00","0x37","0x38","0x05","0x1F","0x1E","0x00","0x1B","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x1C","0x17","0x00","0x1A","0x00","0x00","0x1B","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x17","0x00","0x1A","0x1B","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x14","0x21","0x02","0x02","0x02","0x02","0x02","0x20","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x46","0x1B","0x03","0x00","0x05","0x00","0x00","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x29","0x02","0x20","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x04","0x05","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x05","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x05","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelFourtyfour = {
            "0x30","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x00","0x00","0x00","0x1B","0x04","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x04","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x05","0x05","0x00","0x1B","0x00","0x00","0x00","0x1D","0x05","0x05","0x00","0x1B","0x00","0x00","0x00","0x1D","0x05","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x1B","0x05","0x05","0x00","0x1B","0x00","0x00","0x00","0x1B","0x05","0x05","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x05","0x05","0x1B","0x00","0x00","0x00","0x1B","0x00","0x05","0x05","0x1B","0x00","0x00","0x00","0x1B","0x00","0x05","0x24",
            "0x28","0x00","0x00","0x00","0x1B","0x00","0x05","0x05","0x1B","0x00","0x00","0x00","0x1B","0x00","0x05","0x05","0x1B","0x00","0x00","0x24",
            "0x28","0x05","0x05","0x00","0x1B","0x00","0x00","0x00","0x1B","0x05","0x05","0x00","0x1B","0x00","0x00","0x00","0x1B","0x05","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x1B","0x05","0x05","0x00","0x1B","0x00","0x00","0x00","0x1B","0x05","0x05","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x05","0x05","0x1B","0x00","0x00","0x00","0x1B","0x00","0x05","0x05","0x1B","0x00","0x00","0x00","0x1B","0x00","0x05","0x24",
            "0x28","0x00","0x00","0x00","0x1B","0x00","0x05","0x05","0x1B","0x00","0x00","0x00","0x1B","0x00","0x05","0x05","0x1B","0x00","0x00","0x24",
            "0x28","0x05","0x05","0x00","0x1B","0x00","0x00","0x00","0x1B","0x05","0x05","0x00","0x1B","0x00","0x00","0x00","0x1B","0x05","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x1B","0x05","0x05","0x00","0x1B","0x00","0x00","0x00","0x1B","0x05","0x05","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x05","0x05","0x1B","0x00","0x00","0x00","0x1B","0x00","0x05","0x05","0x1B","0x00","0x00","0x00","0x1B","0x00","0x05","0x24",
            "0x28","0x00","0x00","0x00","0x1B","0x00","0x05","0x05","0x1B","0x00","0x00","0x00","0x1B","0x00","0x05","0x05","0x1B","0x00","0x00","0x24",
            "0x28","0x05","0x05","0x00","0x1B","0x00","0x00","0x00","0x1B","0x05","0x05","0x00","0x1B","0x00","0x00","0x00","0x1B","0x05","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x1C","0x05","0x05","0x00","0x1B","0x00","0x00","0x00","0x1C","0x05","0x05","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x04","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x04","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x03","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x2B","0x27","0x27","0x32"
        };
        public static readonly string[] LevelFourtyfive = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x04","0x00","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x21","0x1E","0x00","0x24",
            "0x28","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x1B","0x1A","0x00","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x13","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x04","0x1B","0x00","0x1A","0x24",
            "0x29","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x2D","0x02","0x02","0x02","0x02","0x02","0x20","0x14","0x1F","0x3B",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x05","0x00","0x05","0x00","0x1B","0x00","0x05","0x00","0x05","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x46","0x1B","0x46","0x00","0x05","0x00","0x05","0x00","0x00","0x13","0x24",
            "0x29","0x1E","0x14","0x21","0x02","0x02","0x02","0x02","0x02","0x02","0x2C","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x3B",
            "0x28","0x1A","0x00","0x1B","0x15","0x15","0x15","0x04","0x15","0x15","0x15","0x05","0x15","0x05","0x15","0x04","0x15","0x05","0x15","0x24",
            "0x28","0x00","0x00","0x1B","0x15","0x05","0x15","0x05","0x15","0x05","0x15","0x05","0x15","0x05","0x15","0x05","0x15","0x05","0x15","0x24",
            "0x28","0x00","0x00","0x1B","0x15","0x15","0x15","0x05","0x15","0x15","0x15","0x00","0x15","0x05","0x15","0x05","0x15","0x15","0x15","0x24",
            "0x28","0x00","0x1A","0x1B","0x15","0x05","0x15","0x05","0x15","0x15","0x04","0x05","0x15","0x05","0x15","0x05","0x15","0x05","0x15","0x24",
            "0x28","0x00","0x1F","0x20","0x15","0x05","0x15","0x05","0x15","0x05","0x15","0x05","0x15","0x05","0x15","0x05","0x15","0x05","0x15","0x24",
            "0x28","0x00","0x00","0x04","0x15","0x15","0x15","0x05","0x15","0x05","0x15","0x05","0x15","0x15","0x15","0x05","0x15","0x05","0x03","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelFourtysix = {
            "0x30","0x26","0x2F","0x25","0x25","0x30","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F","0x25","0x25",
            "0x28","0x00","0x34","0x26","0x26","0x3F","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x24","0x25","0x25",
            "0x28","0x00","0x00","0x00","0x17","0x1C","0x00","0x1D","0x00","0x1B","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x24","0x25","0x25",
            "0x31","0x27","0x33","0x00","0x3D","0x00","0x00","0x1B","0x00","0x1B","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x34","0x26","0x2F",
            "0x25","0x25","0x28","0x00","0x00","0x00","0x35","0x40","0x00","0x1B","0x00","0x05","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x24",
            "0x30","0x26","0x42","0x02","0x02","0x02","0x3A","0x38","0x00","0x1C","0x00","0x00","0x21","0x02","0x02","0x02","0x02","0x1E","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x17","0x3D","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1F","0x02","0x02","0x02","0x02","0x02","0x02","0x1E","0x00","0x00","0x1B","0x00","0x21","0x02","0x02","0x1E","0x00","0x24",
            "0x28","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x00","0x00","0x00","0x21","0x20","0x00","0x1B","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x21","0x02","0x20","0x00","0x00","0x1B","0x00","0x35","0x39","0x02","0x3B",
            "0x28","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x00","0x1B","0x00","0x00","0x00","0x21","0x20","0x00","0x24","0x28","0x03","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x05","0x00","0x05","0x00","0x1B","0x00","0x21","0x02","0x20","0x00","0x00","0x24","0x28","0x00","0x24",
            "0x29","0x02","0x02","0x02","0x02","0x02","0x02","0x1E","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x35","0x32","0x28","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x21","0x02","0x3A","0x26","0x38","0x00","0x24",
            "0x28","0x00","0x21","0x02","0x02","0x02","0x02","0x02","0x02","0x20","0x00","0x1B","0x00","0x1C","0x04","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x17","0x00","0x04","0x00","0x00","0x00","0x00","0x00","0x1C","0x00","0x00","0x1F","0x02","0x02","0x1E","0x00","0x24",
            "0x28","0x04","0x1B","0x19","0x00","0x04","0x00","0x00","0x00","0x00","0x00","0x04","0x1D","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x31","0x27","0x2B","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelFourtyseven = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2A","0x26","0x2F",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x17","0x1B","0x1A","0x24",
            "0x28","0x15","0x21","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x1E","0x00","0x21","0x02","0x20","0x00","0x24",
            "0x28","0x15","0x1B","0x04","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x1B","0x15","0x04","0x00","0x24",
            "0x28","0x15","0x1B","0x00","0x21","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x2E","0x15","0x1D","0x00","0x24",
            "0x28","0x15","0x1B","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x15","0x1B","0x00","0x24",
            "0x28","0x15","0x1B","0x00","0x1B","0x00","0x21","0x02","0x02","0x02","0x02","0x02","0x02","0x23","0x00","0x1B","0x15","0x1B","0x00","0x24",
            "0x28","0x15","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x00","0x17","0x00","0x1B","0x00","0x1B","0x15","0x1B","0x00","0x24",
            "0x28","0x15","0x1B","0x00","0x1B","0x00","0x1B","0x03","0x00","0x00","0x00","0x1D","0x00","0x1B","0x00","0x1B","0x15","0x1B","0x00","0x24",
            "0x28","0x15","0x1B","0x00","0x1B","0x00","0x22","0x02","0x02","0x02","0x02","0x20","0x00","0x1B","0x00","0x1B","0x15","0x1B","0x00","0x24",
            "0x28","0x15","0x1B","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x1B","0x15","0x1B","0x00","0x24",
            "0x28","0x15","0x1B","0x00","0x22","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x20","0x00","0x1B","0x15","0x1B","0x00","0x24",
            "0x28","0x15","0x1B","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x1B","0x15","0x1B","0x00","0x24",
            "0x28","0x15","0x22","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x20","0x15","0x1B","0x00","0x24",
            "0x28","0x04","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x00","0x1B","0x00","0x24",
            "0x29","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x20","0x00","0x24",
            "0x28","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x04","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelFourtyeight = {
            "0x30","0x26","0x26","0x2F","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25",
            "0x28","0x00","0x00","0x34","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x29","0x1E","0x17","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x17","0x24",
            "0x28","0x04","0x00","0x21","0x02","0x02","0x02","0x02","0x23","0x00","0x3D","0x00","0x21","0x02","0x02","0x02","0x2D","0x1E","0x00","0x24",
            "0x29","0x1E","0x00","0x1B","0x15","0x15","0x15","0x15","0x1C","0x00","0x00","0x00","0x1C","0x17","0x00","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x1C","0x15","0x15","0x15","0x15","0x15","0x1D","0x00","0x1D","0x00","0x00","0x17","0x00","0x1B","0x00","0x1F","0x3B",
            "0x28","0x00","0x3D","0x04","0x15","0x15","0x15","0x15","0x15","0x1C","0x00","0x1B","0x17","0x00","0x00","0x00","0x1C","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x1D","0x15","0x15","0x15","0x15","0x15","0x15","0x00","0x1B","0x00","0x00","0x00","0x17","0x03","0x3D","0x00","0x24",
            "0x29","0x1E","0x00","0x1B","0x15","0x15","0x15","0x15","0x15","0x1D","0x00","0x1B","0x00","0x17","0x00","0x00","0x1D","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x1C","0x15","0x15","0x15","0x15","0x15","0x1B","0x00","0x1B","0x00","0x00","0x17","0x00","0x1B","0x00","0x1F","0x3B",
            "0x28","0x00","0x3D","0x04","0x15","0x15","0x15","0x15","0x15","0x1B","0x00","0x1B","0x00","0x00","0x00","0x17","0x1C","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x1D","0x15","0x15","0x15","0x15","0x15","0x1B","0x00","0x1B","0x00","0x00","0x17","0x00","0x04","0x3D","0x00","0x24",
            "0x29","0x1E","0x00","0x1B","0x15","0x15","0x15","0x15","0x15","0x1C","0x00","0x1C","0x00","0x00","0x00","0x17","0x1D","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x1B","0x46","0x15","0x15","0x15","0x1D","0x00","0x1A","0x00","0x1D","0x00","0x46","0x00","0x1C","0x00","0x1F","0x3B",
            "0x28","0x00","0x1F","0x2C","0x02","0x02","0x02","0x02","0x20","0x00","0x3D","0x00","0x22","0x02","0x02","0x1E","0x00","0x00","0x17","0x24",
            "0x28","0x04","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x17","0x00","0x00","0x00","0x00","0x00","0x00","0x17","0x1F","0x02","0x3B",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x33","0x00","0x00","0x04","0x24",
            "0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x31","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelFourtynine = {
            "0x25","0x25","0x25","0x25","0x30","0x26","0x26","0x2F","0x25","0x25","0x25","0x25","0x30","0x26","0x26","0x2F","0x25","0x25","0x25","0x25",
            "0x25","0x25","0x25","0x30","0x38","0x13","0x00","0x34","0x2F","0x25","0x25","0x30","0x38","0x03","0x00","0x34","0x2F","0x25","0x25","0x25",
            "0x25","0x25","0x30","0x38","0x17","0x00","0x18","0x00","0x24","0x25","0x25","0x28","0x00","0x00","0x00","0x17","0x24","0x25","0x25","0x25",
            "0x25","0x25","0x28","0x46","0x00","0x18","0x00","0x17","0x24","0x25","0x30","0x42","0x02","0x02","0x1E","0x14","0x34","0x26","0x2F","0x25",
            "0x30","0x26","0x42","0x02","0x02","0x02","0x02","0x02","0x3A","0x2F","0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x34","0x2F",
            "0x28","0x46","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x34","0x38","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x15","0x15","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x19","0x1A","0x17","0x00","0x00","0x15","0x15","0x00","0x00","0x19","0x1A","0x17","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x18","0x19","0x18","0x00","0x00","0x15","0x15","0x00","0x00","0x18","0x19","0x18","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x17","0x1A","0x19","0x00","0x00","0x15","0x15","0x00","0x00","0x17","0x1A","0x19","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x15","0x15","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x15","0x15","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x35","0x33","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x31","0x33","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24","0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x35","0x32",
            "0x25","0x31","0x33","0x15","0x15","0x15","0x15","0x15","0x35","0x32","0x31","0x33","0x15","0x15","0x15","0x15","0x15","0x35","0x32","0x25",
            "0x25","0x25","0x31","0x33","0x15","0x15","0x15","0x15","0x24","0x25","0x25","0x28","0x15","0x15","0x15","0x15","0x35","0x32","0x25","0x25",
            "0x25","0x25","0x25","0x31","0x33","0x04","0x04","0x35","0x32","0x25","0x25","0x31","0x33","0x04","0x04","0x35","0x32","0x25","0x25","0x25",
            "0x25","0x25","0x25","0x25","0x31","0x27","0x27","0x32","0x25","0x25","0x25","0x25","0x31","0x27","0x27","0x32","0x25","0x25","0x25","0x25"
        };
        public static readonly string[] LevelFifty = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x00","0x04","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x05","0x05","0x00","0x05","0x00","0x05","0x05","0x00","0x05","0x00","0x05","0x05","0x00","0x05","0x05","0x00","0x05","0x24",
            "0x28","0x00","0x05","0x05","0x00","0x05","0x00","0x05","0x05","0x00","0x05","0x00","0x05","0x05","0x00","0x05","0x05","0x00","0x05","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x00","0x05","0x00","0x05","0x05","0x00","0x05","0x05","0x00","0x05","0x24",
            "0x28","0x00","0x05","0x00","0x05","0x05","0x00","0x05","0x05","0x00","0x05","0x00","0x05","0x05","0x00","0x05","0x05","0x00","0x05","0x24",
            "0x28","0x00","0x05","0x05","0x00","0x05","0x00","0x05","0x05","0x00","0x00","0x00","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x24",
            "0x28","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x05","0x05","0x00","0x05","0x00","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x05","0x05","0x00","0x05","0x00","0x05","0x05","0x00","0x05","0x00","0x05","0x05","0x05","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x05","0x05","0x00","0x05","0x00","0x00","0x00","0x00","0x05","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x05","0x05","0x00","0x05","0x00","0x05","0x05","0x00","0x05","0x00","0x05","0x05","0x05","0x05","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x05","0x00","0x05","0x05","0x00","0x00","0x00","0x00","0x00","0x00","0x05","0x00","0x05","0x13","0x24",
            "0x28","0x00","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x05","0x05","0x24",
            "0x28","0x00","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x05","0x03","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x00","0x14","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelFiftyone = {
            "0x30","0x26","0x2A","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x2F","0x25",
            "0x28","0x00","0x1B","0x15","0x15","0x15","0x1B","0x15","0x15","0x15","0x1B","0x15","0x00","0x15","0x1B","0x15","0x15","0x15","0x24","0x25",
            "0x28","0x15","0x1C","0x15","0x1D","0x15","0x1C","0x15","0x1D","0x15","0x1C","0x15","0x1D","0x15","0x1C","0x15","0x1D","0x15","0x34","0x2F",
            "0x28","0x15","0x15","0x15","0x1B","0x15","0x00","0x15","0x1B","0x15","0x15","0x15","0x1B","0x15","0x15","0x15","0x1B","0x15","0x00","0x24",
            "0x29","0x02","0x2D","0x02","0x2C","0x02","0x2D","0x02","0x2C","0x02","0x2D","0x02","0x2C","0x02","0x2D","0x02","0x2C","0x1E","0x15","0x24",
            "0x28","0x04","0x1B","0x00","0x00","0x15","0x1B","0x15","0x00","0x15","0x1B","0x15","0x00","0x15","0x1B","0x15","0x15","0x15","0x15","0x24",
            "0x28","0x15","0x1B","0x15","0x1D","0x15","0x1B","0x15","0x1D","0x15","0x1B","0x15","0x1D","0x15","0x1B","0x15","0x1F","0x02","0x02","0x3B",
            "0x28","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x15","0x15","0x15","0x24",
            "0x28","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x22","0x02","0x02","0x1E","0x00","0x24",
            "0x28","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x15","0x15","0x15","0x15","0x15","0x24",
            "0x28","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x22","0x02","0x02","0x02","0x02","0x02","0x02","0x3B",
            "0x28","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x1B","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x24",
            "0x28","0x15","0x1C","0x15","0x1B","0x15","0x1C","0x15","0x1B","0x15","0x22","0x02","0x02","0x02","0x02","0x02","0x02","0x1E","0x00","0x24",
            "0x28","0x15","0x15","0x15","0x1B","0x15","0x00","0x15","0x1B","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x15","0x24",
            "0x29","0x1E","0x15","0x21","0x02","0x02","0x02","0x2D","0x2C","0x02","0x02","0x2D","0x02","0x02","0x02","0x2D","0x02","0x02","0x02","0x3B",
            "0x28","0x15","0x15","0x1C","0x15","0x15","0x15","0x1C","0x15","0x15","0x15","0x1C","0x15","0x15","0x15","0x1C","0x15","0x15","0x15","0x24",
            "0x31","0x33","0x15","0x00","0x15","0x1D","0x15","0x00","0x15","0x1D","0x15","0x00","0x15","0x1D","0x15","0x00","0x15","0x1D","0x03","0x24",
            "0x25","0x31","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x2B","0x27","0x32"
        };
        public static readonly string[] LevelFiftytwo = {
            "0x30","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x26","0x26","0x2A","0x26","0x2A","0x26","0x2A","0x26","0x2A","0x26","0x26","0x2F",
            "0x28","0x46","0x00","0x00","0x1B","0x00","0x00","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x03","0x24",
            "0x28","0x00","0x1D","0x00","0x1B","0x00","0x1D","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1D","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x18","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x1C","0x00","0x1B","0x00","0x1C","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1C","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x1B","0x04","0x00","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x1D","0x00","0x1B","0x00","0x1D","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1D","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x18","0x24",
            "0x28","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x18","0x46","0x24",
            "0x28","0x00","0x1B","0x00","0x1C","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x1B","0x00","0x3C","0x02","0x02","0x3B",
            "0x28","0x00","0x1C","0x00","0x00","0x00","0x1B","0x00","0x1B","0x18","0x1C","0x00","0x1C","0x00","0x1B","0x18","0x1B","0x1A","0x17","0x24",
            "0x28","0x04","0x00","0x1A","0x00","0x1A","0x1B","0x18","0x1B","0x04","0x00","0x18","0x00","0x18","0x1B","0x04","0x1B","0x19","0x18","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x2B","0x27","0x2B","0x27","0x27","0x27","0x27","0x27","0x2B","0x27","0x2B","0x27","0x27","0x32"
        };
        public static readonly string[] LevelFiftythree = {
            "0x30","0x26","0x2F","0x25","0x25","0x25","0x25","0x25","0x30","0x26","0x26","0x26","0x2F","0x30","0x26","0x26","0x26","0x26","0x2F","0x25",
            "0x28","0x00","0x34","0x26","0x2F","0x25","0x25","0x25","0x28","0x04","0x00","0x00","0x34","0x3F","0x46","0x00","0x00","0x00","0x24","0x25",
            "0x28","0x00","0x00","0x00","0x37","0x26","0x26","0x26","0x42","0x3E","0x33","0x00","0x00","0x36","0x39","0x1E","0x00","0x00","0x24","0x25",
            "0x29","0x02","0x1E","0x00","0x1B","0x00","0x00","0x00","0x00","0x34","0x42","0x23","0x00","0x37","0x38","0x00","0x00","0x35","0x32","0x25",
            "0x28","0x04","0x00","0x00","0x1B","0x00","0x35","0x33","0x00","0x00","0x00","0x1B","0x00","0x1B","0x00","0x00","0x1F","0x3A","0x26","0x2F",
            "0x31","0x27","0x33","0x00","0x1C","0x00","0x24","0x31","0x27","0x33","0x00","0x1B","0x00","0x1C","0x00","0x1D","0x00","0x17","0x03","0x24",
            "0x25","0x25","0x28","0x00","0x00","0x00","0x24","0x25","0x30","0x38","0x00","0x1B","0x00","0x00","0x00","0x1B","0x00","0x1A","0x1A","0x24",
            "0x25","0x25","0x31","0x27","0x27","0x27","0x32","0x30","0x38","0x00","0x00","0x1C","0x00","0x1D","0x00","0x1B","0x00","0x00","0x00","0x24",
            "0x25","0x30","0x26","0x26","0x2F","0x25","0x30","0x38","0x00","0x00","0x3D","0x00","0x04","0x1B","0x00","0x1C","0x46","0x00","0x35","0x32",
            "0x25","0x28","0x00","0x00","0x24","0x30","0x38","0x00","0x18","0x3D","0x00","0x00","0x35","0x40","0x00","0x00","0x1F","0x02","0x3B","0x25",
            "0x25","0x28","0x00","0x00","0x34","0x38","0x00","0x00","0x00","0x00","0x00","0x1F","0x3A","0x43","0x33","0x00","0x00","0x00","0x24","0x25",
            "0x25","0x28","0x19","0x00","0x00","0x00","0x00","0x1D","0x00","0x21","0x1E","0x04","0x04","0x34","0x43","0x27","0x33","0x00","0x24","0x25",
            "0x30","0x38","0x00","0x35","0x27","0x27","0x27","0x2B","0x39","0x20","0x00","0x00","0x1D","0x00","0x24","0x30","0x38","0x00","0x24","0x25",
            "0x28","0x04","0x00","0x24","0x25","0x25","0x30","0x26","0x38","0x00","0x00","0x35","0x40","0x00","0x34","0x38","0x1A","0x00","0x24","0x25",
            "0x28","0x00","0x00","0x34","0x26","0x26","0x38","0x00","0x00","0x00","0x35","0x32","0x28","0x00","0x00","0x00","0x00","0x35","0x32","0x25",
            "0x31","0x33","0x00","0x00","0x00","0x00","0x00","0x00","0x35","0x27","0x32","0x25","0x31","0x27","0x27","0x33","0x00","0x24","0x25","0x25",
            "0x25","0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x32","0x25","0x25","0x25","0x25","0x25","0x25","0x31","0x27","0x32","0x25","0x25",
            "0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25"
        };
        public static readonly string[] LevelNinty = {
            "0x30","0x26","0x2A","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x46","0x1B","0x04","0x00","0x18","0x1B","0x46","0x00","0x00","0x00","0x00","0x17","0x15","0x00","0x15","0x00","0x15","0x15","0x24",
            "0x28","0x15","0x1C","0x05","0x1D","0x00","0x1B","0x15","0x15","0x15","0x15","0x15","0x21","0x02","0x02","0x02","0x02","0x1E","0x15","0x24",
            "0x28","0x00","0x05","0x00","0x1B","0x00","0x22","0x02","0x02","0x02","0x1E","0x14","0x1B","0x00","0x15","0x00","0x15","0x15","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x1B","0x00","0x15","0x00","0x15","0x15","0x15","0x15","0x1B","0x00","0x1F","0x02","0x02","0x23","0x00","0x24",
            "0x29","0x02","0x02","0x02","0x20","0x00","0x21","0x02","0x02","0x02","0x02","0x02","0x20","0x00","0x00","0x00","0x19","0x1B","0x18","0x24",
            "0x28","0x15","0x15","0x15","0x15","0x00","0x1B","0x19","0x00","0x00","0x00","0x00","0x00","0x18","0x00","0x00","0x17","0x1B","0x00","0x24",
            "0x28","0x15","0x21","0x02","0x23","0x00","0x22","0x02","0x02","0x1E","0x15","0x21","0x02","0x23","0x15","0x15","0x00","0x1B","0x00","0x24",
            "0x28","0x15","0x1B","0x13","0x1B","0x19","0x00","0x00","0x00","0x12","0x15","0x1B","0x1A","0x22","0x02","0x1E","0x00","0x1B","0x00","0x24",
            "0x28","0x15","0x1B","0x15","0x22","0x02","0x02","0x23","0x04","0x1D","0x15","0x1B","0x00","0x00","0x00","0x00","0x00","0x1B","0x15","0x24",
            "0x28","0x00","0x1B","0x15","0x15","0x15","0x15","0x3C","0x02","0x20","0x15","0x1C","0x00","0x21","0x02","0x23","0x00","0x1B","0x1A","0x24",
            "0x28","0x15","0x22","0x02","0x02","0x23","0x15","0x1B","0x15","0x15","0x15","0x15","0x15","0x1B","0x03","0x1B","0x00","0x1B","0x00","0x24",
            "0x28","0x15","0x15","0x15","0x15","0x1B","0x15","0x1B","0x15","0x21","0x02","0x02","0x02","0x20","0x00","0x1B","0x18","0x1B","0x00","0x24",
            "0x29","0x02","0x02","0x1E","0x00","0x1B","0x15","0x1B","0x15","0x1B","0x1A","0x00","0x00","0x00","0x00","0x3C","0x02","0x20","0x14","0x24",
            "0x28","0x19","0x00","0x00","0x00","0x1B","0x15","0x1B","0x00","0x1B","0x00","0x1F","0x02","0x2D","0x02","0x20","0x00","0x00","0x00","0x24",
            "0x28","0x00","0x1A","0x21","0x02","0x20","0x15","0x1C","0x15","0x1B","0x00","0x00","0x15","0x1C","0x00","0x00","0x17","0x1D","0x00","0x24",
            "0x28","0x13","0x00","0x1B","0x00","0x15","0x15","0x15","0x15","0x1B","0x19","0x00","0x00","0x00","0x00","0x00","0x00","0x1B","0x13","0x24",
            "0x31","0x27","0x27","0x2B","0x27","0x27","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x2B","0x27","0x32"
        };
        public static readonly string[] LevelNintyone = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x26","0x26","0x2A","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x05","0x00","0x00","0x05","0x15","0x15","0x1B","0x15","0x00","0x15","0x15","0x15","0x1B","0x15","0x15","0x00","0x15","0x15","0x24",
            "0x28","0x00","0x05","0x15","0x1D","0x17","0x00","0x1B","0x00","0x17","0x1D","0x15","0x1A","0x1B","0x15","0x15","0x1D","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x05","0x1B","0x15","0x1A","0x1B","0x15","0x15","0x1B","0x15","0x00","0x1B","0x15","0x15","0x1B","0x00","0x00","0x24",
            "0x28","0x00","0x05","0x00","0x1B","0x00","0x00","0x1B","0x17","0x00","0x1B","0x15","0x00","0x1B","0x15","0x15","0x1B","0x00","0x00","0x24",
            "0x28","0x05","0x15","0x00","0x1B","0x15","0x00","0x1B","0x15","0x00","0x1B","0x15","0x00","0x1B","0x15","0x15","0x1B","0x00","0x00","0x24",
            "0x28","0x15","0x05","0x00","0x1B","0x1A","0x15","0x1B","0x00","0x17","0x1B","0x15","0x00","0x1B","0x15","0x15","0x1B","0x19","0x00","0x24",
            "0x28","0x15","0x00","0x05","0x1B","0x00","0x00","0x1B","0x15","0x15","0x1B","0x15","0x15","0x1B","0x00","0x17","0x1B","0x15","0x15","0x24",
            "0x28","0x15","0x05","0x00","0x1B","0x00","0x15","0x1B","0x00","0x17","0x1B","0x1A","0x15","0x1B","0x15","0x15","0x1B","0x00","0x17","0x24",
            "0x28","0x05","0x00","0x00","0x1B","0x15","0x1A","0x1B","0x15","0x15","0x1B","0x00","0x15","0x1B","0x00","0x17","0x1B","0x00","0x15","0x24",
            "0x28","0x00","0x05","0x00","0x1B","0x00","0x00","0x1B","0x00","0x17","0x1B","0x00","0x15","0x1B","0x15","0x15","0x1B","0x19","0x00","0x24",
            "0x28","0x00","0x15","0x05","0x1B","0x15","0x00","0x1B","0x00","0x15","0x1B","0x00","0x15","0x1B","0x15","0x15","0x1B","0x15","0x00","0x24",
            "0x28","0x00","0x05","0x15","0x1B","0x1A","0x15","0x1B","0x17","0x00","0x1B","0x00","0x15","0x1B","0x15","0x15","0x1B","0x17","0x00","0x24",
            "0x28","0x05","0x00","0x15","0x1B","0x00","0x00","0x1B","0x15","0x15","0x1B","0x15","0x15","0x1B","0x15","0x15","0x1B","0x00","0x17","0x24",
            "0x28","0x04","0x05","0x15","0x1B","0x00","0x15","0x1B","0x00","0x17","0x1B","0x19","0x00","0x1B","0x15","0x15","0x1B","0x00","0x17","0x24",
            "0x28","0x15","0x15","0x05","0x1B","0x15","0x1A","0x1C","0x00","0x00","0x1B","0x19","0x15","0x1B","0x15","0x15","0x1B","0x00","0x00","0x24",
            "0x28","0x15","0x05","0x00","0x1B","0x15","0x15","0x15","0x15","0x15","0x1B","0x46","0x15","0x1B","0x46","0x15","0x1B","0x03","0x00","0x24",
            "0x31","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x27","0x27","0x2B","0x27","0x27","0x2B","0x27","0x27","0x2B","0x27","0x27","0x32"
        };
        public static readonly string[] LevelNintytwo = {
            "0x25","0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x30","0x38","0x00","0x15","0x15","0x15","0x15","0x05","0x00","0x00","0x12","0x00","0x00","0x00","0x00","0x18","0x15","0x15","0x15","0x24",
            "0x28","0x46","0x3D","0x15","0x15","0x15","0x05","0x00","0x05","0x00","0x1D","0x00","0x00","0x00","0x18","0x00","0x15","0x3D","0x00","0x24",
            "0x28","0x15","0x05","0x1D","0x15","0x05","0x00","0x05","0x00","0x05","0x1B","0x00","0x00","0x18","0x21","0x02","0x1E","0x15","0x15","0x24",
            "0x28","0x15","0x00","0x1B","0x05","0x00","0x05","0x00","0x05","0x00","0x1B","0x00","0x18","0x00","0x1B","0x1A","0x15","0x15","0x19","0x24",
            "0x28","0x15","0x05","0x22","0x02","0x23","0x00","0x05","0x00","0x13","0x1B","0x18","0x00","0x21","0x20","0x15","0x15","0x1A","0x13","0x24",
            "0x28","0x05","0x15","0x05","0x00","0x22","0x3E","0x02","0x02","0x02","0x2C","0x02","0x02","0x2E","0x1A","0x15","0x1A","0x15","0x15","0x24",
            "0x28","0x00","0x05","0x15","0x05","0x00","0x1B","0x04","0x15","0x00","0x1A","0x15","0x46","0x1B","0x15","0x15","0x15","0x15","0x1A","0x24",
            "0x28","0x05","0x00","0x05","0x00","0x15","0x1B","0x00","0x00","0x1A","0x00","0x00","0x17","0x3C","0x02","0x02","0x1E","0x14","0x1F","0x3B",
            "0x29","0x02","0x02","0x1E","0x14","0x1F","0x2E","0x15","0x00","0x00","0x00","0x00","0x15","0x1B","0x19","0x19","0x19","0x05","0x17","0x24",
            "0x28","0x00","0x17","0x00","0x00","0x00","0x1B","0x04","0x15","0x15","0x15","0x15","0x04","0x1B","0x04","0x00","0x05","0x00","0x15","0x24",
            "0x28","0x00","0x00","0x00","0x17","0x00","0x3C","0x02","0x02","0x2D","0x02","0x02","0x02","0x2C","0x23","0x15","0x15","0x00","0x15","0x24",
            "0x28","0x00","0x17","0x00","0x00","0x21","0x20","0x13","0x15","0x1B","0x03","0x00","0x00","0x17","0x22","0x02","0x23","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x17","0x1B","0x19","0x00","0x17","0x22","0x02","0x1E","0x17","0x00","0x00","0x13","0x1B","0x00","0x15","0x24",
            "0x28","0x00","0x17","0x1F","0x02","0x20","0x15","0x00","0x15","0x12","0x18","0x00","0x00","0x17","0x00","0x00","0x1C","0x19","0x00","0x24",
            "0x28","0x15","0x3D","0x15","0x00","0x15","0x00","0x15","0x00","0x1D","0x00","0x18","0x00","0x00","0x15","0x15","0x15","0x3D","0x15","0x24",
            "0x28","0x00","0x15","0x00","0x15","0x00","0x15","0x00","0x15","0x1B","0x00","0x00","0x18","0x00","0x00","0x17","0x00","0x00","0x00","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32"
        };
        public static readonly string[] LevelNintythree = {
            "0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x28","0x1A","0x00","0x00","0x00","0x15","0x00","0x00","0x00","0x1A","0x00","0x00","0x00","0x15","0x00","0x00","0x00","0x1A","0x00","0x24",
            "0x28","0x00","0x1A","0x00","0x15","0x04","0x15","0x00","0x1A","0x00","0x1A","0x00","0x15","0x04","0x15","0x00","0x1A","0x00","0x1A","0x24",
            "0x28","0x00","0x00","0x1A","0x00","0x3D","0x00","0x1A","0x00","0x00","0x00","0x1A","0x00","0x15","0x3D","0x1A","0x00","0x00","0x00","0x24",
            "0x28","0x15","0x00","0x00","0x1A","0x00","0x1A","0x00","0x00","0x15","0x00","0x00","0x1A","0x00","0x1A","0x00","0x00","0x15","0x00","0x24",
            "0x28","0x04","0x15","0x19","0x00","0x1A","0x00","0x00","0x15","0x04","0x15","0x00","0x00","0x1A","0x00","0x17","0x15","0x04","0x15","0x24",
            "0x28","0x15","0x00","0x00","0x1F","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x02","0x1E","0x00","0x15","0x00","0x24",
            "0x28","0x00","0x00","0x00","0x00","0x17","0x00","0x00","0x00","0x00","0x00","0x17","0x00","0x00","0x00","0x00","0x00","0x17","0x15","0x24",
            "0x28","0x00","0x17","0x00","0x00","0x00","0x00","0x00","0x17","0x00","0x00","0x00","0x00","0x00","0x17","0x00","0x00","0x15","0x04","0x24",
            "0x31","0x27","0x27","0x27","0x27","0x33","0x13","0x35","0x27","0x27","0x27","0x27","0x33","0x14","0x35","0x27","0x27","0x27","0x27","0x32",
            "0x25","0x25","0x25","0x25","0x25","0x28","0x13","0x24","0x25","0x25","0x25","0x25","0x28","0x14","0x24","0x25","0x25","0x25","0x25","0x25",
            "0x25","0x25","0x25","0x25","0x25","0x28","0x13","0x24","0x25","0x25","0x25","0x25","0x28","0x14","0x24","0x25","0x25","0x25","0x25","0x25",
            "0x25","0x25","0x25","0x25","0x25","0x28","0x13","0x24","0x25","0x25","0x25","0x25","0x28","0x14","0x24","0x25","0x25","0x25","0x25","0x25",
            "0x25","0x25","0x25","0x25","0x25","0x28","0x13","0x24","0x25","0x25","0x25","0x25","0x28","0x14","0x24","0x25","0x25","0x25","0x25","0x25",
            "0x25","0x30","0x26","0x26","0x26","0x38","0x13","0x24","0x25","0x25","0x25","0x25","0x28","0x14","0x34","0x26","0x26","0x26","0x2F","0x25",
            "0x25","0x28","0x00","0x13","0x13","0x13","0x15","0x24","0x25","0x25","0x25","0x25","0x28","0x15","0x12","0x12","0x12","0x03","0x24","0x25",
            "0x25","0x31","0x27","0x27","0x27","0x27","0x27","0x32","0x25","0x25","0x25","0x25","0x31","0x27","0x27","0x27","0x27","0x27","0x32","0x25",
            "0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25","0x25"
        };
        public static readonly string[] LevelOnehundred = {
            "0x25","0x25","0x30","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x26","0x2F",
            "0x30","0x26","0x3F","0x00","0x00","0x00","0x00","0x17","0x00","0x00","0x00","0x00","0x17","0x12","0x15","0x15","0x15","0x00","0x15","0x24",
            "0x28","0x06","0x22","0x3E","0x33","0x00","0x00","0x00","0x00","0x00","0x17","0x00","0x00","0x1D","0x15","0x00","0x15","0x18","0x46","0x24",
            "0x28","0x00","0x1A","0x34","0x3F","0x15","0x35","0x39","0x02","0x02","0x02","0x1E","0x05","0x3C","0x02","0x02","0x02","0x02","0x02","0x3B",
            "0x28","0x15","0x00","0x00","0x1B","0x15","0x24","0x28","0x04","0x00","0x00","0x05","0x00","0x1B","0x00","0x00","0x00","0x17","0x13","0x24",
            "0x28","0x19","0x00","0x00","0x1B","0x15","0x24","0x31","0x33","0x05","0x00","0x00","0x00","0x1B","0x15","0x15","0x15","0x15","0x15","0x24",
            "0x28","0x00","0x00","0x15","0x1C","0x15","0x34","0x26","0x43","0x33","0x19","0x00","0x00","0x1B","0x00","0x19","0x00","0x00","0x00","0x24",
            "0x28","0x18","0x15","0x00","0x00","0x00","0x17","0x03","0x24","0x31","0x33","0x00","0x00","0x1B","0x15","0x15","0x15","0x15","0x15","0x24",
            "0x29","0x02","0x02","0x02","0x2D","0x02","0x02","0x02","0x3A","0x2F","0x31","0x33","0x00","0x22","0x02","0x02","0x1E","0x00","0x1F","0x3B",
            "0x28","0x1A","0x00","0x1A","0x1C","0x00","0x17","0x15","0x17","0x34","0x2F","0x28","0x00","0x00","0x05","0x00","0x00","0x05","0x00","0x24",
            "0x28","0x15","0x15","0x15","0x15","0x00","0x00","0x15","0x00","0x15","0x24","0x31","0x27","0x33","0x05","0x00","0x05","0x00","0x00","0x24",
            "0x28","0x18","0x15","0x17","0x21","0x1E","0x1A","0x15","0x17","0x15","0x37","0x26","0x2F","0x28","0x19","0x00","0x00","0x05","0x00","0x24",
            "0x28","0x00","0x17","0x15","0x1B","0x15","0x00","0x15","0x00","0x15","0x1B","0x46","0x34","0x43","0x27","0x33","0x05","0x00","0x00","0x24",
            "0x28","0x00","0x00","0x19","0x1B","0x1A","0x00","0x15","0x17","0x15","0x1B","0x00","0x17","0x24","0x25","0x29","0x1E","0x18","0x00","0x24",
            "0x28","0x05","0x1F","0x1E","0x3D","0x3D","0x05","0x1F","0x02","0x02","0x2E","0x15","0x1F","0x3A","0x26","0x3F","0x04","0x1D","0x18","0x24",
            "0x28","0x00","0x00","0x00","0x1B","0x00","0x00","0x00","0x05","0x00","0x1C","0x00","0x00","0x00","0x17","0x1C","0x00","0x36","0x27","0x32",
            "0x28","0x00","0x18","0x13","0x1B","0x05","0x18","0x05","0x00","0x05","0x15","0x17","0x00","0x00","0x00","0x12","0x00","0x24","0x25","0x25",
            "0x31","0x27","0x27","0x27","0x2B","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x27","0x32","0x25","0x25"
        };

        void ChangeOverLevels(string[] Level) {
            for(int i = 0; i< 360; i++)
                Map[i] = Level[i];
            for (int i = 0; i < 360; i++) {
                switch (Map[i]) {
                    case "0x15":
                    case "0x16":
                        SpikeNum++;
                        break;
                }
            }
            KeysInHand = 0;
            PlayerDir = 3;
            PLayerAniTime = 0;
            KeysNeeded = 1;
            Fence[0] = 0;
            HasSpikes = false;
            HasEnimes = false;
            Spikes[0] = 0;
            Enimes[0] = 0;
            Enimes[1] = 0;
            x = 40;
            y = 40;
        }
        
        public void Transition(int position) {
            switch (position) {
                case 0:
                    FadeAlpha = 0.0f;
                    FadeDir = 1;
                    break;
                case 1:
                    SwitchLevel();
                    FadeAlpha = 1.0f;
                    FadeDir = 2;
                    break;
                case 2:
                    FadeAlpha = 1.0f;
                    FadeDir = 3;
                    break;
            }
        }

        public void SwitchLevel() {
            switch (CurrentLevel) {
                case 0: ChangeOverLevels(MainMenuMap); break;
                case 1: ChangeOverLevels(LevelOne); break;
                case 2: ChangeOverLevels(LevelTwo); break;
                case 3: ChangeOverLevels(LevelThree); break;
                case 4: ChangeOverLevels(LevelFour); Fence[0] = 1; break;
                case 5: ChangeOverLevels(LevelFive); Fence[0] = 1; break;
                case 6: ChangeOverLevels(LevelSix); Fence[0] = 1; break;
                case 7: ChangeOverLevels(LevelSeven); KeysNeeded = 2; Fence[0] = 1; break;
                case 8: ChangeOverLevels(LevelEight); Fence[0] = 1; break;
                case 9: ChangeOverLevels(LevelNine); KeysNeeded = 3; Fence[0] = 1; HasSpikes = true; break;
                case 10:
                    ChangeOverLevels(LevelTen);
                    x = 360;
                    y = 640;
                    KeysNeeded = 3;
                    Fence[0] = 2;
                    Fence[1] = 281;
                    Fence[2] = 250;
                    Lock[0] = 72;
                    Lock[1] = 148;
                    HasSpikes = true;
                    HasEnimes = true;
                    Enimes[1] = 4;
                    Enimes[2] = 232;
                    Enimes[3] = 258;
                    Enimes[4] = 272;
                    Enimes[5] = 298;
                    break;
                case 11:
                    ChangeOverLevels(LevelEleven);
                    x = 400;
                    y = 80;
                    KeysNeeded = 3;
                    Fence[0] = 3;
                    Fence[1] = 81;
                    Fence[2] = 332;
                    Fence[3] = 28;
                    Lock[0] = 35;
                    Lock[1] = 301;
                    Lock[2] = 328;
                    HasEnimes = true;
                    Enimes[1] = 7;
                    Enimes[2] = 324;
                    Enimes[3] = 25;
                    Enimes[4] = 227;
                    Enimes[5] = 272;
                    Enimes[6] = 37;
                    Enimes[7] = 277;
                    Enimes[8] = 338;
                    break;
                case 12:
                    ChangeOverLevels(LevelTwelve);
                    x = 440;
                    KeysNeeded = 3;
                    Fence[0] = 2;
                    Fence[1] = 22;
                    Fence[2] = 23;
                    Lock[0] = 38;
                    Lock[1] = 328;
                    HasSpikes = true;
                    HasEnimes = true;
                    Enimes[1] = 4;
                    Enimes[2] = 24;
                    Enimes[3] = 325;
                    Enimes[4] = 267;
                    Enimes[5] = 108;
                    break;
                case 13:
                    ChangeOverLevels(LevelThirteen);
                    x = 200;
                    y = 200;
                    KeysNeeded = 2;
                    Fence[0] = 3;
                    Fence[1] = 178;
                    Fence[2] = 249;
                    Fence[3] = 43;
                    Lock[0] = 152;
                    Lock[1] = 48;
                    Lock[2] = 282;
                    HasSpikes = true;
                    HasEnimes = true;
                    Enimes[1] = 12;
                    Enimes[2] = 37;
                    Enimes[3] = 52;
                    Enimes[4] = 82;
                    Enimes[5] = 110;
                    Enimes[6] = 114;
                    Enimes[7] = 116;
                    Enimes[8] = 189;
                    Enimes[9] = 191;
                    Enimes[10] = 193;
                    Enimes[11] = 195;
                    Enimes[12] = 243;
                    Enimes[13] = 112;
                    break;
                case 14:
                    ChangeOverLevels(LevelFourteen);
                    x = 400;
                    y = 360;
                    KeysNeeded = 1;
                    Fence[0] = 1;
                    HasSpikes = true;
                    HasEnimes = true;
                    Enimes[1] = 3;
                    Enimes[2] = 302;
                    Enimes[3] = 308;
                    Enimes[4] = 314;
                    break;
                case 15:
                    ChangeOverLevels(LevelFifteen);
                    x = 480;
                    y = 520;
                    KeysNeeded = 2;
                    Fence[0] = 2;
                    Fence[1] = 147;
                    Fence[2] = 278;
                    Lock[0] = 217;
                    Lock[1] = 37;
                    HasSpikes = true;
                    HasEnimes = true;
                    Enimes[1] = 10;
                    Enimes[2] = 27;
                    Enimes[3] = 121;
                    Enimes[4] = 124;
                    Enimes[5] = 190;
                    Enimes[6] = 194;
                    Enimes[7] = 301;
                    Enimes[8] = 309;
                    Enimes[9] = 323;
                    Enimes[10] = 332;
                    Enimes[11] = 337;
                    break;
                case 16:
                    ChangeOverLevels(LevelSixteen);
                    x = 80;
                    y = 320;
                    KeysNeeded = 1;
                    Fence[0] = 4;
                    Fence[1] = 158;
                    Fence[2] = 198;
                    Fence[3] = 212;
                    Fence[4] = 326;
                    Lock[0] = 177;
                    Lock[1] = 125;
                    Lock[2] = 333;
                    Lock[3] = 207;
                    HasSpikes = true;
                    HasEnimes = true;
                    Enimes[1] = 9;
                    Enimes[2] = 33;
                    Enimes[3] = 37;
                    Enimes[4] = 121;
                    Enimes[5] = 133;
                    Enimes[6] = 137;
                    Enimes[7] = 161;
                    Enimes[8] = 234;
                    Enimes[9] = 317;
                    Enimes[10] = 338;
                    break;
                case 17:
                    ChangeOverLevels(LevelSeventeen);
                    x = 720;
                    y = 320;
                    KeysNeeded = 1;
                    HasEnimes = true;
                    Enimes[1] = 41;
                    Enimes[2] = 26;
                    Enimes[3] = 27;
                    Enimes[4] = 48;
                    Enimes[5] = 69;
                    Enimes[6] = 70;
                    Enimes[7] = 51;
                    Enimes[8] = 32;
                    Enimes[9] = 33;
                    Enimes[10] = 34;
                    Enimes[11] = 35;
                    Enimes[12] = 36;
                    Enimes[13] = 57;
                    Enimes[14] = 77;
                    Enimes[15] = 98;
                    Enimes[16] = 118;
                    Enimes[17] = 138;
                    Enimes[18] = 158;
                    Enimes[19] = 197;
                    Enimes[20] = 216;
                    Enimes[21] = 235;
                    Enimes[22] = 254;
                    Enimes[23] = 273;
                    Enimes[24] = 292;
                    Enimes[25] = 311;
                    Enimes[26] = 330;
                    Enimes[27] = 329;
                    Enimes[28] = 308;
                    Enimes[29] = 287;
                    Enimes[30] = 266;
                    Enimes[31] = 245;
                    Enimes[32] = 224;
                    Enimes[33] = 203;
                    Enimes[34] = 161;
                    Enimes[35] = 141;
                    Enimes[36] = 121;
                    Enimes[37] = 101;
                    Enimes[38] = 81;
                    Enimes[39] = 62;
                    Enimes[40] = 42;
                    Enimes[41] = 24;
                    Enimes[42] = 25;
                    break;
                case 18: ChangeOverLevels(LevelEighteen); x = 720; y = 600; break;
                case 19:
                    ChangeOverLevels(LevelNineteen);
                    KeysNeeded = 1;
                    Fence[0] = 3;
                    Fence[1] = 35;
                    Fence[2] = 326;
                    Fence[3] = 337;
                    Lock[0] = 123;
                    Lock[1] = 98;
                    Lock[2] = 28;
                    HasSpikes = true;
                    HasEnimes = true;
                    Enimes[1] = 15;
                    Enimes[2] = 169;
                    Enimes[3] = 191;
                    Enimes[4] = 208;
                    Enimes[5] = 230;
                    Enimes[6] = 312;
                    Enimes[7] = 117;
                    Enimes[8] = 136;
                    Enimes[9] = 155;
                    Enimes[10] = 174;
                    Enimes[11] = 193;
                    Enimes[12] = 213;
                    Enimes[13] = 234;
                    Enimes[14] = 255;
                    Enimes[15] = 276;
                    Enimes[16] = 297;
                    break;
                case 20:
                    ChangeOverLevels(LevelTwenty);
                    KeysNeeded = 1;
                    Fence[0] = 8;
                    Fence[1] = 307;
                    Fence[2] = 309;
                    Fence[3] = 311;
                    Fence[4] = 313;
                    Fence[5] = 315;
                    Fence[6] = 56;
                    Fence[7] = 303;
                    Fence[8] = 305;
                    Lock[0] = 27;
                    Lock[1] = 268;
                    Lock[2] = 182;
                    Lock[3] = 187;
                    Lock[4] = 196;
                    Lock[5] = 317;
                    Lock[6] = 113;
                    Lock[7] = 118;
                    HasSpikes = true;
                    HasEnimes = true;
                    Enimes[1] = 14;
                    Enimes[2] = 91;
                    Enimes[3] = 115;
                    Enimes[4] = 129;
                    Enimes[5] = 149;
                    Enimes[6] = 153;
                    Enimes[7] = 158;
                    Enimes[8] = 170;
                    Enimes[9] = 233;
                    Enimes[10] = 238;
                    Enimes[11] = 270;
                    Enimes[12] = 272;
                    Enimes[13] = 274;
                    Enimes[14] = 276;
                    Enimes[15] = 278;
                    break;
                case 21:
                    ChangeOverLevels(LevelTwentyone);
                    y = 640;
                    KeysNeeded = 4;
                    Fence[0] = 2;
                    Fence[1] = 258;
                    Fence[2] = 297;
                    Lock[0] = 64;
                    Lock[1] = 77;
                    HasSpikes = true;
                    HasEnimes = true;
                    Enimes[1] = 11;
                    Enimes[2] = 30;
                    Enimes[3] = 48;
                    Enimes[4] = 52;
                    Enimes[5] = 141;
                    Enimes[6] = 146;
                    Enimes[7] = 156;
                    Enimes[8] = 158;
                    Enimes[9] = 181;
                    Enimes[10] = 187;
                    Enimes[11] = 193;
                    Enimes[12] = 198;
                    break;
                case 22:
                    ChangeOverLevels(LevelTwentytwo);
                    x = 720;
                    KeysNeeded = 4;
                    Fence[0] = 3;
                    Fence[1] = 323;
                    Fence[2] = 336;
                    Fence[3] = 122;
                    Lock[0] = 235;
                    Lock[1] = 141;
                    Lock[2] = 277;
                    HasSpikes = true;
                    HasEnimes = true;
                    Enimes[1] = 19;
                    Enimes[2] = 82;
                    Enimes[3] = 162;
                    Enimes[4] = 106;
                    Enimes[5] = 146;
                    Enimes[6] = 186;
                    Enimes[7] = 226;
                    Enimes[8] = 29;
                    Enimes[9] = 50;
                    Enimes[10] = 69;
                    Enimes[11] = 270;
                    Enimes[12] = 289;
                    Enimes[13] = 310;
                    Enimes[14] = 329;
                    Enimes[15] = 112;
                    Enimes[16] = 152;
                    Enimes[17] = 232;
                    Enimes[18] = 157;
                    Enimes[19] = 177;
                    Enimes[20] = 172;
                    break;
                case 23:
                    ChangeOverLevels(LevelTwentythree);
                    x = 240;
                    y = 480;
                    KeysNeeded = 3;
                    Fence[0] = 1;
                    HasSpikes = true;
                    HasEnimes = true;
                    Enimes[1] = 22;
                    Enimes[2] = 141;
                    Enimes[3] = 122;
                    Enimes[4] = 103;
                    Enimes[5] = 84;
                    Enimes[6] = 65;
                    Enimes[7] = 46;
                    Enimes[8] = 27;
                    Enimes[9] = 48;
                    Enimes[10] = 69;
                    Enimes[11] = 90;
                    Enimes[12] = 111;
                    Enimes[13] = 132;
                    Enimes[14] = 153;
                    Enimes[15] = 174;
                    Enimes[16] = 195;
                    Enimes[17] = 216;
                    Enimes[18] = 237;
                    Enimes[19] = 258;
                    Enimes[20] = 277;
                    Enimes[21] = 296;
                    Enimes[22] = 315;
                    Enimes[23] = 334;
                    break;
                case 24:
                    ChangeOverLevels(LevelTwentyfour);
                    KeysNeeded = 4;
                    Fence[0] = 2;
                    Fence[1] = 325;
                    Fence[2] = 318;
                    Lock[0] = 231;
                    Lock[1] = 189;
                    HasSpikes = true;
                    HasEnimes = true;
                    Enimes[1] = 34;
                    Enimes[2] = 33;
                    Enimes[3] = 201;
                    Enimes[4] = 241;
                    Enimes[5] = 321;
                    Enimes[6] = 38;
                    Enimes[7] = 58;
                    Enimes[8] = 78;
                    Enimes[9] = 98;
                    Enimes[10] = 118;
                    Enimes[11] = 138;
                    Enimes[12] = 158;
                    Enimes[13] = 178;
                    Enimes[14] = 198;
                    Enimes[15] = 218;
                    Enimes[16] = 238;
                    Enimes[17] = 258;
                    Enimes[18] = 278;
                    Enimes[19] = 298;
                    Enimes[20] = 53;
                    Enimes[21] = 73;
                    Enimes[22] = 93;
                    Enimes[23] = 113;
                    Enimes[24] = 133;
                    Enimes[25] = 153;
                    Enimes[26] = 173;
                    Enimes[27] = 193;
                    Enimes[28] = 213;
                    Enimes[29] = 233;
                    Enimes[30] = 253;
                    Enimes[31] = 273;
                    Enimes[32] = 293;
                    Enimes[33] = 313;
                    Enimes[34] = 333;
                    Enimes[35] = 41;
                    break;
                case 25:
                    ChangeOverLevels(LevelTwentyfive);
                    KeysNeeded = 4;
                    Fence[0] = 1;
                    HasSpikes = true;
                    HasEnimes = true;
                    Enimes[1] = 13;
                    Enimes[2] = 48;
                    Enimes[3] = 50;
                    Enimes[4] = 129;
                    Enimes[5] = 149;
                    Enimes[6] = 236;
                    Enimes[7] = 237;
                    Enimes[8] = 238;
                    Enimes[9] = 241;
                    Enimes[10] = 261;
                    Enimes[11] = 285;
                    Enimes[12] = 303;
                    Enimes[13] = 304;
                    Enimes[14] = 306;
                    break;
                case 26:
                    ChangeOverLevels(LevelTwentysix);
                    HasEnimes = true;
                    Enimes[1] = 27;
                    Enimes[2] = 23;
                    Enimes[3] = 25;
                    Enimes[4] = 27;
                    Enimes[5] = 29;
                    Enimes[6] = 31;
                    Enimes[7] = 33;
                    Enimes[8] = 35;
                    Enimes[9] = 37;
                    Enimes[10] = 41;
                    Enimes[11] = 58;
                    Enimes[12] = 81;
                    Enimes[13] = 98;
                    Enimes[14] = 121;
                    Enimes[15] = 138;
                    Enimes[16] = 161;
                    Enimes[17] = 178;
                    Enimes[18] = 201;
                    Enimes[19] = 218;
                    Enimes[20] = 242;
                    Enimes[21] = 244;
                    Enimes[22] = 246;
                    Enimes[23] = 248;
                    Enimes[24] = 250;
                    Enimes[25] = 252;
                    Enimes[26] = 254;
                    Enimes[27] = 256;
                    Enimes[28] = 258;
                    break;
                case 27:
                    ChangeOverLevels(LevelTwentyseven);
                    x = 80;
                    y = 640;
                    KeysNeeded = 20;
                    Fence[0] = 4;
                    Fence[1] = 70;
                    Fence[2] = 282;
                    Fence[3] = 295;
                    Fence[4] = 61;
                    Lock[0] = 130;
                    Lock[1] = 55;
                    Lock[2] = 166;
                    Lock[3] = 192;
                    HasSpikes = true;
                    HasEnimes = true;
                    Enimes[1] = 9;
                    Enimes[2] = 121;
                    Enimes[3] = 318;
                    Enimes[4] = 338;
                    Enimes[5] = 161;
                    Enimes[6] = 182;
                    Enimes[7] = 203;
                    Enimes[8] = 224;
                    Enimes[9] = 245;
                    Enimes[10] = 266;
                    break;
                case 28:
                    ChangeOverLevels(LevelTwentyeight);
                    x = 400;
                    y = 320;
                    KeysNeeded = 6;
                    Fence[0] = 3;
                    Fence[1] = 97;
                    Fence[2] = 213;
                    Fence[3] = 313;
                    Lock[0] = 27;
                    Lock[1] = 104;
                    Lock[2] = 107;
                    HasSpikes = true;
                    HasEnimes = true;
                    Enimes[1] = 5;
                    Enimes[2] = 30;
                    Enimes[3] = 161;
                    Enimes[4] = 201;
                    Enimes[5] = 241;
                    Enimes[6] = 281;
                    break;
                case 29:
                    ChangeOverLevels(LevelTwentynine);
                    KeysNeeded = 3;
                    HasSpikes = true;
                    HasEnimes = true;
                    Enimes[1] = 11;
                    Enimes[2] = 42;
                    Enimes[3] = 63;
                    Enimes[4] = 84;
                    Enimes[5] = 126;
                    Enimes[6] = 147;
                    Enimes[7] = 168;
                    Enimes[8] = 210;
                    Enimes[9] = 231;
                    Enimes[10] = 252;
                    Enimes[11] = 294;
                    Enimes[12] = 315;
                    break;
                case 30:
                    ChangeOverLevels(LevelThirty);
                    KeysNeeded = 13;
                    HasEnimes = true;
                    Enimes[1] = 6;
                    Enimes[2] = 150;
                    Enimes[3] = 169;
                    Enimes[4] = 207;
                    Enimes[5] = 245;
                    Enimes[6] = 283;
                    Enimes[7] = 321;
                    break;
                case 31:
                    ChangeOverLevels(LevelThirtyone);
                    x = 520;
                    y = 600;
                    KeysNeeded = 3;
                    Fence[0] = 2;
                    Fence[1] = 270;
                    Fence[2] = 257;
                    Lock[0] = 201;
                    Lock[1] = 197;
                    HasSpikes = true;
                    HasEnimes = true;
                    Enimes[1] = 10;
                    Enimes[2] = 35;
                    Enimes[3] = 43;
                    Enimes[4] = 74;
                    Enimes[5] = 82;
                    Enimes[6] = 113;
                    Enimes[7] = 121;
                    Enimes[8] = 152;
                    Enimes[9] = 161;
                    Enimes[10] = 206;
                    Enimes[11] = 245;
                    break;
                case 32:
                    ChangeOverLevels(LevelThirtytwo);
                    x = 360;
                    y = 640;
                    KeysNeeded = 3;
                    HasSpikes = true;
                    HasEnimes = true;
                    Enimes[1] = 112;
                    Enimes[2] = 21;
                    Enimes[3] = 22;
                    Enimes[4] = 23;
                    Enimes[5] = 24;
                    Enimes[6] = 25;
                    Enimes[7] = 26;
                    Enimes[8] = 27;
                    Enimes[9] = 42;
                    Enimes[10] = 43;
                    Enimes[11] = 44;
                    Enimes[12] = 45;
                    Enimes[13] = 46;
                    Enimes[14] = 47;
                    Enimes[15] = 63;
                    Enimes[16] = 64;
                    Enimes[17] = 65;
                    Enimes[18] = 66;
                    Enimes[19] = 67;
                    Enimes[20] = 84;
                    Enimes[21] = 85;
                    Enimes[22] = 86;
                    Enimes[23] = 87;
                    Enimes[24] = 105;
                    Enimes[25] = 106;
                    Enimes[26] = 107;
                    Enimes[27] = 126;
                    Enimes[28] = 127;
                    Enimes[29] = 147;
                    Enimes[30] = 32;
                    Enimes[31] = 33;
                    Enimes[32] = 34;
                    Enimes[33] = 35;
                    Enimes[34] = 36;
                    Enimes[35] = 37;
                    Enimes[36] = 38;
                    Enimes[37] = 53;
                    Enimes[38] = 54;
                    Enimes[39] = 55;
                    Enimes[40] = 56;
                    Enimes[41] = 57;
                    Enimes[42] = 58;
                    Enimes[43] = 74;
                    Enimes[44] = 75;
                    Enimes[45] = 76;
                    Enimes[46] = 77;
                    Enimes[47] = 78;
                    Enimes[48] = 95;
                    Enimes[49] = 96;
                    Enimes[50] = 97;
                    Enimes[51] = 98;
                    Enimes[52] = 116;
                    Enimes[53] = 117;
                    Enimes[54] = 118;
                    Enimes[55] = 137;
                    Enimes[56] = 138;
                    Enimes[57] = 158;
                    Enimes[58] = 201;
                    Enimes[59] = 221;
                    Enimes[60] = 222;
                    Enimes[61] = 241;
                    Enimes[62] = 242;
                    Enimes[63] = 243;
                    Enimes[64] = 261;
                    Enimes[65] = 262;
                    Enimes[66] = 263;
                    Enimes[67] = 264;
                    Enimes[68] = 281;
                    Enimes[69] = 282;
                    Enimes[70] = 283;
                    Enimes[71] = 284;
                    Enimes[72] = 285;
                    Enimes[73] = 301;
                    Enimes[74] = 302;
                    Enimes[75] = 303;
                    Enimes[76] = 304;
                    Enimes[77] = 305;
                    Enimes[78] = 306;
                    Enimes[79] = 321;
                    Enimes[80] = 322;
                    Enimes[81] = 323;
                    Enimes[82] = 324;
                    Enimes[83] = 325;
                    Enimes[84] = 326;
                    Enimes[85] = 327;
                    Enimes[86] = 328;
                    Enimes[87] = 212;
                    Enimes[88] = 232;
                    Enimes[89] = 233;
                    Enimes[90] = 252;
                    Enimes[91] = 253;
                    Enimes[92] = 254;
                    Enimes[93] = 272;
                    Enimes[94] = 273;
                    Enimes[95] = 274;
                    Enimes[96] = 275;
                    Enimes[97] = 292;
                    Enimes[98] = 293;
                    Enimes[99] = 294;
                    Enimes[100] = 295;
                    Enimes[101] = 296;
                    Enimes[102] = 312;
                    Enimes[103] = 313;
                    Enimes[104] = 314;
                    Enimes[105] = 315;
                    Enimes[106] = 316;
                    Enimes[107] = 317;
                    Enimes[108] = 332;
                    Enimes[109] = 333;
                    Enimes[110] = 334;
                    Enimes[111] = 335;
                    Enimes[112] = 337;
                    Enimes[113] = 338;
                    break;
                case 33:
                    ChangeOverLevels(LevelThirtythree);
                    x = 40;
                    y = 80;
                    KeysNeeded = 2;
                    Fence[0] = 2;
                    Fence[1] = 213;
                    Fence[2] = 214;
                    Lock[0] = 289;
                    Lock[1] = 336;
                    HasSpikes = true;
                    HasEnimes = true;
                    Enimes[1] = 14;
                    Enimes[2] = 46;
                    Enimes[3] = 84;
                    Enimes[4] = 89;
                    Enimes[5] = 112;
                    Enimes[6] = 118;
                    Enimes[7] = 155;
                    Enimes[8] = 169;
                    Enimes[9] = 183;
                    Enimes[10] = 257;
                    Enimes[11] = 283;
                    Enimes[12] = 291;
                    Enimes[13] = 293;
                    Enimes[14] = 298;
                    Enimes[15] = 333;
                    break;
                case 34:
                    ChangeOverLevels(LevelThirtyfour);
                    KeysNeeded = 23;
                    Fence[0] = 2;
                    Fence[1] = 177;
                    Fence[2] = 301;
                    Lock[0] = 81;
                    Lock[1] = 298;
                    HasSpikes = true;
                    HasEnimes = true;
                    Enimes[1] = 10;
                    Enimes[2] = 181;
                    Enimes[3] = 202;
                    Enimes[4] = 223;
                    Enimes[5] = 244;
                    Enimes[6] = 265;
                    Enimes[7] = 286;
                    Enimes[8] = 267;
                    Enimes[9] = 248;
                    Enimes[10] = 229;
                    Enimes[11] = 210;
                    break;
                case 35: ChangeOverLevels(LevelThirtyfive); KeysNeeded = 4; HasSpikes = true; break;
                case 36:
                    ChangeOverLevels(LevelThirtysix);
                    KeysNeeded = 2;
                    HasEnimes = true;
                    Enimes[1] = 55;
                    Enimes[2] = 22;
                    Enimes[3] = 28;
                    Enimes[4] = 34;
                    Enimes[5] = 41;
                    Enimes[6] = 43;
                    Enimes[7] = 47;
                    Enimes[8] = 49;
                    Enimes[9] = 53;
                    Enimes[10] = 55;
                    Enimes[11] = 62;
                    Enimes[12] = 64;
                    Enimes[13] = 66;
                    Enimes[14] = 70;
                    Enimes[15] = 72;
                    Enimes[16] = 76;
                    Enimes[17] = 78;
                    Enimes[18] = 83;
                    Enimes[19] = 85;
                    Enimes[20] = 91;
                    Enimes[21] = 97;
                    Enimes[22] = 104;
                    Enimes[23] = 125;
                    Enimes[24] = 133;
                    Enimes[25] = 144;
                    Enimes[26] = 146;
                    Enimes[27] = 152;
                    Enimes[28] = 154;
                    Enimes[29] = 163;
                    Enimes[30] = 167;
                    Enimes[31] = 171;
                    Enimes[32] = 175;
                    Enimes[33] = 182;
                    Enimes[34] = 188;
                    Enimes[35] = 190;
                    Enimes[36] = 196;
                    Enimes[37] = 201;
                    Enimes[38] = 209;
                    Enimes[39] = 217;
                    Enimes[40] = 222;
                    Enimes[41] = 238;
                    Enimes[42] = 243;
                    Enimes[43] = 257;
                    Enimes[44] = 264;
                    Enimes[45] = 270;
                    Enimes[46] = 276;
                    Enimes[47] = 285;
                    Enimes[48] = 289;
                    Enimes[49] = 291;
                    Enimes[50] = 295;
                    Enimes[51] = 306;
                    Enimes[52] = 308;
                    Enimes[53] = 312;
                    Enimes[54] = 314;
                    Enimes[55] = 327;
                    Enimes[56] = 333;
                    break;
                case 37:
                    ChangeOverLevels(LevelThirtyseven);
                    x = 40;
                    y = 640;
                    KeysNeeded = 54;
                    Fence[0] = 2;
                    Fence[1] = 161;
                    Fence[2] = 98;
                    Lock[0] = 105;
                    Lock[1] = 238;
                    HasSpikes = true;
                    HasEnimes = true;
                    Enimes[1] = 18;
                    Enimes[2] = 101;
                    Enimes[3] = 122;
                    Enimes[4] = 143;
                    Enimes[5] = 104;
                    Enimes[6] = 125;
                    Enimes[7] = 146;
                    Enimes[8] = 107;
                    Enimes[9] = 128;
                    Enimes[10] = 149;
                    Enimes[11] = 110;
                    Enimes[12] = 131;
                    Enimes[13] = 152;
                    Enimes[14] = 113;
                    Enimes[15] = 134;
                    Enimes[16] = 155;
                    Enimes[17] = 116;
                    Enimes[18] = 137;
                    Enimes[19] = 158;
                    break;
                case 38:
                    ChangeOverLevels(LevelThirtyeight);
                    KeysNeeded = 6;
                    HasEnimes = true;
                    Enimes[1] = 7;
                    Enimes[2] = 141;
                    Enimes[3] = 171;
                    Enimes[4] = 37;
                    Enimes[5] = 58;
                    Enimes[6] = 77;
                    Enimes[7] = 98;
                    Enimes[8] = 117;
                    break;
                case 39: ChangeOverLevels(LevelThirtynine); break;
                case 40:
                    ChangeOverLevels(LevelFourty);
                    KeysNeeded = 2;
                    Fence[0] = 3;
                    Fence[1] = 26;
                    Fence[2] = 273;
                    Fence[3] = 93;
                    Lock[0] = 290;
                    Lock[1] = 107;
                    Lock[2] = 298;
                    break;
                case 41:
                    ChangeOverLevels(LevelFourtyone);
                    KeysNeeded = 2;
                    Fence[0] = 2;
                    Fence[1] = 169;
                    Fence[2] = 170;
                    Lock[0] = 28;
                    Lock[1] = 161;
                    HasEnimes = true;
                    Enimes[1] = 64;
                    Enimes[2] = 24;
                    Enimes[3] = 26;
                    Enimes[4] = 48;
                    Enimes[5] = 61;
                    Enimes[6] = 64;
                    Enimes[7] = 338;
                    Enimes[8] = 87;
                    Enimes[9] = 102;
                    Enimes[10] = 126;
                    Enimes[11] = 143;
                    Enimes[12] = 165;
                    Enimes[13] = 201;
                    Enimes[14] = 203;
                    Enimes[15] = 205;
                    Enimes[16] = 207;
                    Enimes[17] = 209;
                    Enimes[18] = 211;
                    Enimes[19] = 213;
                    Enimes[20] = 215;
                    Enimes[21] = 217;
                    Enimes[22] = 221;
                    Enimes[23] = 223;
                    Enimes[24] = 225;
                    Enimes[25] = 227;
                    Enimes[26] = 229;
                    Enimes[27] = 231;
                    Enimes[28] = 233;
                    Enimes[29] = 235;
                    Enimes[30] = 237;
                    Enimes[31] = 242;
                    Enimes[32] = 244;
                    Enimes[33] = 246;
                    Enimes[34] = 248;
                    Enimes[35] = 250;
                    Enimes[36] = 252;
                    Enimes[37] = 254;
                    Enimes[38] = 256;
                    Enimes[39] = 258;
                    Enimes[40] = 281;
                    Enimes[41] = 283;
                    Enimes[42] = 285;
                    Enimes[43] = 287;
                    Enimes[44] = 289;
                    Enimes[45] = 291;
                    Enimes[46] = 293;
                    Enimes[47] = 295;
                    Enimes[48] = 297;
                    Enimes[49] = 302;
                    Enimes[50] = 304;
                    Enimes[51] = 306;
                    Enimes[52] = 308;
                    Enimes[53] = 310;
                    Enimes[54] = 312;
                    Enimes[55] = 314;
                    Enimes[56] = 316;
                    Enimes[57] = 318;
                    Enimes[58] = 322;
                    Enimes[59] = 324;
                    Enimes[60] = 326;
                    Enimes[61] = 328;
                    Enimes[62] = 330;
                    Enimes[63] = 332;
                    Enimes[64] = 334;
                    Enimes[65] = 336;
                    break;
                case 42:
                    ChangeOverLevels(LevelFourtytwo);
                    x = 80;
                    y = 40;
                    KeysNeeded = 6;
                    HasSpikes = true;
                    HasEnimes = true;
                    Enimes[1] = 40;
                    Enimes[41] = 21;
                    Enimes[2] = 42;
                    Enimes[3] = 63;
                    Enimes[4] = 84;
                    Enimes[5] = 105;
                    Enimes[6] = 29;
                    Enimes[7] = 50;
                    Enimes[8] = 69;
                    Enimes[9] = 90;
                    Enimes[10] = 109;
                    Enimes[11] = 38;
                    Enimes[12] = 57;
                    Enimes[13] = 76;
                    Enimes[14] = 95;
                    Enimes[15] = 114;
                    Enimes[16] = 161;
                    Enimes[17] = 163;
                    Enimes[18] = 165;
                    Enimes[19] = 182;
                    Enimes[20] = 184;
                    Enimes[21] = 174;
                    Enimes[22] = 176;
                    Enimes[23] = 178;
                    Enimes[24] = 195;
                    Enimes[25] = 197;
                    Enimes[26] = 321;
                    Enimes[27] = 302;
                    Enimes[28] = 283;
                    Enimes[29] = 264;
                    Enimes[30] = 245;
                    Enimes[31] = 249;
                    Enimes[32] = 270;
                    Enimes[33] = 289;
                    Enimes[34] = 310;
                    Enimes[35] = 329;
                    Enimes[36] = 254;
                    Enimes[37] = 275;
                    Enimes[38] = 296;
                    Enimes[39] = 317;
                    Enimes[40] = 338;
                    break;
                case 43:
                    ChangeOverLevels(LevelFourtythree);
                    KeysNeeded = 5;
                    Fence[0] = 2;
                    Fence[1] = 201;
                    Fence[2] = 118;
                    Lock[0] = 23;
                    Lock[1] = 38;
                    HasEnimes = true;
                    HasSpikes = true;
                    Enimes[1] = 4;
                    Enimes[2] = 163;
                    Enimes[3] = 165;
                    Enimes[4] = 185;
                    Enimes[5] = 187;
                    break;
                case 44: ChangeOverLevels(LevelFourtyfour); KeysNeeded = 4; break;
                case 45:
                    ChangeOverLevels(LevelFourtyfive);
                    KeysNeeded = 6;
                    y = 320;
                    Fence[0] = 2;
                    Fence[1] = 202;
                    Fence[2] = 157;
                    Lock[1] = 198;
                    Lock[0] = 121;
                    HasEnimes = true;
                    HasSpikes = true;
                    Enimes[1] = 4;
                    Enimes[2] = 77;
                    Enimes[3] = 138;
                    Enimes[4] = 221;
                    Enimes[5] = 282;
                    break;
                case 46:
                    ChangeOverLevels(LevelFourtysix);
                    KeysNeeded = 5;
                    HasEnimes = true;
                    Enimes[1] = 4;
                    Enimes[2] = 44;
                    Enimes[3] = 129;
                    Enimes[4] = 303;
                    Enimes[5] = 323;
                    break;
                case 47:
                    ChangeOverLevels(LevelFourtyseven);
                    y = 640;
                    KeysNeeded = 4;
                    HasEnimes = true;
                    HasSpikes = true;
                    Enimes[1] = 3;
                    Enimes[2] = 36;
                    Enimes[3] = 38;
                    Enimes[4] = 151;
                    break;
                case 48:
                    ChangeOverLevels(LevelFourtyeight);
                    KeysNeeded = 6;
                    HasEnimes = true;
                    HasSpikes = true;
                    Enimes[1] = 16;
                    Enimes[2] = 42;
                    Enimes[3] = 58;
                    Enimes[4] = 270;
                    Enimes[5] = 298;
                    Enimes[6] = 309;
                    Enimes[7] = 316;
                    Enimes[8] = 93;
                    Enimes[9] = 114;
                    Enimes[10] = 132;
                    Enimes[11] = 155;
                    Enimes[12] = 173;
                    Enimes[13] = 194;
                    Enimes[14] = 215;
                    Enimes[15] = 234;
                    Enimes[16] = 255;
                    break;
                case 49:
                    ChangeOverLevels(LevelFourtynine);
                    x = 720;
                    y = 200;
                    KeysNeeded = 4;
                    Fence[0] = 1;
                    HasEnimes = true;
                    HasSpikes = true;
                    Enimes[1] = 24;
                    Enimes[2] = 44;
                    Enimes[3] = 46;
                    Enimes[4] = 65;
                    Enimes[5] = 67;
                    Enimes[6] = 55;
                    Enimes[7] = 144;
                    Enimes[8] = 145;
                    Enimes[9] = 146;
                    Enimes[10] = 164;
                    Enimes[11] = 165;
                    Enimes[12] = 166;
                    Enimes[13] = 184;
                    Enimes[14] = 185;
                    Enimes[15] = 186;
                    Enimes[16] = 153;
                    Enimes[17] = 154;
                    Enimes[18] = 155;
                    Enimes[19] = 173;
                    Enimes[20] = 174;
                    Enimes[21] = 175;
                    Enimes[22] = 193;
                    Enimes[23] = 194;
                    Enimes[24] = 195;
                    break;
                case 50: ChangeOverLevels(LevelFifty); Fence[0] = 1; break;
                case 51: ChangeOverLevels(LevelFiftyone); HasSpikes = true; break;
                case 52:
                    ChangeOverLevels(LevelFiftytwo);
                    y = 320;
                    KeysNeeded = 4;
                    HasEnimes = true;
                    Enimes[1] = 14;
                    Enimes[2] = 323;
                    Enimes[3] = 325;
                    Enimes[4] = 327;
                    Enimes[5] = 309;
                    Enimes[6] = 331;
                    Enimes[7] = 333;
                    Enimes[8] = 315;
                    Enimes[9] = 117;
                    Enimes[10] = 218;
                    Enimes[11] = 277;
                    Enimes[12] = 317;
                    Enimes[13] = 318;
                    Enimes[14] = 337;
                    Enimes[15] = 338;
                    break;
                case 53:
                    ChangeOverLevels(LevelFiftythree);
                    KeysNeeded = 6;
                    HasEnimes = true;
                    Enimes[1] = 6;
                    Enimes[2] = 222;
                    Enimes[3] = 188;
                    Enimes[4] = 276;
                    Enimes[5] = 117;
                    Enimes[6] = 137;
                    Enimes[7] = 138;
                    break;
                case 90:
                    ChangeOverLevels(LevelNinty);
                    x = 120;
                    y = 160;
                    KeysNeeded = 2;
                    Fence[0] = 3;
                    Fence[1] = 71;
                    Fence[2] = 278;
                    Fence[3] = 169;
                    Lock[0] = 163;
                    Lock[2] = 338;
                    Lock[1] = 321;
                    HasEnimes = true;
                    HasSpikes = true;
                    Enimes[1] = 16;
                    Enimes[2] = 25;
                    Enimes[3] = 32;
                    Enimes[4] = 116;
                    Enimes[5] = 118;
                    Enimes[6] = 127;
                    Enimes[7] = 133;
                    Enimes[8] = 136;
                    Enimes[9] = 165;
                    Enimes[10] = 172;
                    Enimes[11] = 218;
                    Enimes[12] = 256;
                    Enimes[13] = 270;
                    Enimes[14] = 281;
                    Enimes[15] = 302;
                    Enimes[16] = 316;
                    Enimes[17] = 330;
                    break;
                case 91:
                    ChangeOverLevels(LevelNintyone);
                    x = 720;
                    y = 640;
                    HasEnimes = true;
                    HasSpikes = true;
                    Enimes[1] = 25;
                    Enimes[2] = 45;
                    Enimes[3] = 66;
                    Enimes[4] = 125;
                    Enimes[5] = 186;
                    Enimes[6] = 245;
                    Enimes[7] = 306;
                    Enimes[8] = 49;
                    Enimes[9] = 88;
                    Enimes[10] = 129;
                    Enimes[11] = 169;
                    Enimes[12] = 209;
                    Enimes[13] = 248;
                    Enimes[14] = 289;
                    Enimes[15] = 52;
                    Enimes[16] = 171;
                    Enimes[17] = 291;
                    Enimes[18] = 311;
                    Enimes[19] = 155;
                    Enimes[20] = 195;
                    Enimes[21] = 137;
                    Enimes[22] = 178;
                    Enimes[23] = 217;
                    Enimes[24] = 257;
                    Enimes[25] = 298;
                    Enimes[26] = 278;
                    break;
                case 92:
                    ChangeOverLevels(LevelNintytwo);
                    x = 80;
                    KeysNeeded = 4;
                    Fence[0] = 4;
                    Fence[1] = 30;
                    Fence[2] = 177;
                    Fence[3] = 289;
                    Fence[4] = 184;
                    Lock[0] = 109;
                    Lock[1] = 118;
                    Lock[2] = 275;
                    Lock[3] = 247;
                    HasEnimes = true;
                    HasSpikes = true;
                    Enimes[1] = 33;
                    Enimes[2] = 111;
                    Enimes[3] = 92;
                    Enimes[4] = 73;
                    Enimes[5] = 54;
                    Enimes[6] = 35;
                    Enimes[7] = 95;
                    Enimes[8] = 98;
                    Enimes[9] = 117;
                    Enimes[10] = 134;
                    Enimes[11] = 136;
                    Enimes[12] = 158;
                    Enimes[13] = 194;
                    Enimes[14] = 195;
                    Enimes[15] = 196;
                    Enimes[16] = 198;
                    Enimes[17] = 253;
                    Enimes[18] = 272;
                    Enimes[19] = 290;
                    Enimes[20] = 293;
                    Enimes[21] = 297;
                    Enimes[22] = 311;
                    Enimes[23] = 332;
                    Enimes[24] = 335;
                    Enimes[25] = 202;
                    Enimes[26] = 224;
                    Enimes[27] = 242;
                    Enimes[28] = 264;
                    Enimes[29] = 282;
                    Enimes[30] = 266;
                    Enimes[31] = 268;
                    Enimes[32] = 150;
                    Enimes[33] = 169;
                    Enimes[34] = 172;
                    break;
                case 93:
                    ChangeOverLevels(LevelNintythree);
                    x = 80;
                    y = 600;
                    KeysNeeded = 6;
                    Fence[0] = 9;
                    Fence[1] = 193;
                    Fence[2] = 213;
                    Fence[3] = 233;
                    Fence[4] = 253;
                    Fence[5] = 273;
                    Fence[6] = 293;
                    Fence[7] = 314;
                    Fence[8] = 315;
                    Fence[9] = 316;
                    Lock[0] = 303;
                    Lock[1] = 304;
                    Lock[2] = 305;
                    Lock[3] = 286;
                    Lock[4] = 266;
                    Lock[5] = 246;
                    Lock[6] = 226;
                    Lock[7] = 206;
                    Lock[8] = 186;
                    HasEnimes = true;
                    HasSpikes = true;
                    Enimes[1] = 26;
                    Enimes[2] = 21;
                    Enimes[3] = 29;
                    Enimes[4] = 37;
                    Enimes[5] = 42;
                    Enimes[6] = 48;
                    Enimes[7] = 50;
                    Enimes[8] = 56;
                    Enimes[9] = 58;
                    Enimes[10] = 63;
                    Enimes[11] = 67;
                    Enimes[12] = 71;
                    Enimes[13] = 75;
                    Enimes[14] = 84;
                    Enimes[15] = 86;
                    Enimes[16] = 92;
                    Enimes[17] = 94;
                    Enimes[18] = 103;
                    Enimes[19] = 105;
                    Enimes[20] = 113;
                    Enimes[21] = 115;
                    Enimes[22] = 162;
                    Enimes[23] = 145;
                    Enimes[24] = 168;
                    Enimes[25] = 151;
                    Enimes[26] = 174;
                    Enimes[27] = 157;
                    break;
                //default: EndScreen(); break;
            }
        }
    }
}
